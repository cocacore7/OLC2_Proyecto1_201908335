package main;
import ( "fmt" ); 
var stack [30101999]float64;
var heap [30101999]float64;
var P, H float64;
var t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21 float64;

func math_error_proc(){
fmt.Printf("%c", 77);
fmt.Printf("%c", 97);
fmt.Printf("%c", 116);
fmt.Printf("%c", 104);
fmt.Printf("%c", 69); 
fmt.Printf("%c", 114);
fmt.Printf("%c", 114);
fmt.Printf("%c", 111);
fmt.Printf("%c", 114);
fmt.Printf("%c", 10);
}

func print_true_proc(){
fmt.Printf("%c", int(116));
fmt.Printf("%c", int(114));
fmt.Printf("%c", int(117));
fmt.Printf("%c", int(101));
}

func print_false_proc(){
fmt.Printf("%c", int(102));
fmt.Printf("%c", int(97));
fmt.Printf("%c", int(108));
fmt.Printf("%c", int(115));
fmt.Printf("%c", int(101));
}

func print_nothing_proc(){
fmt.Printf("%c", int(78));
fmt.Printf("%c", int(111));
fmt.Printf("%c", int(116));
fmt.Printf("%c", int(104));
fmt.Printf("%c", int(105));
fmt.Printf("%c", int(110));
fmt.Printf("%c", int(103));
}

func print_String_proc(){
t0=P;
t1 =t0;
L0:
t2= heap[int(t1)];
if t2==-1{ goto L1;}
fmt.Printf("%c", int(t2));
t1=t1+1;
goto L0;
L1:
return;
}

func concatenate_strings_proc(){
t3=P;
t4 =t3;
L2:
t5= heap[int(t4)];
if t5==-1{ goto L3;}
heap[int(H)] = t5;
H = H +1;
t4=t4+1;
goto L2;
L3:
return;
}
func JOLC_sumar(){
t6= P+1;
t7= P+2;
t8= P+3;
t9 = stack[int(3)];
t10 = P;
P = t9;
print_String_proc();
P = t10;
fmt.Printf("%c",10);
t12 = stack[int(1)];
t13 = stack[int(2)];
t14 = t12 + t13;
t11 = t14  ;
stack[int(0)] = t11;
}

func JOLC_restar(){
t15= P+1;
t16= P+2;
t18 = stack[int(1)];
t19 = stack[int(2)];
t20 = t18 - t19;
t17 = t20  ;
stack[int(0)] = t17;
}


func main(){
P = P + 0;
stack[int(1)] = 5;
stack[int(2)] = 10;
t21= H;
heap[int(H)] = 72;
H = H + 1;
heap[int(H)] = 111;
H = H + 1;
heap[int(H)] = 108;
H = H + 1;
heap[int(H)] = 97;
H = H + 1;
heap[int(H)] = -1;
H = H + 1;
stack[int(3)] = t21;
JOLC_sumar();
P = P - 0;
fmt.Printf("%d",int(t14));
fmt.Printf("%c",10);
P = P + 0;
stack[int(1)] = 5;
stack[int(2)] = 10;
JOLC_restar();
P = P - 0;
fmt.Printf("%d",int(t20));
fmt.Printf("%c",10);
}
