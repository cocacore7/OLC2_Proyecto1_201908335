package main;
import ( "fmt" ); 
var stack [10000]float64;
var heap [10000]float64;
var P, H float64;
var t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11 float64;

func math_error_proc(){
fmt.Printf("%c", 77);
fmt.Printf("%c", 97);
fmt.Printf("%c", 116);
fmt.Printf("%c", 104);
fmt.Printf("%c", 69); 
fmt.Printf("%c", 114);
fmt.Printf("%c", 114);
fmt.Printf("%c", 111);
fmt.Printf("%c", 114);
fmt.Printf("%c", 10);
}

func print_true_proc(){
fmt.Printf("%c", int(116));
fmt.Printf("%c", int(114));
fmt.Printf("%c", int(117));
fmt.Printf("%c", int(101));
}

func print_false_proc(){
fmt.Printf("%c", int(102));
fmt.Printf("%c", int(97));
fmt.Printf("%c", int(108));
fmt.Printf("%c", int(115));
fmt.Printf("%c", int(101));
}

func print_nothing_proc(){
fmt.Printf("%c", int(78));
fmt.Printf("%c", int(111));
fmt.Printf("%c", int(116));
fmt.Printf("%c", int(104));
fmt.Printf("%c", int(105));
fmt.Printf("%c", int(110));
fmt.Printf("%c", int(103));
}

func print_String_proc(){
t0=P+1;
t1=stack[int(t0)];
L1:
t2=heap[int(t1)];
if t2 == -1 {goto L0;}
fmt.Printf("%c", int(t2));
t1=t1+1;
goto L1;
L0:
return;
}

func main(){
t3 = 3 * 5;
stack[int(0)] = t3;
stack[int(1)] = 45;
if 3 < 5 {goto L0;}
goto L1;
L0:
t4 = 1  ;
goto L2;
L1:
t4 = 0  ;
L2:
if 7 > 5 {goto L3;}
goto L4;
L3:
t5 = 1  ;
goto L5;
L4:
t5 = 0  ;
L5:
if t4 == 1 {goto L6;}
if t5 == 1 {goto L6;}
goto L7;
L7:
t6 = 0  ;
goto L8;
L6:
t6 = 1  ;
L8:
stack[int(2)] = t6;
t7 = stack[int(0)];
fmt.Printf("%d",int(t7));
fmt.Printf("%c",10);
t8 = stack[int(0)];
t9 = stack[int(1)];
t10 = t8 + t9;
fmt.Printf("%d",int(t10));
fmt.Printf("%c",10);
t11 = stack[int(2)];
if t11 == 1 {goto L10;}
goto L11;
L10:
print_true_proc();
goto L9;
L11:
print_false_proc();
L9:
fmt.Printf("%c",10);
}
