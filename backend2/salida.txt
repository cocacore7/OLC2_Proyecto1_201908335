package main;
import ( "fmt" ); 
var stack [30101999]float64;
var heap [30101999]float64;
var P, H float64;
var t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10 float64;

func math_error_proc(){
fmt.Printf("%c", 77);
fmt.Printf("%c", 97);
fmt.Printf("%c", 116);
fmt.Printf("%c", 104);
fmt.Printf("%c", 69); 
fmt.Printf("%c", 114);
fmt.Printf("%c", 114);
fmt.Printf("%c", 111);
fmt.Printf("%c", 114);
fmt.Printf("%c", 10);
}

func print_true_proc(){
fmt.Printf("%c", int(116));
fmt.Printf("%c", int(114));
fmt.Printf("%c", int(117));
fmt.Printf("%c", int(101));
}

func print_false_proc(){
fmt.Printf("%c", int(102));
fmt.Printf("%c", int(97));
fmt.Printf("%c", int(108));
fmt.Printf("%c", int(115));
fmt.Printf("%c", int(101));
}

func print_nothing_proc(){
fmt.Printf("%c", int(78));
fmt.Printf("%c", int(111));
fmt.Printf("%c", int(116));
fmt.Printf("%c", int(104));
fmt.Printf("%c", int(105));
fmt.Printf("%c", int(110));
fmt.Printf("%c", int(103));
}

func print_String_proc(){
t0=P;
t1 =t0;
L0:
t2= heap[int(t1)];
if t2==-1{ goto L1;}
fmt.Printf("%c", int(t2));
t1=t1+1;
goto L0;
L1:
return;
}

func concatenate_strings_proc(){
t3=P;
t4 =t3;
L2:
t5= heap[int(t4)];
if t5==-1{ goto L3;}
heap[int(H)] = t5;
H = H +1;
t4=t4+1;
goto L2;
L3:
return;
}
func JOLC_a(){
stack[int(2)] = 25;
t6 = stack[int(0)];
fmt.Printf("%d",int(t6));
fmt.Printf("%c",10);
t7 = stack[int(2)];
fmt.Printf("%d",int(t7));
fmt.Printf("%c",10);
}
func main(){
stack[int(0)] = 15;
t8 = stack[int(0)];
fmt.Printf("%d",int(t8));
fmt.Printf("%c",10);
JOLC_a();
stack[int(1)] = 10;
stack[int(2)] = 5;
t9 = stack[int(1)];
fmt.Printf("%d",int(t9));
fmt.Printf("%c",10);
t10 = stack[int(2)];
fmt.Printf("%d",int(t10));
fmt.Printf("%c",10);
}
