Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RBOOLA
    RCHARA
    RFLOATA
    RINTA
    RSTRINGA

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructionsf -> instructionsf instructionf
Rule 5     instructionsf -> instructionf
Rule 6     instructionsc -> instructionsc instructionc
Rule 7     instructionsc -> instructionc
Rule 8     instruction -> p_print
Rule 9     instruction -> p_println
Rule 10    instruction -> declaration
Rule 11    instruction -> assignmentA
Rule 12    instruction -> function
Rule 13    instruction -> callFuncSt
Rule 14    instruction -> ifSt
Rule 15    instruction -> whileSt
Rule 16    instruction -> forSt
Rule 17    instruction -> returnST
Rule 18    instruction -> breakST
Rule 19    instruction -> continueST
Rule 20    instructionf -> p_print
Rule 21    instructionf -> p_println
Rule 22    instructionf -> declarationf
Rule 23    instructionf -> assignmentAf
Rule 24    instructionf -> callFuncSt
Rule 25    instructionf -> ifSt
Rule 26    instructionf -> whileSt
Rule 27    instructionf -> forSt
Rule 28    instructionf -> returnST
Rule 29    instructionf -> breakST
Rule 30    instructionf -> continueST
Rule 31    instructionc -> p_print
Rule 32    instructionc -> p_println
Rule 33    instructionc -> declarationc
Rule 34    instructionc -> assignmentAc
Rule 35    instructionc -> callFuncSt
Rule 36    instructionc -> ifStc
Rule 37    instructionc -> whileSt
Rule 38    instructionc -> forSt
Rule 39    instructionc -> returnST
Rule 40    instructionc -> breakST
Rule 41    instructionc -> continueST
Rule 42    p_print -> PRINT PARIZQ exps PARDER PTCOMA
Rule 43    p_print -> PRINT PARIZQ PARDER PTCOMA
Rule 44    p_println -> PRINTLN PARIZQ exps PARDER PTCOMA
Rule 45    p_println -> PRINTLN PARIZQ PARDER PTCOMA
Rule 46    exps -> exps COMA exp
Rule 47    exps -> exp
Rule 48    declaration -> ID IGUAL exp PTCOMA
Rule 49    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 50    declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 51    declaration -> GLOBAL ID IGUAL exp PTCOMA
Rule 52    declaration -> GLOBAL ID PTCOMA
Rule 53    declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 54    declaration -> LOCAL ID IGUAL exp PTCOMA
Rule 55    declaration -> LOCAL ID PTCOMA
Rule 56    declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 57    declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 58    declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 59    declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 60    declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 61    declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 62    declarationf -> ID IGUAL exp PTCOMA
Rule 63    declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 64    declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 65    declarationf -> GLOBAL ID IGUAL exp PTCOMA
Rule 66    declarationf -> GLOBAL ID PTCOMA
Rule 67    declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 68    declarationf -> LOCAL ID IGUAL exp PTCOMA
Rule 69    declarationf -> LOCAL ID PTCOMA
Rule 70    declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 71    declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 72    declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 73    declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 74    declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 75    declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 76    declarationc -> ID IGUAL exp PTCOMA
Rule 77    declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 78    declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 79    declarationc -> LOCAL ID IGUAL exp PTCOMA
Rule 80    declarationc -> LOCAL ID PTCOMA
Rule 81    declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 82    declarationc -> GLOBAL ID IGUAL exp PTCOMA
Rule 83    declarationc -> GLOBAL ID PTCOMA
Rule 84    declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 85    declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 86    declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 87    declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 88    declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 89    declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 90    assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 91    assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 92    assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 93    assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 94    assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 95    assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 96    assignmentA -> ID listArray2 IGUAL exp PTCOMA
Rule 97    assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 98    assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 99    assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA
Rule 100   assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 101   assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA
Rule 102   assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 103   assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 104   assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 105   assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 106   assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 107   assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 108   assignmentAf -> ID listArray2 IGUAL exp PTCOMA
Rule 109   assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 110   assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 111   assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA
Rule 112   assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 113   assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA
Rule 114   assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 115   assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 116   assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 117   assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 118   assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 119   assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 120   assignmentAc -> ID listArray2 IGUAL exp PTCOMA
Rule 121   assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 122   assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 123   assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA
Rule 124   assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 125   assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA
Rule 126   function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf
Rule 127   function -> FUNCTION ID parametersFunc blockf
Rule 128   parametersFunc -> PARIZQ parameters PARDER
Rule 129   parametersFunc -> PARIZQ PARDER
Rule 130   parameters -> parameters COMA parameter
Rule 131   parameters -> parameter
Rule 132   parameter -> ID DOSPT DOSPT typeDef
Rule 133   parameter -> ID
Rule 134   callFuncSt -> ID parametersCallFunc PTCOMA
Rule 135   exp -> ID parametersCallFunc
Rule 136   parametersCallFunc -> PARIZQ listValues PARDER
Rule 137   parametersCallFunc -> PARIZQ PARDER
Rule 138   listValues -> listValues COMA exp
Rule 139   listValues -> exp
Rule 140   ifSt -> RIF exp END PTCOMA
Rule 141   ifSt -> RIF exp blockiff END PTCOMA
Rule 142   ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA
Rule 143   ifSt -> RIF exp blockiff RELSE END PTCOMA
Rule 144   ifSt -> RIF exp blockiff elseifSt END PTCOMA
Rule 145   ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
Rule 146   ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA
Rule 147   elseifSt -> elseifSt conelseif
Rule 148   elseifSt -> conelseif
Rule 149   conelseif -> RELSEIF exp blockiff
Rule 150   conelseif -> RELSEIF exp
Rule 151   ifStc -> RIF exp END PTCOMA
Rule 152   ifStc -> RIF exp blockifc END PTCOMA
Rule 153   ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA
Rule 154   ifStc -> RIF exp blockifc RELSE END PTCOMA
Rule 155   ifStc -> RIF exp blockifc elseifStc END PTCOMA
Rule 156   ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
Rule 157   ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA
Rule 158   elseifStc -> elseifStc conelseifc
Rule 159   elseifStc -> conelseifc
Rule 160   conelseifc -> RELSEIF exp blockifc
Rule 161   conelseifc -> RELSEIF exp
Rule 162   whileSt -> RWHILE exp blockc
Rule 163   forSt -> RFOR parameterFor RIN exp DOSPT exp blockc
Rule 164   forSt -> RFOR parameterFor RIN exp blockc
Rule 165   parameterFor -> ID DOSPT DOSPT typeDef
Rule 166   parameterFor -> ID
Rule 167   blockf -> instructionsf END PTCOMA
Rule 168   blockf -> END PTCOMA
Rule 169   blockc -> instructionsc END PTCOMA
Rule 170   blockc -> END PTCOMA
Rule 171   blockiff -> instructionsf
Rule 172   blockifc -> instructionsc
Rule 173   returnST -> RRETURN exp PTCOMA
Rule 174   returnST -> RRETURN PTCOMA
Rule 175   breakST -> RBREAK PTCOMA
Rule 176   continueST -> RCONTINUE PTCOMA
Rule 177   listArray -> listArray CORIZQ exp CORDER
Rule 178   listArray -> CORIZQ exp CORDER
Rule 179   listArray2 -> listArray2 CORIZQ exp CORDER
Rule 180   listArray2 -> CORIZQ exp CORDER
Rule 181   exp -> exp MAS exp
Rule 182   exp -> exp MENOS exp
Rule 183   exp -> exp MULTIPLICACION exp
Rule 184   exp -> exp DIVISION exp
Rule 185   exp -> exp POTENCIA exp
Rule 186   exp -> exp MODULO exp
Rule 187   exp -> MENOS exp
Rule 188   exp -> exp IGUALIGUAL exp
Rule 189   exp -> exp DISTINTO exp
Rule 190   exp -> exp MAYOR exp
Rule 191   exp -> exp MENOR exp
Rule 192   exp -> exp MAYORIGUAL exp
Rule 193   exp -> exp MENORIGUAL exp
Rule 194   exp -> exp ANDD exp
Rule 195   exp -> exp ORR exp
Rule 196   exp -> NOTT exp
Rule 197   exp -> UPPERCASE PARIZQ exp PARDER
Rule 198   exp -> LOWERCASE PARIZQ exp PARDER
Rule 199   exp -> RLENGTH PARIZQ exp PARDER
Rule 200   exp -> PARSE PARIZQ typeDef COMA exp PARDER
Rule 201   exp -> TRUNC PARIZQ typeDef COMA exp PARDER
Rule 202   exp -> TRUNC PARIZQ exp PARDER
Rule 203   exp -> MFLOAT PARIZQ exp PARDER
Rule 204   exp -> MSTRING PARIZQ exp PARDER
Rule 205   typeDef -> RINT
Rule 206   typeDef -> RFLOAT
Rule 207   typeDef -> RSTRING
Rule 208   typeDef -> RCHAR
Rule 209   typeDef -> RBOOL
Rule 210   typeDef -> RARRAY LLAIZQ RINT LLADER
Rule 211   typeDef -> RARRAY LLAIZQ RFLOAT LLADER
Rule 212   typeDef -> RARRAY LLAIZQ RSTRING LLADER
Rule 213   typeDef -> RARRAY LLAIZQ RCHAR LLADER
Rule 214   typeDef -> RARRAY LLAIZQ RBOOL LLADER
Rule 215   exp -> PARIZQ exp PARDER
Rule 216   exp -> ENTERO
Rule 217   exp -> DECIMAL
Rule 218   exp -> STRING
Rule 219   exp -> CHAR
Rule 220   exp -> VERDADERO
Rule 221   exp -> FALSO
Rule 222   exp -> NULO
Rule 223   exp -> ID
Rule 224   exp -> ID listArray
Rule 225   exp -> CORIZQ listValues CORDER
Rule 226   exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef
Rule 227   exp -> CORIZQ CORDER

Terminals, with rules where they appear

ANDD                 : 194
CHAR                 : 219
COMA                 : 46 130 138 200 201
CORDER               : 56 57 58 59 60 61 70 71 72 73 74 75 84 85 86 87 88 89 90 91 92 93 94 95 102 103 104 105 106 107 114 115 116 117 118 119 177 178 179 180 225 226 227
CORIZQ               : 56 57 58 59 60 61 70 71 72 73 74 75 84 85 86 87 88 89 90 91 92 93 94 95 102 103 104 105 106 107 114 115 116 117 118 119 177 178 179 180 225 226 227
DECIMAL              : 217
DISTINTO             : 189
DIVISION             : 184
DOSPT                : 49 49 50 50 53 53 57 57 58 58 60 60 63 63 64 64 67 67 71 71 72 72 74 74 77 77 78 78 81 81 85 85 86 86 88 88 91 91 92 92 94 94 97 97 98 98 100 100 103 103 104 104 106 106 109 109 110 110 112 112 115 115 116 116 118 118 121 121 122 122 124 124 126 126 132 132 163 165 165 226 226
END                  : 140 141 142 143 144 145 146 151 152 153 154 155 156 157 167 168 169 170
ENTERO               : 216
FALSO                : 221
FUNCTION             : 126 127
GLOBAL               : 50 51 52 58 59 64 65 66 72 73 81 82 83 86 87 92 93 98 99 104 105 110 111 116 117 122 123
ID                   : 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 132 133 134 135 165 166 223 224
IGUAL                : 48 49 50 51 53 54 56 57 58 59 60 61 62 63 64 65 67 68 70 71 72 73 74 75 76 77 78 79 81 82 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125
IGUALIGUAL           : 188
LLADER               : 210 211 212 213 214
LLAIZQ               : 210 211 212 213 214
LOCAL                : 53 54 55 60 61 67 68 69 74 75 78 79 80 88 89 94 95 100 101 106 107 112 113 118 119 124 125
LOWERCASE            : 198
MAS                  : 181
MAYOR                : 190
MAYORIGUAL           : 192
MENOR                : 191
MENORIGUAL           : 193
MENOS                : 182 187
MFLOAT               : 203
MODULO               : 186
MSTRING              : 204
MULTIPLICACION       : 183
NOTT                 : 196
NULO                 : 222
ORR                  : 195
PARDER               : 42 43 44 45 128 129 136 137 197 198 199 200 201 202 203 204 215
PARIZQ               : 42 43 44 45 128 129 136 137 197 198 199 200 201 202 203 204 215
PARSE                : 200
POTENCIA             : 185
PRINT                : 42 43
PRINTLN              : 44 45
PTCOMA               : 42 43 44 45 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 134 140 141 142 143 144 145 146 151 152 153 154 155 156 157 167 168 169 170 173 174 175 176
RARRAY               : 210 211 212 213 214
RBOOL                : 209 214
RBOOLA               : 
RBREAK               : 175
RCHAR                : 208 213
RCHARA               : 
RCONTINUE            : 176
RELSE                : 142 143 145 146 153 154 156 157
RELSEIF              : 149 150 160 161
RFLOAT               : 206 211
RFLOATA              : 
RFOR                 : 163 164
RIF                  : 140 141 142 143 144 145 146 151 152 153 154 155 156 157
RIN                  : 163 164
RINT                 : 205 210
RINTA                : 
RLENGTH              : 199
RRETURN              : 173 174
RSTRING              : 207 212
RSTRINGA             : 
RWHILE               : 162
STRING               : 218
TRUNC                : 201 202
UPPERCASE            : 197
VERDADERO            : 220
error                : 

Nonterminals, with rules where they appear

assignmentA          : 11
assignmentAc         : 34
assignmentAf         : 23
blockc               : 162 163 164
blockf               : 126 127
blockifc             : 152 153 153 154 155 156 156 157 160
blockiff             : 141 142 142 143 144 145 145 146 149
breakST              : 18 29 40
callFuncSt           : 13 24 35
conelseif            : 147 148
conelseifc           : 158 159
continueST           : 19 30 41
declaration          : 10
declarationc         : 33
declarationf         : 22
elseifSt             : 144 145 146 147
elseifStc            : 155 156 157 158
exp                  : 46 47 48 49 50 51 53 54 62 63 64 65 67 68 76 77 78 79 81 82 96 97 98 99 100 101 108 109 110 111 112 113 120 121 122 123 124 125 138 139 140 141 142 143 144 145 146 149 150 151 152 153 154 155 156 157 160 161 162 163 163 164 173 177 178 179 180 181 181 182 182 183 183 184 184 185 185 186 186 187 188 188 189 189 190 190 191 191 192 192 193 193 194 194 195 195 196 197 198 199 200 201 202 203 204 215
exps                 : 42 44 46 56 57 58 59 60 61 70 71 72 73 74 75 84 85 86 87 88 89 90 91 92 93 94 95 102 103 104 105 106 107 114 115 116 117 118 119
forSt                : 16 27 38
function             : 12
ifSt                 : 14 25
ifStc                : 36
initial              : 0
instruction          : 2 3
instructionc         : 6 7
instructionf         : 4 5
instructions         : 1 2
instructionsc        : 6 169 172
instructionsf        : 4 167 171
listArray            : 177 224
listArray2           : 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 179
listValues           : 136 138 225 226
p_print              : 8 20 31
p_println            : 9 21 32
parameter            : 130 131
parameterFor         : 163 164
parameters           : 128 130
parametersCallFunc   : 134 135
parametersFunc       : 126 127
returnST             : 17 28 39
typeDef              : 49 50 53 57 58 60 63 64 67 71 72 74 77 78 81 85 86 88 91 92 94 97 98 100 103 104 106 109 110 112 115 116 118 121 122 124 126 132 165 200 201 226
whileSt              : 15 26 37

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . assignmentA
    (12) instruction -> . function
    (13) instruction -> . callFuncSt
    (14) instruction -> . ifSt
    (15) instruction -> . whileSt
    (16) instruction -> . forSt
    (17) instruction -> . returnST
    (18) instruction -> . breakST
    (19) instruction -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (48) declaration -> . ID IGUAL exp PTCOMA
    (49) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (52) declaration -> . GLOBAL ID PTCOMA
    (53) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (55) declaration -> . LOCAL ID PTCOMA
    (56) declaration -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (57) declaration -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (58) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (60) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (90) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (91) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (94) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (96) assignmentA -> . ID listArray2 IGUAL exp PTCOMA
    (97) assignmentA -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (98) assignmentA -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (100) assignmentA -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (126) function -> . FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf
    (127) function -> . FUNCTION ID parametersFunc blockf
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    GLOBAL          shift and go to state 19
    LOCAL           shift and go to state 20
    FUNCTION        shift and go to state 21
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    assignmentA                    shift and go to state 7
    function                       shift and go to state 8
    callFuncSt                     shift and go to state 9
    ifSt                           shift and go to state 10
    whileSt                        shift and go to state 11
    forSt                          shift and go to state 12
    returnST                       shift and go to state 13
    breakST                        shift and go to state 14
    continueST                     shift and go to state 15

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . assignmentA
    (12) instruction -> . function
    (13) instruction -> . callFuncSt
    (14) instruction -> . ifSt
    (15) instruction -> . whileSt
    (16) instruction -> . forSt
    (17) instruction -> . returnST
    (18) instruction -> . breakST
    (19) instruction -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (48) declaration -> . ID IGUAL exp PTCOMA
    (49) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (52) declaration -> . GLOBAL ID PTCOMA
    (53) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (55) declaration -> . LOCAL ID PTCOMA
    (56) declaration -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (57) declaration -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (58) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (60) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (90) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (91) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (94) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (96) assignmentA -> . ID listArray2 IGUAL exp PTCOMA
    (97) assignmentA -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (98) assignmentA -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (100) assignmentA -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (126) function -> . FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf
    (127) function -> . FUNCTION ID parametersFunc blockf
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 18
    GLOBAL          shift and go to state 19
    LOCAL           shift and go to state 20
    FUNCTION        shift and go to state 21
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    instruction                    shift and go to state 28
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    assignmentA                    shift and go to state 7
    function                       shift and go to state 8
    callFuncSt                     shift and go to state 9
    ifSt                           shift and go to state 10
    whileSt                        shift and go to state 11
    forSt                          shift and go to state 12
    returnST                       shift and go to state 13
    breakST                        shift and go to state 14
    continueST                     shift and go to state 15

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    GLOBAL          reduce using rule 3 (instructions -> instruction .)
    LOCAL           reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    RFOR            reduce using rule 3 (instructions -> instruction .)
    RRETURN         reduce using rule 3 (instructions -> instruction .)
    RBREAK          reduce using rule 3 (instructions -> instruction .)
    RCONTINUE       reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (8) instruction -> p_print .

    PRINT           reduce using rule 8 (instruction -> p_print .)
    PRINTLN         reduce using rule 8 (instruction -> p_print .)
    ID              reduce using rule 8 (instruction -> p_print .)
    GLOBAL          reduce using rule 8 (instruction -> p_print .)
    LOCAL           reduce using rule 8 (instruction -> p_print .)
    FUNCTION        reduce using rule 8 (instruction -> p_print .)
    RIF             reduce using rule 8 (instruction -> p_print .)
    RWHILE          reduce using rule 8 (instruction -> p_print .)
    RFOR            reduce using rule 8 (instruction -> p_print .)
    RRETURN         reduce using rule 8 (instruction -> p_print .)
    RBREAK          reduce using rule 8 (instruction -> p_print .)
    RCONTINUE       reduce using rule 8 (instruction -> p_print .)
    $end            reduce using rule 8 (instruction -> p_print .)


state 5

    (9) instruction -> p_println .

    PRINT           reduce using rule 9 (instruction -> p_println .)
    PRINTLN         reduce using rule 9 (instruction -> p_println .)
    ID              reduce using rule 9 (instruction -> p_println .)
    GLOBAL          reduce using rule 9 (instruction -> p_println .)
    LOCAL           reduce using rule 9 (instruction -> p_println .)
    FUNCTION        reduce using rule 9 (instruction -> p_println .)
    RIF             reduce using rule 9 (instruction -> p_println .)
    RWHILE          reduce using rule 9 (instruction -> p_println .)
    RFOR            reduce using rule 9 (instruction -> p_println .)
    RRETURN         reduce using rule 9 (instruction -> p_println .)
    RBREAK          reduce using rule 9 (instruction -> p_println .)
    RCONTINUE       reduce using rule 9 (instruction -> p_println .)
    $end            reduce using rule 9 (instruction -> p_println .)


state 6

    (10) instruction -> declaration .

    PRINT           reduce using rule 10 (instruction -> declaration .)
    PRINTLN         reduce using rule 10 (instruction -> declaration .)
    ID              reduce using rule 10 (instruction -> declaration .)
    GLOBAL          reduce using rule 10 (instruction -> declaration .)
    LOCAL           reduce using rule 10 (instruction -> declaration .)
    FUNCTION        reduce using rule 10 (instruction -> declaration .)
    RIF             reduce using rule 10 (instruction -> declaration .)
    RWHILE          reduce using rule 10 (instruction -> declaration .)
    RFOR            reduce using rule 10 (instruction -> declaration .)
    RRETURN         reduce using rule 10 (instruction -> declaration .)
    RBREAK          reduce using rule 10 (instruction -> declaration .)
    RCONTINUE       reduce using rule 10 (instruction -> declaration .)
    $end            reduce using rule 10 (instruction -> declaration .)


state 7

    (11) instruction -> assignmentA .

    PRINT           reduce using rule 11 (instruction -> assignmentA .)
    PRINTLN         reduce using rule 11 (instruction -> assignmentA .)
    ID              reduce using rule 11 (instruction -> assignmentA .)
    GLOBAL          reduce using rule 11 (instruction -> assignmentA .)
    LOCAL           reduce using rule 11 (instruction -> assignmentA .)
    FUNCTION        reduce using rule 11 (instruction -> assignmentA .)
    RIF             reduce using rule 11 (instruction -> assignmentA .)
    RWHILE          reduce using rule 11 (instruction -> assignmentA .)
    RFOR            reduce using rule 11 (instruction -> assignmentA .)
    RRETURN         reduce using rule 11 (instruction -> assignmentA .)
    RBREAK          reduce using rule 11 (instruction -> assignmentA .)
    RCONTINUE       reduce using rule 11 (instruction -> assignmentA .)
    $end            reduce using rule 11 (instruction -> assignmentA .)


state 8

    (12) instruction -> function .

    PRINT           reduce using rule 12 (instruction -> function .)
    PRINTLN         reduce using rule 12 (instruction -> function .)
    ID              reduce using rule 12 (instruction -> function .)
    GLOBAL          reduce using rule 12 (instruction -> function .)
    LOCAL           reduce using rule 12 (instruction -> function .)
    FUNCTION        reduce using rule 12 (instruction -> function .)
    RIF             reduce using rule 12 (instruction -> function .)
    RWHILE          reduce using rule 12 (instruction -> function .)
    RFOR            reduce using rule 12 (instruction -> function .)
    RRETURN         reduce using rule 12 (instruction -> function .)
    RBREAK          reduce using rule 12 (instruction -> function .)
    RCONTINUE       reduce using rule 12 (instruction -> function .)
    $end            reduce using rule 12 (instruction -> function .)


state 9

    (13) instruction -> callFuncSt .

    PRINT           reduce using rule 13 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 13 (instruction -> callFuncSt .)
    ID              reduce using rule 13 (instruction -> callFuncSt .)
    GLOBAL          reduce using rule 13 (instruction -> callFuncSt .)
    LOCAL           reduce using rule 13 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 13 (instruction -> callFuncSt .)
    RIF             reduce using rule 13 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 13 (instruction -> callFuncSt .)
    RFOR            reduce using rule 13 (instruction -> callFuncSt .)
    RRETURN         reduce using rule 13 (instruction -> callFuncSt .)
    RBREAK          reduce using rule 13 (instruction -> callFuncSt .)
    RCONTINUE       reduce using rule 13 (instruction -> callFuncSt .)
    $end            reduce using rule 13 (instruction -> callFuncSt .)


state 10

    (14) instruction -> ifSt .

    PRINT           reduce using rule 14 (instruction -> ifSt .)
    PRINTLN         reduce using rule 14 (instruction -> ifSt .)
    ID              reduce using rule 14 (instruction -> ifSt .)
    GLOBAL          reduce using rule 14 (instruction -> ifSt .)
    LOCAL           reduce using rule 14 (instruction -> ifSt .)
    FUNCTION        reduce using rule 14 (instruction -> ifSt .)
    RIF             reduce using rule 14 (instruction -> ifSt .)
    RWHILE          reduce using rule 14 (instruction -> ifSt .)
    RFOR            reduce using rule 14 (instruction -> ifSt .)
    RRETURN         reduce using rule 14 (instruction -> ifSt .)
    RBREAK          reduce using rule 14 (instruction -> ifSt .)
    RCONTINUE       reduce using rule 14 (instruction -> ifSt .)
    $end            reduce using rule 14 (instruction -> ifSt .)


state 11

    (15) instruction -> whileSt .

    PRINT           reduce using rule 15 (instruction -> whileSt .)
    PRINTLN         reduce using rule 15 (instruction -> whileSt .)
    ID              reduce using rule 15 (instruction -> whileSt .)
    GLOBAL          reduce using rule 15 (instruction -> whileSt .)
    LOCAL           reduce using rule 15 (instruction -> whileSt .)
    FUNCTION        reduce using rule 15 (instruction -> whileSt .)
    RIF             reduce using rule 15 (instruction -> whileSt .)
    RWHILE          reduce using rule 15 (instruction -> whileSt .)
    RFOR            reduce using rule 15 (instruction -> whileSt .)
    RRETURN         reduce using rule 15 (instruction -> whileSt .)
    RBREAK          reduce using rule 15 (instruction -> whileSt .)
    RCONTINUE       reduce using rule 15 (instruction -> whileSt .)
    $end            reduce using rule 15 (instruction -> whileSt .)


state 12

    (16) instruction -> forSt .

    PRINT           reduce using rule 16 (instruction -> forSt .)
    PRINTLN         reduce using rule 16 (instruction -> forSt .)
    ID              reduce using rule 16 (instruction -> forSt .)
    GLOBAL          reduce using rule 16 (instruction -> forSt .)
    LOCAL           reduce using rule 16 (instruction -> forSt .)
    FUNCTION        reduce using rule 16 (instruction -> forSt .)
    RIF             reduce using rule 16 (instruction -> forSt .)
    RWHILE          reduce using rule 16 (instruction -> forSt .)
    RFOR            reduce using rule 16 (instruction -> forSt .)
    RRETURN         reduce using rule 16 (instruction -> forSt .)
    RBREAK          reduce using rule 16 (instruction -> forSt .)
    RCONTINUE       reduce using rule 16 (instruction -> forSt .)
    $end            reduce using rule 16 (instruction -> forSt .)


state 13

    (17) instruction -> returnST .

    PRINT           reduce using rule 17 (instruction -> returnST .)
    PRINTLN         reduce using rule 17 (instruction -> returnST .)
    ID              reduce using rule 17 (instruction -> returnST .)
    GLOBAL          reduce using rule 17 (instruction -> returnST .)
    LOCAL           reduce using rule 17 (instruction -> returnST .)
    FUNCTION        reduce using rule 17 (instruction -> returnST .)
    RIF             reduce using rule 17 (instruction -> returnST .)
    RWHILE          reduce using rule 17 (instruction -> returnST .)
    RFOR            reduce using rule 17 (instruction -> returnST .)
    RRETURN         reduce using rule 17 (instruction -> returnST .)
    RBREAK          reduce using rule 17 (instruction -> returnST .)
    RCONTINUE       reduce using rule 17 (instruction -> returnST .)
    $end            reduce using rule 17 (instruction -> returnST .)


state 14

    (18) instruction -> breakST .

    PRINT           reduce using rule 18 (instruction -> breakST .)
    PRINTLN         reduce using rule 18 (instruction -> breakST .)
    ID              reduce using rule 18 (instruction -> breakST .)
    GLOBAL          reduce using rule 18 (instruction -> breakST .)
    LOCAL           reduce using rule 18 (instruction -> breakST .)
    FUNCTION        reduce using rule 18 (instruction -> breakST .)
    RIF             reduce using rule 18 (instruction -> breakST .)
    RWHILE          reduce using rule 18 (instruction -> breakST .)
    RFOR            reduce using rule 18 (instruction -> breakST .)
    RRETURN         reduce using rule 18 (instruction -> breakST .)
    RBREAK          reduce using rule 18 (instruction -> breakST .)
    RCONTINUE       reduce using rule 18 (instruction -> breakST .)
    $end            reduce using rule 18 (instruction -> breakST .)


state 15

    (19) instruction -> continueST .

    PRINT           reduce using rule 19 (instruction -> continueST .)
    PRINTLN         reduce using rule 19 (instruction -> continueST .)
    ID              reduce using rule 19 (instruction -> continueST .)
    GLOBAL          reduce using rule 19 (instruction -> continueST .)
    LOCAL           reduce using rule 19 (instruction -> continueST .)
    FUNCTION        reduce using rule 19 (instruction -> continueST .)
    RIF             reduce using rule 19 (instruction -> continueST .)
    RWHILE          reduce using rule 19 (instruction -> continueST .)
    RFOR            reduce using rule 19 (instruction -> continueST .)
    RRETURN         reduce using rule 19 (instruction -> continueST .)
    RBREAK          reduce using rule 19 (instruction -> continueST .)
    RCONTINUE       reduce using rule 19 (instruction -> continueST .)
    $end            reduce using rule 19 (instruction -> continueST .)


state 16

    (42) p_print -> PRINT . PARIZQ exps PARDER PTCOMA
    (43) p_print -> PRINT . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 29


state 17

    (44) p_println -> PRINTLN . PARIZQ exps PARDER PTCOMA
    (45) p_println -> PRINTLN . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 30


state 18

    (48) declaration -> ID . IGUAL exp PTCOMA
    (49) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (57) declaration -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (90) assignmentA -> ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (91) assignmentA -> ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (96) assignmentA -> ID . listArray2 IGUAL exp PTCOMA
    (97) assignmentA -> ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (134) callFuncSt -> ID . parametersCallFunc PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER
    (136) parametersCallFunc -> . PARIZQ listValues PARDER
    (137) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 31
    CORIZQ          shift and go to state 32
    PARIZQ          shift and go to state 35

    listArray2                     shift and go to state 33
    parametersCallFunc             shift and go to state 34

state 19

    (50) declaration -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> GLOBAL . ID IGUAL exp PTCOMA
    (52) declaration -> GLOBAL . ID PTCOMA
    (58) declaration -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) assignmentA -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (98) assignmentA -> GLOBAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 36


state 20

    (53) declaration -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> LOCAL . ID IGUAL exp PTCOMA
    (55) declaration -> LOCAL . ID PTCOMA
    (60) declaration -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) assignmentA -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> LOCAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 37


state 21

    (126) function -> FUNCTION . ID parametersFunc DOSPT DOSPT typeDef blockf
    (127) function -> FUNCTION . ID parametersFunc blockf

    ID              shift and go to state 38


state 22

    (140) ifSt -> RIF . exp END PTCOMA
    (141) ifSt -> RIF . exp blockiff END PTCOMA
    (142) ifSt -> RIF . exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> RIF . exp blockiff RELSE END PTCOMA
    (144) ifSt -> RIF . exp blockiff elseifSt END PTCOMA
    (145) ifSt -> RIF . exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> RIF . exp blockiff elseifSt RELSE END PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 39

state 23

    (162) whileSt -> RWHILE . exp blockc
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 59

state 24

    (163) forSt -> RFOR . parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> RFOR . parameterFor RIN exp blockc
    (165) parameterFor -> . ID DOSPT DOSPT typeDef
    (166) parameterFor -> . ID

    ID              shift and go to state 61

    parameterFor                   shift and go to state 60

state 25

    (173) returnST -> RRETURN . exp PTCOMA
    (174) returnST -> RRETURN . PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    PTCOMA          shift and go to state 63
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 62

state 26

    (175) breakST -> RBREAK . PTCOMA

    PTCOMA          shift and go to state 64


state 27

    (176) continueST -> RCONTINUE . PTCOMA

    PTCOMA          shift and go to state 65


state 28

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    GLOBAL          reduce using rule 2 (instructions -> instructions instruction .)
    LOCAL           reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    RFOR            reduce using rule 2 (instructions -> instructions instruction .)
    RRETURN         reduce using rule 2 (instructions -> instructions instruction .)
    RBREAK          reduce using rule 2 (instructions -> instructions instruction .)
    RCONTINUE       reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 29

    (42) p_print -> PRINT PARIZQ . exps PARDER PTCOMA
    (43) p_print -> PRINT PARIZQ . PARDER PTCOMA
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 67
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 66
    exp                            shift and go to state 68

state 30

    (44) p_println -> PRINTLN PARIZQ . exps PARDER PTCOMA
    (45) p_println -> PRINTLN PARIZQ . PARDER PTCOMA
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 70
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 69
    exp                            shift and go to state 68

state 31

    (48) declaration -> ID IGUAL . exp PTCOMA
    (49) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (57) declaration -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 72
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 71

state 32

    (180) listArray2 -> CORIZQ . exp CORDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 73

state 33

    (90) assignmentA -> ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (91) assignmentA -> ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (96) assignmentA -> ID listArray2 . IGUAL exp PTCOMA
    (97) assignmentA -> ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 74
    CORIZQ          shift and go to state 75


state 34

    (134) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 76


state 35

    (136) parametersCallFunc -> PARIZQ . listValues PARDER
    (137) parametersCallFunc -> PARIZQ . PARDER
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 78
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    listValues                     shift and go to state 77
    exp                            shift and go to state 79

state 36

    (50) declaration -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> GLOBAL ID . IGUAL exp PTCOMA
    (52) declaration -> GLOBAL ID . PTCOMA
    (58) declaration -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (92) assignmentA -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (98) assignmentA -> GLOBAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID . listArray2 IGUAL exp PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 80
    PTCOMA          shift and go to state 81
    CORIZQ          shift and go to state 32

    listArray2                     shift and go to state 82

state 37

    (53) declaration -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> LOCAL ID . IGUAL exp PTCOMA
    (55) declaration -> LOCAL ID . PTCOMA
    (60) declaration -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (94) assignmentA -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> LOCAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID . listArray2 IGUAL exp PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 83
    PTCOMA          shift and go to state 84
    CORIZQ          shift and go to state 32

    listArray2                     shift and go to state 85

state 38

    (126) function -> FUNCTION ID . parametersFunc DOSPT DOSPT typeDef blockf
    (127) function -> FUNCTION ID . parametersFunc blockf
    (128) parametersFunc -> . PARIZQ parameters PARDER
    (129) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 87

    parametersFunc                 shift and go to state 86

state 39

    (140) ifSt -> RIF exp . END PTCOMA
    (141) ifSt -> RIF exp . blockiff END PTCOMA
    (142) ifSt -> RIF exp . blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> RIF exp . blockiff RELSE END PTCOMA
    (144) ifSt -> RIF exp . blockiff elseifSt END PTCOMA
    (145) ifSt -> RIF exp . blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> RIF exp . blockiff elseifSt RELSE END PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (171) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 88
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockiff                       shift and go to state 89
    instructionsf                  shift and go to state 104
    instructionf                   shift and go to state 105
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 40

    (135) exp -> ID . parametersCallFunc
    (223) exp -> ID .
    (224) exp -> ID . listArray
    (136) parametersCallFunc -> . PARIZQ listValues PARDER
    (137) parametersCallFunc -> . PARIZQ PARDER
    (177) listArray -> . listArray CORIZQ exp CORDER
    (178) listArray -> . CORIZQ exp CORDER

    END             reduce using rule 223 (exp -> ID .)
    MAS             reduce using rule 223 (exp -> ID .)
    MENOS           reduce using rule 223 (exp -> ID .)
    MULTIPLICACION  reduce using rule 223 (exp -> ID .)
    DIVISION        reduce using rule 223 (exp -> ID .)
    POTENCIA        reduce using rule 223 (exp -> ID .)
    MODULO          reduce using rule 223 (exp -> ID .)
    IGUALIGUAL      reduce using rule 223 (exp -> ID .)
    DISTINTO        reduce using rule 223 (exp -> ID .)
    MAYOR           reduce using rule 223 (exp -> ID .)
    MENOR           reduce using rule 223 (exp -> ID .)
    MAYORIGUAL      reduce using rule 223 (exp -> ID .)
    MENORIGUAL      reduce using rule 223 (exp -> ID .)
    ANDD            reduce using rule 223 (exp -> ID .)
    ORR             reduce using rule 223 (exp -> ID .)
    PRINT           reduce using rule 223 (exp -> ID .)
    PRINTLN         reduce using rule 223 (exp -> ID .)
    ID              reduce using rule 223 (exp -> ID .)
    GLOBAL          reduce using rule 223 (exp -> ID .)
    LOCAL           reduce using rule 223 (exp -> ID .)
    RIF             reduce using rule 223 (exp -> ID .)
    RWHILE          reduce using rule 223 (exp -> ID .)
    RFOR            reduce using rule 223 (exp -> ID .)
    RRETURN         reduce using rule 223 (exp -> ID .)
    RBREAK          reduce using rule 223 (exp -> ID .)
    RCONTINUE       reduce using rule 223 (exp -> ID .)
    PTCOMA          reduce using rule 223 (exp -> ID .)
    PARDER          reduce using rule 223 (exp -> ID .)
    COMA            reduce using rule 223 (exp -> ID .)
    DOSPT           reduce using rule 223 (exp -> ID .)
    CORDER          reduce using rule 223 (exp -> ID .)
    RELSE           reduce using rule 223 (exp -> ID .)
    RELSEIF         reduce using rule 223 (exp -> ID .)
    PARIZQ          shift and go to state 35
    CORIZQ          shift and go to state 122

    parametersCallFunc             shift and go to state 120
    listArray                      shift and go to state 121

state 41

    (187) exp -> MENOS . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 123

state 42

    (196) exp -> NOTT . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 124

state 43

    (197) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 125


state 44

    (215) exp -> PARIZQ . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 126

state 45

    (198) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 127


state 46

    (199) exp -> RLENGTH . PARIZQ exp PARDER

    PARIZQ          shift and go to state 128


state 47

    (200) exp -> PARSE . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 129


state 48

    (201) exp -> TRUNC . PARIZQ typeDef COMA exp PARDER
    (202) exp -> TRUNC . PARIZQ exp PARDER

    PARIZQ          shift and go to state 130


state 49

    (203) exp -> MFLOAT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 131


state 50

    (204) exp -> MSTRING . PARIZQ exp PARDER

    PARIZQ          shift and go to state 132


state 51

    (216) exp -> ENTERO .

    END             reduce using rule 216 (exp -> ENTERO .)
    MAS             reduce using rule 216 (exp -> ENTERO .)
    MENOS           reduce using rule 216 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 216 (exp -> ENTERO .)
    DIVISION        reduce using rule 216 (exp -> ENTERO .)
    POTENCIA        reduce using rule 216 (exp -> ENTERO .)
    MODULO          reduce using rule 216 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 216 (exp -> ENTERO .)
    DISTINTO        reduce using rule 216 (exp -> ENTERO .)
    MAYOR           reduce using rule 216 (exp -> ENTERO .)
    MENOR           reduce using rule 216 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 216 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 216 (exp -> ENTERO .)
    ANDD            reduce using rule 216 (exp -> ENTERO .)
    ORR             reduce using rule 216 (exp -> ENTERO .)
    PRINT           reduce using rule 216 (exp -> ENTERO .)
    PRINTLN         reduce using rule 216 (exp -> ENTERO .)
    ID              reduce using rule 216 (exp -> ENTERO .)
    GLOBAL          reduce using rule 216 (exp -> ENTERO .)
    LOCAL           reduce using rule 216 (exp -> ENTERO .)
    RIF             reduce using rule 216 (exp -> ENTERO .)
    RWHILE          reduce using rule 216 (exp -> ENTERO .)
    RFOR            reduce using rule 216 (exp -> ENTERO .)
    RRETURN         reduce using rule 216 (exp -> ENTERO .)
    RBREAK          reduce using rule 216 (exp -> ENTERO .)
    RCONTINUE       reduce using rule 216 (exp -> ENTERO .)
    PTCOMA          reduce using rule 216 (exp -> ENTERO .)
    PARDER          reduce using rule 216 (exp -> ENTERO .)
    COMA            reduce using rule 216 (exp -> ENTERO .)
    DOSPT           reduce using rule 216 (exp -> ENTERO .)
    CORDER          reduce using rule 216 (exp -> ENTERO .)
    RELSE           reduce using rule 216 (exp -> ENTERO .)
    RELSEIF         reduce using rule 216 (exp -> ENTERO .)


state 52

    (217) exp -> DECIMAL .

    END             reduce using rule 217 (exp -> DECIMAL .)
    MAS             reduce using rule 217 (exp -> DECIMAL .)
    MENOS           reduce using rule 217 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 217 (exp -> DECIMAL .)
    DIVISION        reduce using rule 217 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 217 (exp -> DECIMAL .)
    MODULO          reduce using rule 217 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 217 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 217 (exp -> DECIMAL .)
    MAYOR           reduce using rule 217 (exp -> DECIMAL .)
    MENOR           reduce using rule 217 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 217 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 217 (exp -> DECIMAL .)
    ANDD            reduce using rule 217 (exp -> DECIMAL .)
    ORR             reduce using rule 217 (exp -> DECIMAL .)
    PRINT           reduce using rule 217 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 217 (exp -> DECIMAL .)
    ID              reduce using rule 217 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 217 (exp -> DECIMAL .)
    LOCAL           reduce using rule 217 (exp -> DECIMAL .)
    RIF             reduce using rule 217 (exp -> DECIMAL .)
    RWHILE          reduce using rule 217 (exp -> DECIMAL .)
    RFOR            reduce using rule 217 (exp -> DECIMAL .)
    RRETURN         reduce using rule 217 (exp -> DECIMAL .)
    RBREAK          reduce using rule 217 (exp -> DECIMAL .)
    RCONTINUE       reduce using rule 217 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 217 (exp -> DECIMAL .)
    PARDER          reduce using rule 217 (exp -> DECIMAL .)
    COMA            reduce using rule 217 (exp -> DECIMAL .)
    DOSPT           reduce using rule 217 (exp -> DECIMAL .)
    CORDER          reduce using rule 217 (exp -> DECIMAL .)
    RELSE           reduce using rule 217 (exp -> DECIMAL .)
    RELSEIF         reduce using rule 217 (exp -> DECIMAL .)


state 53

    (218) exp -> STRING .

    END             reduce using rule 218 (exp -> STRING .)
    MAS             reduce using rule 218 (exp -> STRING .)
    MENOS           reduce using rule 218 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 218 (exp -> STRING .)
    DIVISION        reduce using rule 218 (exp -> STRING .)
    POTENCIA        reduce using rule 218 (exp -> STRING .)
    MODULO          reduce using rule 218 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 218 (exp -> STRING .)
    DISTINTO        reduce using rule 218 (exp -> STRING .)
    MAYOR           reduce using rule 218 (exp -> STRING .)
    MENOR           reduce using rule 218 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 218 (exp -> STRING .)
    MENORIGUAL      reduce using rule 218 (exp -> STRING .)
    ANDD            reduce using rule 218 (exp -> STRING .)
    ORR             reduce using rule 218 (exp -> STRING .)
    PRINT           reduce using rule 218 (exp -> STRING .)
    PRINTLN         reduce using rule 218 (exp -> STRING .)
    ID              reduce using rule 218 (exp -> STRING .)
    GLOBAL          reduce using rule 218 (exp -> STRING .)
    LOCAL           reduce using rule 218 (exp -> STRING .)
    RIF             reduce using rule 218 (exp -> STRING .)
    RWHILE          reduce using rule 218 (exp -> STRING .)
    RFOR            reduce using rule 218 (exp -> STRING .)
    RRETURN         reduce using rule 218 (exp -> STRING .)
    RBREAK          reduce using rule 218 (exp -> STRING .)
    RCONTINUE       reduce using rule 218 (exp -> STRING .)
    PTCOMA          reduce using rule 218 (exp -> STRING .)
    PARDER          reduce using rule 218 (exp -> STRING .)
    COMA            reduce using rule 218 (exp -> STRING .)
    DOSPT           reduce using rule 218 (exp -> STRING .)
    CORDER          reduce using rule 218 (exp -> STRING .)
    RELSE           reduce using rule 218 (exp -> STRING .)
    RELSEIF         reduce using rule 218 (exp -> STRING .)


state 54

    (219) exp -> CHAR .

    END             reduce using rule 219 (exp -> CHAR .)
    MAS             reduce using rule 219 (exp -> CHAR .)
    MENOS           reduce using rule 219 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 219 (exp -> CHAR .)
    DIVISION        reduce using rule 219 (exp -> CHAR .)
    POTENCIA        reduce using rule 219 (exp -> CHAR .)
    MODULO          reduce using rule 219 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 219 (exp -> CHAR .)
    DISTINTO        reduce using rule 219 (exp -> CHAR .)
    MAYOR           reduce using rule 219 (exp -> CHAR .)
    MENOR           reduce using rule 219 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 219 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 219 (exp -> CHAR .)
    ANDD            reduce using rule 219 (exp -> CHAR .)
    ORR             reduce using rule 219 (exp -> CHAR .)
    PRINT           reduce using rule 219 (exp -> CHAR .)
    PRINTLN         reduce using rule 219 (exp -> CHAR .)
    ID              reduce using rule 219 (exp -> CHAR .)
    GLOBAL          reduce using rule 219 (exp -> CHAR .)
    LOCAL           reduce using rule 219 (exp -> CHAR .)
    RIF             reduce using rule 219 (exp -> CHAR .)
    RWHILE          reduce using rule 219 (exp -> CHAR .)
    RFOR            reduce using rule 219 (exp -> CHAR .)
    RRETURN         reduce using rule 219 (exp -> CHAR .)
    RBREAK          reduce using rule 219 (exp -> CHAR .)
    RCONTINUE       reduce using rule 219 (exp -> CHAR .)
    PTCOMA          reduce using rule 219 (exp -> CHAR .)
    PARDER          reduce using rule 219 (exp -> CHAR .)
    COMA            reduce using rule 219 (exp -> CHAR .)
    DOSPT           reduce using rule 219 (exp -> CHAR .)
    CORDER          reduce using rule 219 (exp -> CHAR .)
    RELSE           reduce using rule 219 (exp -> CHAR .)
    RELSEIF         reduce using rule 219 (exp -> CHAR .)


state 55

    (220) exp -> VERDADERO .

    END             reduce using rule 220 (exp -> VERDADERO .)
    MAS             reduce using rule 220 (exp -> VERDADERO .)
    MENOS           reduce using rule 220 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 220 (exp -> VERDADERO .)
    DIVISION        reduce using rule 220 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 220 (exp -> VERDADERO .)
    MODULO          reduce using rule 220 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 220 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 220 (exp -> VERDADERO .)
    MAYOR           reduce using rule 220 (exp -> VERDADERO .)
    MENOR           reduce using rule 220 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 220 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 220 (exp -> VERDADERO .)
    ANDD            reduce using rule 220 (exp -> VERDADERO .)
    ORR             reduce using rule 220 (exp -> VERDADERO .)
    PRINT           reduce using rule 220 (exp -> VERDADERO .)
    PRINTLN         reduce using rule 220 (exp -> VERDADERO .)
    ID              reduce using rule 220 (exp -> VERDADERO .)
    GLOBAL          reduce using rule 220 (exp -> VERDADERO .)
    LOCAL           reduce using rule 220 (exp -> VERDADERO .)
    RIF             reduce using rule 220 (exp -> VERDADERO .)
    RWHILE          reduce using rule 220 (exp -> VERDADERO .)
    RFOR            reduce using rule 220 (exp -> VERDADERO .)
    RRETURN         reduce using rule 220 (exp -> VERDADERO .)
    RBREAK          reduce using rule 220 (exp -> VERDADERO .)
    RCONTINUE       reduce using rule 220 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 220 (exp -> VERDADERO .)
    PARDER          reduce using rule 220 (exp -> VERDADERO .)
    COMA            reduce using rule 220 (exp -> VERDADERO .)
    DOSPT           reduce using rule 220 (exp -> VERDADERO .)
    CORDER          reduce using rule 220 (exp -> VERDADERO .)
    RELSE           reduce using rule 220 (exp -> VERDADERO .)
    RELSEIF         reduce using rule 220 (exp -> VERDADERO .)


state 56

    (221) exp -> FALSO .

    END             reduce using rule 221 (exp -> FALSO .)
    MAS             reduce using rule 221 (exp -> FALSO .)
    MENOS           reduce using rule 221 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 221 (exp -> FALSO .)
    DIVISION        reduce using rule 221 (exp -> FALSO .)
    POTENCIA        reduce using rule 221 (exp -> FALSO .)
    MODULO          reduce using rule 221 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 221 (exp -> FALSO .)
    DISTINTO        reduce using rule 221 (exp -> FALSO .)
    MAYOR           reduce using rule 221 (exp -> FALSO .)
    MENOR           reduce using rule 221 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 221 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 221 (exp -> FALSO .)
    ANDD            reduce using rule 221 (exp -> FALSO .)
    ORR             reduce using rule 221 (exp -> FALSO .)
    PRINT           reduce using rule 221 (exp -> FALSO .)
    PRINTLN         reduce using rule 221 (exp -> FALSO .)
    ID              reduce using rule 221 (exp -> FALSO .)
    GLOBAL          reduce using rule 221 (exp -> FALSO .)
    LOCAL           reduce using rule 221 (exp -> FALSO .)
    RIF             reduce using rule 221 (exp -> FALSO .)
    RWHILE          reduce using rule 221 (exp -> FALSO .)
    RFOR            reduce using rule 221 (exp -> FALSO .)
    RRETURN         reduce using rule 221 (exp -> FALSO .)
    RBREAK          reduce using rule 221 (exp -> FALSO .)
    RCONTINUE       reduce using rule 221 (exp -> FALSO .)
    PTCOMA          reduce using rule 221 (exp -> FALSO .)
    PARDER          reduce using rule 221 (exp -> FALSO .)
    COMA            reduce using rule 221 (exp -> FALSO .)
    DOSPT           reduce using rule 221 (exp -> FALSO .)
    CORDER          reduce using rule 221 (exp -> FALSO .)
    RELSE           reduce using rule 221 (exp -> FALSO .)
    RELSEIF         reduce using rule 221 (exp -> FALSO .)


state 57

    (222) exp -> NULO .

    END             reduce using rule 222 (exp -> NULO .)
    MAS             reduce using rule 222 (exp -> NULO .)
    MENOS           reduce using rule 222 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 222 (exp -> NULO .)
    DIVISION        reduce using rule 222 (exp -> NULO .)
    POTENCIA        reduce using rule 222 (exp -> NULO .)
    MODULO          reduce using rule 222 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 222 (exp -> NULO .)
    DISTINTO        reduce using rule 222 (exp -> NULO .)
    MAYOR           reduce using rule 222 (exp -> NULO .)
    MENOR           reduce using rule 222 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 222 (exp -> NULO .)
    MENORIGUAL      reduce using rule 222 (exp -> NULO .)
    ANDD            reduce using rule 222 (exp -> NULO .)
    ORR             reduce using rule 222 (exp -> NULO .)
    PRINT           reduce using rule 222 (exp -> NULO .)
    PRINTLN         reduce using rule 222 (exp -> NULO .)
    ID              reduce using rule 222 (exp -> NULO .)
    GLOBAL          reduce using rule 222 (exp -> NULO .)
    LOCAL           reduce using rule 222 (exp -> NULO .)
    RIF             reduce using rule 222 (exp -> NULO .)
    RWHILE          reduce using rule 222 (exp -> NULO .)
    RFOR            reduce using rule 222 (exp -> NULO .)
    RRETURN         reduce using rule 222 (exp -> NULO .)
    RBREAK          reduce using rule 222 (exp -> NULO .)
    RCONTINUE       reduce using rule 222 (exp -> NULO .)
    PTCOMA          reduce using rule 222 (exp -> NULO .)
    PARDER          reduce using rule 222 (exp -> NULO .)
    COMA            reduce using rule 222 (exp -> NULO .)
    DOSPT           reduce using rule 222 (exp -> NULO .)
    CORDER          reduce using rule 222 (exp -> NULO .)
    RELSE           reduce using rule 222 (exp -> NULO .)
    RELSEIF         reduce using rule 222 (exp -> NULO .)


state 58

    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    listValues                     shift and go to state 133
    exp                            shift and go to state 79

state 59

    (162) whileSt -> RWHILE exp . blockc
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (169) blockc -> . instructionsc END PTCOMA
    (170) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    END             shift and go to state 137
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockc                         shift and go to state 135
    instructionsc                  shift and go to state 136
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 60

    (163) forSt -> RFOR parameterFor . RIN exp DOSPT exp blockc
    (164) forSt -> RFOR parameterFor . RIN exp blockc

    RIN             shift and go to state 154


state 61

    (165) parameterFor -> ID . DOSPT DOSPT typeDef
    (166) parameterFor -> ID .

    DOSPT           shift and go to state 155
    RIN             reduce using rule 166 (parameterFor -> ID .)


state 62

    (173) returnST -> RRETURN exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 156
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 63

    (174) returnST -> RRETURN PTCOMA .

    PRINT           reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    PRINTLN         reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    ID              reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    GLOBAL          reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    LOCAL           reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    FUNCTION        reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RIF             reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RWHILE          reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RFOR            reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RRETURN         reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RBREAK          reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RCONTINUE       reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    $end            reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    END             reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RELSE           reduce using rule 174 (returnST -> RRETURN PTCOMA .)
    RELSEIF         reduce using rule 174 (returnST -> RRETURN PTCOMA .)


state 64

    (175) breakST -> RBREAK PTCOMA .

    PRINT           reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    PRINTLN         reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    ID              reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    GLOBAL          reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    LOCAL           reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    FUNCTION        reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RIF             reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RWHILE          reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RFOR            reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RRETURN         reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RBREAK          reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RCONTINUE       reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    $end            reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    END             reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RELSE           reduce using rule 175 (breakST -> RBREAK PTCOMA .)
    RELSEIF         reduce using rule 175 (breakST -> RBREAK PTCOMA .)


state 65

    (176) continueST -> RCONTINUE PTCOMA .

    PRINT           reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    PRINTLN         reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    ID              reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    GLOBAL          reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    LOCAL           reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    FUNCTION        reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RIF             reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RWHILE          reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RFOR            reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RRETURN         reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RBREAK          reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RCONTINUE       reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    $end            reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    END             reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RELSE           reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)
    RELSEIF         reduce using rule 176 (continueST -> RCONTINUE PTCOMA .)


state 66

    (42) p_print -> PRINT PARIZQ exps . PARDER PTCOMA
    (46) exps -> exps . COMA exp

    PARDER          shift and go to state 157
    COMA            shift and go to state 158


state 67

    (43) p_print -> PRINT PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 159


state 68

    (47) exps -> exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          reduce using rule 47 (exps -> exp .)
    COMA            reduce using rule 47 (exps -> exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 69

    (44) p_println -> PRINTLN PARIZQ exps . PARDER PTCOMA
    (46) exps -> exps . COMA exp

    PARDER          shift and go to state 160
    COMA            shift and go to state 158


state 70

    (45) p_println -> PRINTLN PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 161


state 71

    (48) declaration -> ID IGUAL exp . PTCOMA
    (49) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 162
    DOSPT           shift and go to state 163
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 72

    (56) declaration -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (57) declaration -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 164
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 73

    (180) listArray2 -> CORIZQ exp . CORDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    CORDER          shift and go to state 166
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 74

    (90) assignmentA -> ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (91) assignmentA -> ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (96) assignmentA -> ID listArray2 IGUAL . exp PTCOMA
    (97) assignmentA -> ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 167
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 168

state 75

    (179) listArray2 -> listArray2 CORIZQ . exp CORDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 169

state 76

    (134) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    GLOBAL          reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    LOCAL           reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RFOR            reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RRETURN         reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RBREAK          reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RCONTINUE       reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSE           reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSEIF         reduce using rule 134 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 77

    (136) parametersCallFunc -> PARIZQ listValues . PARDER
    (138) listValues -> listValues . COMA exp

    PARDER          shift and go to state 170
    COMA            shift and go to state 171


state 78

    (137) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    END             reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MAS             reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MENOS           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MULTIPLICACION  reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    DIVISION        reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    POTENCIA        reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MODULO          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    IGUALIGUAL      reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    DISTINTO        reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MAYOR           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MENOR           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    ANDD            reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    ORR             reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    ID              reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RRETURN         reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RBREAK          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RCONTINUE       reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    PARDER          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    COMA            reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    DOSPT           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    CORDER          reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RELSE           reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)
    RELSEIF         reduce using rule 137 (parametersCallFunc -> PARIZQ PARDER .)


state 79

    (139) listValues -> exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          reduce using rule 139 (listValues -> exp .)
    COMA            reduce using rule 139 (listValues -> exp .)
    CORDER          reduce using rule 139 (listValues -> exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 80

    (50) declaration -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> GLOBAL ID IGUAL . exp PTCOMA
    (58) declaration -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 173
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 172

state 81

    (52) declaration -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    FUNCTION        reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)
    $end            reduce using rule 52 (declaration -> GLOBAL ID PTCOMA .)


state 82

    (92) assignmentA -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (98) assignmentA -> GLOBAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 . IGUAL exp PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 174
    CORIZQ          shift and go to state 75


state 83

    (53) declaration -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> LOCAL ID IGUAL . exp PTCOMA
    (60) declaration -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 176
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 175

state 84

    (55) declaration -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    ID              reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    FUNCTION        reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)
    $end            reduce using rule 55 (declaration -> LOCAL ID PTCOMA .)


state 85

    (94) assignmentA -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> LOCAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 . IGUAL exp PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 177
    CORIZQ          shift and go to state 75


state 86

    (126) function -> FUNCTION ID parametersFunc . DOSPT DOSPT typeDef blockf
    (127) function -> FUNCTION ID parametersFunc . blockf
    (167) blockf -> . instructionsf END PTCOMA
    (168) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    DOSPT           shift and go to state 178
    END             shift and go to state 181
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockf                         shift and go to state 179
    instructionsf                  shift and go to state 180
    instructionf                   shift and go to state 105
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 87

    (128) parametersFunc -> PARIZQ . parameters PARDER
    (129) parametersFunc -> PARIZQ . PARDER
    (130) parameters -> . parameters COMA parameter
    (131) parameters -> . parameter
    (132) parameter -> . ID DOSPT DOSPT typeDef
    (133) parameter -> . ID

    PARDER          shift and go to state 183
    ID              shift and go to state 185

    parameters                     shift and go to state 182
    parameter                      shift and go to state 184

state 88

    (140) ifSt -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 186


state 89

    (141) ifSt -> RIF exp blockiff . END PTCOMA
    (142) ifSt -> RIF exp blockiff . RELSE blockiff END PTCOMA
    (143) ifSt -> RIF exp blockiff . RELSE END PTCOMA
    (144) ifSt -> RIF exp blockiff . elseifSt END PTCOMA
    (145) ifSt -> RIF exp blockiff . elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> RIF exp blockiff . elseifSt RELSE END PTCOMA
    (147) elseifSt -> . elseifSt conelseif
    (148) elseifSt -> . conelseif
    (149) conelseif -> . RELSEIF exp blockiff
    (150) conelseif -> . RELSEIF exp

    END             shift and go to state 187
    RELSE           shift and go to state 188
    RELSEIF         shift and go to state 191

    elseifSt                       shift and go to state 189
    conelseif                      shift and go to state 190

state 90

    (181) exp -> exp MAS . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 192

state 91

    (182) exp -> exp MENOS . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 193

state 92

    (183) exp -> exp MULTIPLICACION . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 194

state 93

    (184) exp -> exp DIVISION . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 195

state 94

    (185) exp -> exp POTENCIA . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 196

state 95

    (186) exp -> exp MODULO . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 197

state 96

    (188) exp -> exp IGUALIGUAL . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 198

state 97

    (189) exp -> exp DISTINTO . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 199

state 98

    (190) exp -> exp MAYOR . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 200

state 99

    (191) exp -> exp MENOR . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 201

state 100

    (192) exp -> exp MAYORIGUAL . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 202

state 101

    (193) exp -> exp MENORIGUAL . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 203

state 102

    (194) exp -> exp ANDD . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 204

state 103

    (195) exp -> exp ORR . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 205

state 104

    (171) blockiff -> instructionsf .
    (4) instructionsf -> instructionsf . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 171 (blockiff -> instructionsf .)
    RELSE           reduce using rule 171 (blockiff -> instructionsf .)
    RELSEIF         reduce using rule 171 (blockiff -> instructionsf .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    instructionf                   shift and go to state 206
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 105

    (5) instructionsf -> instructionf .

    PRINT           reduce using rule 5 (instructionsf -> instructionf .)
    PRINTLN         reduce using rule 5 (instructionsf -> instructionf .)
    ID              reduce using rule 5 (instructionsf -> instructionf .)
    GLOBAL          reduce using rule 5 (instructionsf -> instructionf .)
    LOCAL           reduce using rule 5 (instructionsf -> instructionf .)
    RIF             reduce using rule 5 (instructionsf -> instructionf .)
    RWHILE          reduce using rule 5 (instructionsf -> instructionf .)
    RFOR            reduce using rule 5 (instructionsf -> instructionf .)
    RRETURN         reduce using rule 5 (instructionsf -> instructionf .)
    RBREAK          reduce using rule 5 (instructionsf -> instructionf .)
    RCONTINUE       reduce using rule 5 (instructionsf -> instructionf .)
    END             reduce using rule 5 (instructionsf -> instructionf .)
    RELSE           reduce using rule 5 (instructionsf -> instructionf .)
    RELSEIF         reduce using rule 5 (instructionsf -> instructionf .)


state 106

    (20) instructionf -> p_print .

    PRINT           reduce using rule 20 (instructionf -> p_print .)
    PRINTLN         reduce using rule 20 (instructionf -> p_print .)
    ID              reduce using rule 20 (instructionf -> p_print .)
    GLOBAL          reduce using rule 20 (instructionf -> p_print .)
    LOCAL           reduce using rule 20 (instructionf -> p_print .)
    RIF             reduce using rule 20 (instructionf -> p_print .)
    RWHILE          reduce using rule 20 (instructionf -> p_print .)
    RFOR            reduce using rule 20 (instructionf -> p_print .)
    RRETURN         reduce using rule 20 (instructionf -> p_print .)
    RBREAK          reduce using rule 20 (instructionf -> p_print .)
    RCONTINUE       reduce using rule 20 (instructionf -> p_print .)
    END             reduce using rule 20 (instructionf -> p_print .)
    RELSE           reduce using rule 20 (instructionf -> p_print .)
    RELSEIF         reduce using rule 20 (instructionf -> p_print .)


state 107

    (21) instructionf -> p_println .

    PRINT           reduce using rule 21 (instructionf -> p_println .)
    PRINTLN         reduce using rule 21 (instructionf -> p_println .)
    ID              reduce using rule 21 (instructionf -> p_println .)
    GLOBAL          reduce using rule 21 (instructionf -> p_println .)
    LOCAL           reduce using rule 21 (instructionf -> p_println .)
    RIF             reduce using rule 21 (instructionf -> p_println .)
    RWHILE          reduce using rule 21 (instructionf -> p_println .)
    RFOR            reduce using rule 21 (instructionf -> p_println .)
    RRETURN         reduce using rule 21 (instructionf -> p_println .)
    RBREAK          reduce using rule 21 (instructionf -> p_println .)
    RCONTINUE       reduce using rule 21 (instructionf -> p_println .)
    END             reduce using rule 21 (instructionf -> p_println .)
    RELSE           reduce using rule 21 (instructionf -> p_println .)
    RELSEIF         reduce using rule 21 (instructionf -> p_println .)


state 108

    (22) instructionf -> declarationf .

    PRINT           reduce using rule 22 (instructionf -> declarationf .)
    PRINTLN         reduce using rule 22 (instructionf -> declarationf .)
    ID              reduce using rule 22 (instructionf -> declarationf .)
    GLOBAL          reduce using rule 22 (instructionf -> declarationf .)
    LOCAL           reduce using rule 22 (instructionf -> declarationf .)
    RIF             reduce using rule 22 (instructionf -> declarationf .)
    RWHILE          reduce using rule 22 (instructionf -> declarationf .)
    RFOR            reduce using rule 22 (instructionf -> declarationf .)
    RRETURN         reduce using rule 22 (instructionf -> declarationf .)
    RBREAK          reduce using rule 22 (instructionf -> declarationf .)
    RCONTINUE       reduce using rule 22 (instructionf -> declarationf .)
    END             reduce using rule 22 (instructionf -> declarationf .)
    RELSE           reduce using rule 22 (instructionf -> declarationf .)
    RELSEIF         reduce using rule 22 (instructionf -> declarationf .)


state 109

    (23) instructionf -> assignmentAf .

    PRINT           reduce using rule 23 (instructionf -> assignmentAf .)
    PRINTLN         reduce using rule 23 (instructionf -> assignmentAf .)
    ID              reduce using rule 23 (instructionf -> assignmentAf .)
    GLOBAL          reduce using rule 23 (instructionf -> assignmentAf .)
    LOCAL           reduce using rule 23 (instructionf -> assignmentAf .)
    RIF             reduce using rule 23 (instructionf -> assignmentAf .)
    RWHILE          reduce using rule 23 (instructionf -> assignmentAf .)
    RFOR            reduce using rule 23 (instructionf -> assignmentAf .)
    RRETURN         reduce using rule 23 (instructionf -> assignmentAf .)
    RBREAK          reduce using rule 23 (instructionf -> assignmentAf .)
    RCONTINUE       reduce using rule 23 (instructionf -> assignmentAf .)
    END             reduce using rule 23 (instructionf -> assignmentAf .)
    RELSE           reduce using rule 23 (instructionf -> assignmentAf .)
    RELSEIF         reduce using rule 23 (instructionf -> assignmentAf .)


state 110

    (24) instructionf -> callFuncSt .

    PRINT           reduce using rule 24 (instructionf -> callFuncSt .)
    PRINTLN         reduce using rule 24 (instructionf -> callFuncSt .)
    ID              reduce using rule 24 (instructionf -> callFuncSt .)
    GLOBAL          reduce using rule 24 (instructionf -> callFuncSt .)
    LOCAL           reduce using rule 24 (instructionf -> callFuncSt .)
    RIF             reduce using rule 24 (instructionf -> callFuncSt .)
    RWHILE          reduce using rule 24 (instructionf -> callFuncSt .)
    RFOR            reduce using rule 24 (instructionf -> callFuncSt .)
    RRETURN         reduce using rule 24 (instructionf -> callFuncSt .)
    RBREAK          reduce using rule 24 (instructionf -> callFuncSt .)
    RCONTINUE       reduce using rule 24 (instructionf -> callFuncSt .)
    END             reduce using rule 24 (instructionf -> callFuncSt .)
    RELSE           reduce using rule 24 (instructionf -> callFuncSt .)
    RELSEIF         reduce using rule 24 (instructionf -> callFuncSt .)


state 111

    (25) instructionf -> ifSt .

    PRINT           reduce using rule 25 (instructionf -> ifSt .)
    PRINTLN         reduce using rule 25 (instructionf -> ifSt .)
    ID              reduce using rule 25 (instructionf -> ifSt .)
    GLOBAL          reduce using rule 25 (instructionf -> ifSt .)
    LOCAL           reduce using rule 25 (instructionf -> ifSt .)
    RIF             reduce using rule 25 (instructionf -> ifSt .)
    RWHILE          reduce using rule 25 (instructionf -> ifSt .)
    RFOR            reduce using rule 25 (instructionf -> ifSt .)
    RRETURN         reduce using rule 25 (instructionf -> ifSt .)
    RBREAK          reduce using rule 25 (instructionf -> ifSt .)
    RCONTINUE       reduce using rule 25 (instructionf -> ifSt .)
    END             reduce using rule 25 (instructionf -> ifSt .)
    RELSE           reduce using rule 25 (instructionf -> ifSt .)
    RELSEIF         reduce using rule 25 (instructionf -> ifSt .)


state 112

    (26) instructionf -> whileSt .

    PRINT           reduce using rule 26 (instructionf -> whileSt .)
    PRINTLN         reduce using rule 26 (instructionf -> whileSt .)
    ID              reduce using rule 26 (instructionf -> whileSt .)
    GLOBAL          reduce using rule 26 (instructionf -> whileSt .)
    LOCAL           reduce using rule 26 (instructionf -> whileSt .)
    RIF             reduce using rule 26 (instructionf -> whileSt .)
    RWHILE          reduce using rule 26 (instructionf -> whileSt .)
    RFOR            reduce using rule 26 (instructionf -> whileSt .)
    RRETURN         reduce using rule 26 (instructionf -> whileSt .)
    RBREAK          reduce using rule 26 (instructionf -> whileSt .)
    RCONTINUE       reduce using rule 26 (instructionf -> whileSt .)
    END             reduce using rule 26 (instructionf -> whileSt .)
    RELSE           reduce using rule 26 (instructionf -> whileSt .)
    RELSEIF         reduce using rule 26 (instructionf -> whileSt .)


state 113

    (27) instructionf -> forSt .

    PRINT           reduce using rule 27 (instructionf -> forSt .)
    PRINTLN         reduce using rule 27 (instructionf -> forSt .)
    ID              reduce using rule 27 (instructionf -> forSt .)
    GLOBAL          reduce using rule 27 (instructionf -> forSt .)
    LOCAL           reduce using rule 27 (instructionf -> forSt .)
    RIF             reduce using rule 27 (instructionf -> forSt .)
    RWHILE          reduce using rule 27 (instructionf -> forSt .)
    RFOR            reduce using rule 27 (instructionf -> forSt .)
    RRETURN         reduce using rule 27 (instructionf -> forSt .)
    RBREAK          reduce using rule 27 (instructionf -> forSt .)
    RCONTINUE       reduce using rule 27 (instructionf -> forSt .)
    END             reduce using rule 27 (instructionf -> forSt .)
    RELSE           reduce using rule 27 (instructionf -> forSt .)
    RELSEIF         reduce using rule 27 (instructionf -> forSt .)


state 114

    (28) instructionf -> returnST .

    PRINT           reduce using rule 28 (instructionf -> returnST .)
    PRINTLN         reduce using rule 28 (instructionf -> returnST .)
    ID              reduce using rule 28 (instructionf -> returnST .)
    GLOBAL          reduce using rule 28 (instructionf -> returnST .)
    LOCAL           reduce using rule 28 (instructionf -> returnST .)
    RIF             reduce using rule 28 (instructionf -> returnST .)
    RWHILE          reduce using rule 28 (instructionf -> returnST .)
    RFOR            reduce using rule 28 (instructionf -> returnST .)
    RRETURN         reduce using rule 28 (instructionf -> returnST .)
    RBREAK          reduce using rule 28 (instructionf -> returnST .)
    RCONTINUE       reduce using rule 28 (instructionf -> returnST .)
    END             reduce using rule 28 (instructionf -> returnST .)
    RELSE           reduce using rule 28 (instructionf -> returnST .)
    RELSEIF         reduce using rule 28 (instructionf -> returnST .)


state 115

    (29) instructionf -> breakST .

    PRINT           reduce using rule 29 (instructionf -> breakST .)
    PRINTLN         reduce using rule 29 (instructionf -> breakST .)
    ID              reduce using rule 29 (instructionf -> breakST .)
    GLOBAL          reduce using rule 29 (instructionf -> breakST .)
    LOCAL           reduce using rule 29 (instructionf -> breakST .)
    RIF             reduce using rule 29 (instructionf -> breakST .)
    RWHILE          reduce using rule 29 (instructionf -> breakST .)
    RFOR            reduce using rule 29 (instructionf -> breakST .)
    RRETURN         reduce using rule 29 (instructionf -> breakST .)
    RBREAK          reduce using rule 29 (instructionf -> breakST .)
    RCONTINUE       reduce using rule 29 (instructionf -> breakST .)
    END             reduce using rule 29 (instructionf -> breakST .)
    RELSE           reduce using rule 29 (instructionf -> breakST .)
    RELSEIF         reduce using rule 29 (instructionf -> breakST .)


state 116

    (30) instructionf -> continueST .

    PRINT           reduce using rule 30 (instructionf -> continueST .)
    PRINTLN         reduce using rule 30 (instructionf -> continueST .)
    ID              reduce using rule 30 (instructionf -> continueST .)
    GLOBAL          reduce using rule 30 (instructionf -> continueST .)
    LOCAL           reduce using rule 30 (instructionf -> continueST .)
    RIF             reduce using rule 30 (instructionf -> continueST .)
    RWHILE          reduce using rule 30 (instructionf -> continueST .)
    RFOR            reduce using rule 30 (instructionf -> continueST .)
    RRETURN         reduce using rule 30 (instructionf -> continueST .)
    RBREAK          reduce using rule 30 (instructionf -> continueST .)
    RCONTINUE       reduce using rule 30 (instructionf -> continueST .)
    END             reduce using rule 30 (instructionf -> continueST .)
    RELSE           reduce using rule 30 (instructionf -> continueST .)
    RELSEIF         reduce using rule 30 (instructionf -> continueST .)


state 117

    (62) declarationf -> ID . IGUAL exp PTCOMA
    (63) declarationf -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (102) assignmentAf -> ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (108) assignmentAf -> ID . listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (134) callFuncSt -> ID . parametersCallFunc PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER
    (136) parametersCallFunc -> . PARIZQ listValues PARDER
    (137) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 207
    CORIZQ          shift and go to state 32
    PARIZQ          shift and go to state 35

    listArray2                     shift and go to state 208
    parametersCallFunc             shift and go to state 34

state 118

    (64) declarationf -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> GLOBAL . ID IGUAL exp PTCOMA
    (66) declarationf -> GLOBAL . ID PTCOMA
    (72) declarationf -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (104) assignmentAf -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (110) assignmentAf -> GLOBAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 209


state 119

    (67) declarationf -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> LOCAL . ID IGUAL exp PTCOMA
    (69) declarationf -> LOCAL . ID PTCOMA
    (74) declarationf -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> LOCAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 210


state 120

    (135) exp -> ID parametersCallFunc .

    END             reduce using rule 135 (exp -> ID parametersCallFunc .)
    MAS             reduce using rule 135 (exp -> ID parametersCallFunc .)
    MENOS           reduce using rule 135 (exp -> ID parametersCallFunc .)
    MULTIPLICACION  reduce using rule 135 (exp -> ID parametersCallFunc .)
    DIVISION        reduce using rule 135 (exp -> ID parametersCallFunc .)
    POTENCIA        reduce using rule 135 (exp -> ID parametersCallFunc .)
    MODULO          reduce using rule 135 (exp -> ID parametersCallFunc .)
    IGUALIGUAL      reduce using rule 135 (exp -> ID parametersCallFunc .)
    DISTINTO        reduce using rule 135 (exp -> ID parametersCallFunc .)
    MAYOR           reduce using rule 135 (exp -> ID parametersCallFunc .)
    MENOR           reduce using rule 135 (exp -> ID parametersCallFunc .)
    MAYORIGUAL      reduce using rule 135 (exp -> ID parametersCallFunc .)
    MENORIGUAL      reduce using rule 135 (exp -> ID parametersCallFunc .)
    ANDD            reduce using rule 135 (exp -> ID parametersCallFunc .)
    ORR             reduce using rule 135 (exp -> ID parametersCallFunc .)
    PRINT           reduce using rule 135 (exp -> ID parametersCallFunc .)
    PRINTLN         reduce using rule 135 (exp -> ID parametersCallFunc .)
    ID              reduce using rule 135 (exp -> ID parametersCallFunc .)
    GLOBAL          reduce using rule 135 (exp -> ID parametersCallFunc .)
    LOCAL           reduce using rule 135 (exp -> ID parametersCallFunc .)
    RIF             reduce using rule 135 (exp -> ID parametersCallFunc .)
    RWHILE          reduce using rule 135 (exp -> ID parametersCallFunc .)
    RFOR            reduce using rule 135 (exp -> ID parametersCallFunc .)
    RRETURN         reduce using rule 135 (exp -> ID parametersCallFunc .)
    RBREAK          reduce using rule 135 (exp -> ID parametersCallFunc .)
    RCONTINUE       reduce using rule 135 (exp -> ID parametersCallFunc .)
    PTCOMA          reduce using rule 135 (exp -> ID parametersCallFunc .)
    PARDER          reduce using rule 135 (exp -> ID parametersCallFunc .)
    COMA            reduce using rule 135 (exp -> ID parametersCallFunc .)
    DOSPT           reduce using rule 135 (exp -> ID parametersCallFunc .)
    CORDER          reduce using rule 135 (exp -> ID parametersCallFunc .)
    RELSE           reduce using rule 135 (exp -> ID parametersCallFunc .)
    RELSEIF         reduce using rule 135 (exp -> ID parametersCallFunc .)


state 121

    (224) exp -> ID listArray .
    (177) listArray -> listArray . CORIZQ exp CORDER

    END             reduce using rule 224 (exp -> ID listArray .)
    MAS             reduce using rule 224 (exp -> ID listArray .)
    MENOS           reduce using rule 224 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 224 (exp -> ID listArray .)
    DIVISION        reduce using rule 224 (exp -> ID listArray .)
    POTENCIA        reduce using rule 224 (exp -> ID listArray .)
    MODULO          reduce using rule 224 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 224 (exp -> ID listArray .)
    DISTINTO        reduce using rule 224 (exp -> ID listArray .)
    MAYOR           reduce using rule 224 (exp -> ID listArray .)
    MENOR           reduce using rule 224 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 224 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 224 (exp -> ID listArray .)
    ANDD            reduce using rule 224 (exp -> ID listArray .)
    ORR             reduce using rule 224 (exp -> ID listArray .)
    PRINT           reduce using rule 224 (exp -> ID listArray .)
    PRINTLN         reduce using rule 224 (exp -> ID listArray .)
    ID              reduce using rule 224 (exp -> ID listArray .)
    GLOBAL          reduce using rule 224 (exp -> ID listArray .)
    LOCAL           reduce using rule 224 (exp -> ID listArray .)
    RIF             reduce using rule 224 (exp -> ID listArray .)
    RWHILE          reduce using rule 224 (exp -> ID listArray .)
    RFOR            reduce using rule 224 (exp -> ID listArray .)
    RRETURN         reduce using rule 224 (exp -> ID listArray .)
    RBREAK          reduce using rule 224 (exp -> ID listArray .)
    RCONTINUE       reduce using rule 224 (exp -> ID listArray .)
    PTCOMA          reduce using rule 224 (exp -> ID listArray .)
    PARDER          reduce using rule 224 (exp -> ID listArray .)
    COMA            reduce using rule 224 (exp -> ID listArray .)
    DOSPT           reduce using rule 224 (exp -> ID listArray .)
    CORDER          reduce using rule 224 (exp -> ID listArray .)
    RELSE           reduce using rule 224 (exp -> ID listArray .)
    RELSEIF         reduce using rule 224 (exp -> ID listArray .)
    CORIZQ          shift and go to state 211


state 122

    (178) listArray -> CORIZQ . exp CORDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 212

state 123

    (187) exp -> MENOS exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 187 (exp -> MENOS exp .)
    MAS             reduce using rule 187 (exp -> MENOS exp .)
    MENOS           reduce using rule 187 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 187 (exp -> MENOS exp .)
    DIVISION        reduce using rule 187 (exp -> MENOS exp .)
    POTENCIA        reduce using rule 187 (exp -> MENOS exp .)
    MODULO          reduce using rule 187 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 187 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 187 (exp -> MENOS exp .)
    MAYOR           reduce using rule 187 (exp -> MENOS exp .)
    MENOR           reduce using rule 187 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 187 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 187 (exp -> MENOS exp .)
    ANDD            reduce using rule 187 (exp -> MENOS exp .)
    ORR             reduce using rule 187 (exp -> MENOS exp .)
    PRINT           reduce using rule 187 (exp -> MENOS exp .)
    PRINTLN         reduce using rule 187 (exp -> MENOS exp .)
    ID              reduce using rule 187 (exp -> MENOS exp .)
    GLOBAL          reduce using rule 187 (exp -> MENOS exp .)
    LOCAL           reduce using rule 187 (exp -> MENOS exp .)
    RIF             reduce using rule 187 (exp -> MENOS exp .)
    RWHILE          reduce using rule 187 (exp -> MENOS exp .)
    RFOR            reduce using rule 187 (exp -> MENOS exp .)
    RRETURN         reduce using rule 187 (exp -> MENOS exp .)
    RBREAK          reduce using rule 187 (exp -> MENOS exp .)
    RCONTINUE       reduce using rule 187 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 187 (exp -> MENOS exp .)
    PARDER          reduce using rule 187 (exp -> MENOS exp .)
    COMA            reduce using rule 187 (exp -> MENOS exp .)
    DOSPT           reduce using rule 187 (exp -> MENOS exp .)
    CORDER          reduce using rule 187 (exp -> MENOS exp .)
    RELSE           reduce using rule 187 (exp -> MENOS exp .)
    RELSEIF         reduce using rule 187 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! MULTIPLICACION  [ shift and go to state 92 ]
  ! DIVISION        [ shift and go to state 93 ]
  ! POTENCIA        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 124

    (196) exp -> NOTT exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 196 (exp -> NOTT exp .)
    ANDD            reduce using rule 196 (exp -> NOTT exp .)
    ORR             reduce using rule 196 (exp -> NOTT exp .)
    PRINT           reduce using rule 196 (exp -> NOTT exp .)
    PRINTLN         reduce using rule 196 (exp -> NOTT exp .)
    ID              reduce using rule 196 (exp -> NOTT exp .)
    GLOBAL          reduce using rule 196 (exp -> NOTT exp .)
    LOCAL           reduce using rule 196 (exp -> NOTT exp .)
    RIF             reduce using rule 196 (exp -> NOTT exp .)
    RWHILE          reduce using rule 196 (exp -> NOTT exp .)
    RFOR            reduce using rule 196 (exp -> NOTT exp .)
    RRETURN         reduce using rule 196 (exp -> NOTT exp .)
    RBREAK          reduce using rule 196 (exp -> NOTT exp .)
    RCONTINUE       reduce using rule 196 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 196 (exp -> NOTT exp .)
    PARDER          reduce using rule 196 (exp -> NOTT exp .)
    COMA            reduce using rule 196 (exp -> NOTT exp .)
    DOSPT           reduce using rule 196 (exp -> NOTT exp .)
    CORDER          reduce using rule 196 (exp -> NOTT exp .)
    RELSE           reduce using rule 196 (exp -> NOTT exp .)
    RELSEIF         reduce using rule 196 (exp -> NOTT exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101

  ! MAS             [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 196 (exp -> NOTT exp .) ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 125

    (197) exp -> UPPERCASE PARIZQ . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 213

state 126

    (215) exp -> PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 214
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 127

    (198) exp -> LOWERCASE PARIZQ . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 215

state 128

    (199) exp -> RLENGTH PARIZQ . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 216

state 129

    (200) exp -> PARSE PARIZQ . typeDef COMA exp PARDER
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 217

state 130

    (201) exp -> TRUNC PARIZQ . typeDef COMA exp PARDER
    (202) exp -> TRUNC PARIZQ . exp PARDER
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    typeDef                        shift and go to state 224
    exp                            shift and go to state 225

state 131

    (203) exp -> MFLOAT PARIZQ . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 226

state 132

    (204) exp -> MSTRING PARIZQ . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 227

state 133

    (225) exp -> CORIZQ listValues . CORDER
    (226) exp -> CORIZQ listValues . CORDER DOSPT DOSPT typeDef
    (138) listValues -> listValues . COMA exp

    CORDER          shift and go to state 228
    COMA            shift and go to state 171


state 134

    (227) exp -> CORIZQ CORDER .

    END             reduce using rule 227 (exp -> CORIZQ CORDER .)
    MAS             reduce using rule 227 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 227 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 227 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 227 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 227 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 227 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 227 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 227 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 227 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 227 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 227 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 227 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 227 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 227 (exp -> CORIZQ CORDER .)
    PRINT           reduce using rule 227 (exp -> CORIZQ CORDER .)
    PRINTLN         reduce using rule 227 (exp -> CORIZQ CORDER .)
    ID              reduce using rule 227 (exp -> CORIZQ CORDER .)
    GLOBAL          reduce using rule 227 (exp -> CORIZQ CORDER .)
    LOCAL           reduce using rule 227 (exp -> CORIZQ CORDER .)
    RIF             reduce using rule 227 (exp -> CORIZQ CORDER .)
    RWHILE          reduce using rule 227 (exp -> CORIZQ CORDER .)
    RFOR            reduce using rule 227 (exp -> CORIZQ CORDER .)
    RRETURN         reduce using rule 227 (exp -> CORIZQ CORDER .)
    RBREAK          reduce using rule 227 (exp -> CORIZQ CORDER .)
    RCONTINUE       reduce using rule 227 (exp -> CORIZQ CORDER .)
    PTCOMA          reduce using rule 227 (exp -> CORIZQ CORDER .)
    PARDER          reduce using rule 227 (exp -> CORIZQ CORDER .)
    COMA            reduce using rule 227 (exp -> CORIZQ CORDER .)
    DOSPT           reduce using rule 227 (exp -> CORIZQ CORDER .)
    CORDER          reduce using rule 227 (exp -> CORIZQ CORDER .)
    RELSE           reduce using rule 227 (exp -> CORIZQ CORDER .)
    RELSEIF         reduce using rule 227 (exp -> CORIZQ CORDER .)


state 135

    (162) whileSt -> RWHILE exp blockc .

    PRINT           reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    PRINTLN         reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    ID              reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    GLOBAL          reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    LOCAL           reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    FUNCTION        reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RIF             reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RWHILE          reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RFOR            reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RRETURN         reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RBREAK          reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RCONTINUE       reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    $end            reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    END             reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RELSE           reduce using rule 162 (whileSt -> RWHILE exp blockc .)
    RELSEIF         reduce using rule 162 (whileSt -> RWHILE exp blockc .)


state 136

    (169) blockc -> instructionsc . END PTCOMA
    (6) instructionsc -> instructionsc . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 229
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    instructionc                   shift and go to state 230
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 137

    (170) blockc -> END . PTCOMA

    PTCOMA          shift and go to state 231


state 138

    (7) instructionsc -> instructionc .

    END             reduce using rule 7 (instructionsc -> instructionc .)
    PRINT           reduce using rule 7 (instructionsc -> instructionc .)
    PRINTLN         reduce using rule 7 (instructionsc -> instructionc .)
    ID              reduce using rule 7 (instructionsc -> instructionc .)
    LOCAL           reduce using rule 7 (instructionsc -> instructionc .)
    GLOBAL          reduce using rule 7 (instructionsc -> instructionc .)
    RIF             reduce using rule 7 (instructionsc -> instructionc .)
    RWHILE          reduce using rule 7 (instructionsc -> instructionc .)
    RFOR            reduce using rule 7 (instructionsc -> instructionc .)
    RRETURN         reduce using rule 7 (instructionsc -> instructionc .)
    RBREAK          reduce using rule 7 (instructionsc -> instructionc .)
    RCONTINUE       reduce using rule 7 (instructionsc -> instructionc .)
    RELSE           reduce using rule 7 (instructionsc -> instructionc .)
    RELSEIF         reduce using rule 7 (instructionsc -> instructionc .)


state 139

    (31) instructionc -> p_print .

    END             reduce using rule 31 (instructionc -> p_print .)
    PRINT           reduce using rule 31 (instructionc -> p_print .)
    PRINTLN         reduce using rule 31 (instructionc -> p_print .)
    ID              reduce using rule 31 (instructionc -> p_print .)
    LOCAL           reduce using rule 31 (instructionc -> p_print .)
    GLOBAL          reduce using rule 31 (instructionc -> p_print .)
    RIF             reduce using rule 31 (instructionc -> p_print .)
    RWHILE          reduce using rule 31 (instructionc -> p_print .)
    RFOR            reduce using rule 31 (instructionc -> p_print .)
    RRETURN         reduce using rule 31 (instructionc -> p_print .)
    RBREAK          reduce using rule 31 (instructionc -> p_print .)
    RCONTINUE       reduce using rule 31 (instructionc -> p_print .)
    RELSE           reduce using rule 31 (instructionc -> p_print .)
    RELSEIF         reduce using rule 31 (instructionc -> p_print .)


state 140

    (32) instructionc -> p_println .

    END             reduce using rule 32 (instructionc -> p_println .)
    PRINT           reduce using rule 32 (instructionc -> p_println .)
    PRINTLN         reduce using rule 32 (instructionc -> p_println .)
    ID              reduce using rule 32 (instructionc -> p_println .)
    LOCAL           reduce using rule 32 (instructionc -> p_println .)
    GLOBAL          reduce using rule 32 (instructionc -> p_println .)
    RIF             reduce using rule 32 (instructionc -> p_println .)
    RWHILE          reduce using rule 32 (instructionc -> p_println .)
    RFOR            reduce using rule 32 (instructionc -> p_println .)
    RRETURN         reduce using rule 32 (instructionc -> p_println .)
    RBREAK          reduce using rule 32 (instructionc -> p_println .)
    RCONTINUE       reduce using rule 32 (instructionc -> p_println .)
    RELSE           reduce using rule 32 (instructionc -> p_println .)
    RELSEIF         reduce using rule 32 (instructionc -> p_println .)


state 141

    (33) instructionc -> declarationc .

    END             reduce using rule 33 (instructionc -> declarationc .)
    PRINT           reduce using rule 33 (instructionc -> declarationc .)
    PRINTLN         reduce using rule 33 (instructionc -> declarationc .)
    ID              reduce using rule 33 (instructionc -> declarationc .)
    LOCAL           reduce using rule 33 (instructionc -> declarationc .)
    GLOBAL          reduce using rule 33 (instructionc -> declarationc .)
    RIF             reduce using rule 33 (instructionc -> declarationc .)
    RWHILE          reduce using rule 33 (instructionc -> declarationc .)
    RFOR            reduce using rule 33 (instructionc -> declarationc .)
    RRETURN         reduce using rule 33 (instructionc -> declarationc .)
    RBREAK          reduce using rule 33 (instructionc -> declarationc .)
    RCONTINUE       reduce using rule 33 (instructionc -> declarationc .)
    RELSE           reduce using rule 33 (instructionc -> declarationc .)
    RELSEIF         reduce using rule 33 (instructionc -> declarationc .)


state 142

    (34) instructionc -> assignmentAc .

    END             reduce using rule 34 (instructionc -> assignmentAc .)
    PRINT           reduce using rule 34 (instructionc -> assignmentAc .)
    PRINTLN         reduce using rule 34 (instructionc -> assignmentAc .)
    ID              reduce using rule 34 (instructionc -> assignmentAc .)
    LOCAL           reduce using rule 34 (instructionc -> assignmentAc .)
    GLOBAL          reduce using rule 34 (instructionc -> assignmentAc .)
    RIF             reduce using rule 34 (instructionc -> assignmentAc .)
    RWHILE          reduce using rule 34 (instructionc -> assignmentAc .)
    RFOR            reduce using rule 34 (instructionc -> assignmentAc .)
    RRETURN         reduce using rule 34 (instructionc -> assignmentAc .)
    RBREAK          reduce using rule 34 (instructionc -> assignmentAc .)
    RCONTINUE       reduce using rule 34 (instructionc -> assignmentAc .)
    RELSE           reduce using rule 34 (instructionc -> assignmentAc .)
    RELSEIF         reduce using rule 34 (instructionc -> assignmentAc .)


state 143

    (35) instructionc -> callFuncSt .

    END             reduce using rule 35 (instructionc -> callFuncSt .)
    PRINT           reduce using rule 35 (instructionc -> callFuncSt .)
    PRINTLN         reduce using rule 35 (instructionc -> callFuncSt .)
    ID              reduce using rule 35 (instructionc -> callFuncSt .)
    LOCAL           reduce using rule 35 (instructionc -> callFuncSt .)
    GLOBAL          reduce using rule 35 (instructionc -> callFuncSt .)
    RIF             reduce using rule 35 (instructionc -> callFuncSt .)
    RWHILE          reduce using rule 35 (instructionc -> callFuncSt .)
    RFOR            reduce using rule 35 (instructionc -> callFuncSt .)
    RRETURN         reduce using rule 35 (instructionc -> callFuncSt .)
    RBREAK          reduce using rule 35 (instructionc -> callFuncSt .)
    RCONTINUE       reduce using rule 35 (instructionc -> callFuncSt .)
    RELSE           reduce using rule 35 (instructionc -> callFuncSt .)
    RELSEIF         reduce using rule 35 (instructionc -> callFuncSt .)


state 144

    (36) instructionc -> ifStc .

    END             reduce using rule 36 (instructionc -> ifStc .)
    PRINT           reduce using rule 36 (instructionc -> ifStc .)
    PRINTLN         reduce using rule 36 (instructionc -> ifStc .)
    ID              reduce using rule 36 (instructionc -> ifStc .)
    LOCAL           reduce using rule 36 (instructionc -> ifStc .)
    GLOBAL          reduce using rule 36 (instructionc -> ifStc .)
    RIF             reduce using rule 36 (instructionc -> ifStc .)
    RWHILE          reduce using rule 36 (instructionc -> ifStc .)
    RFOR            reduce using rule 36 (instructionc -> ifStc .)
    RRETURN         reduce using rule 36 (instructionc -> ifStc .)
    RBREAK          reduce using rule 36 (instructionc -> ifStc .)
    RCONTINUE       reduce using rule 36 (instructionc -> ifStc .)
    RELSE           reduce using rule 36 (instructionc -> ifStc .)
    RELSEIF         reduce using rule 36 (instructionc -> ifStc .)


state 145

    (37) instructionc -> whileSt .

    END             reduce using rule 37 (instructionc -> whileSt .)
    PRINT           reduce using rule 37 (instructionc -> whileSt .)
    PRINTLN         reduce using rule 37 (instructionc -> whileSt .)
    ID              reduce using rule 37 (instructionc -> whileSt .)
    LOCAL           reduce using rule 37 (instructionc -> whileSt .)
    GLOBAL          reduce using rule 37 (instructionc -> whileSt .)
    RIF             reduce using rule 37 (instructionc -> whileSt .)
    RWHILE          reduce using rule 37 (instructionc -> whileSt .)
    RFOR            reduce using rule 37 (instructionc -> whileSt .)
    RRETURN         reduce using rule 37 (instructionc -> whileSt .)
    RBREAK          reduce using rule 37 (instructionc -> whileSt .)
    RCONTINUE       reduce using rule 37 (instructionc -> whileSt .)
    RELSE           reduce using rule 37 (instructionc -> whileSt .)
    RELSEIF         reduce using rule 37 (instructionc -> whileSt .)


state 146

    (38) instructionc -> forSt .

    END             reduce using rule 38 (instructionc -> forSt .)
    PRINT           reduce using rule 38 (instructionc -> forSt .)
    PRINTLN         reduce using rule 38 (instructionc -> forSt .)
    ID              reduce using rule 38 (instructionc -> forSt .)
    LOCAL           reduce using rule 38 (instructionc -> forSt .)
    GLOBAL          reduce using rule 38 (instructionc -> forSt .)
    RIF             reduce using rule 38 (instructionc -> forSt .)
    RWHILE          reduce using rule 38 (instructionc -> forSt .)
    RFOR            reduce using rule 38 (instructionc -> forSt .)
    RRETURN         reduce using rule 38 (instructionc -> forSt .)
    RBREAK          reduce using rule 38 (instructionc -> forSt .)
    RCONTINUE       reduce using rule 38 (instructionc -> forSt .)
    RELSE           reduce using rule 38 (instructionc -> forSt .)
    RELSEIF         reduce using rule 38 (instructionc -> forSt .)


state 147

    (39) instructionc -> returnST .

    END             reduce using rule 39 (instructionc -> returnST .)
    PRINT           reduce using rule 39 (instructionc -> returnST .)
    PRINTLN         reduce using rule 39 (instructionc -> returnST .)
    ID              reduce using rule 39 (instructionc -> returnST .)
    LOCAL           reduce using rule 39 (instructionc -> returnST .)
    GLOBAL          reduce using rule 39 (instructionc -> returnST .)
    RIF             reduce using rule 39 (instructionc -> returnST .)
    RWHILE          reduce using rule 39 (instructionc -> returnST .)
    RFOR            reduce using rule 39 (instructionc -> returnST .)
    RRETURN         reduce using rule 39 (instructionc -> returnST .)
    RBREAK          reduce using rule 39 (instructionc -> returnST .)
    RCONTINUE       reduce using rule 39 (instructionc -> returnST .)
    RELSE           reduce using rule 39 (instructionc -> returnST .)
    RELSEIF         reduce using rule 39 (instructionc -> returnST .)


state 148

    (40) instructionc -> breakST .

    END             reduce using rule 40 (instructionc -> breakST .)
    PRINT           reduce using rule 40 (instructionc -> breakST .)
    PRINTLN         reduce using rule 40 (instructionc -> breakST .)
    ID              reduce using rule 40 (instructionc -> breakST .)
    LOCAL           reduce using rule 40 (instructionc -> breakST .)
    GLOBAL          reduce using rule 40 (instructionc -> breakST .)
    RIF             reduce using rule 40 (instructionc -> breakST .)
    RWHILE          reduce using rule 40 (instructionc -> breakST .)
    RFOR            reduce using rule 40 (instructionc -> breakST .)
    RRETURN         reduce using rule 40 (instructionc -> breakST .)
    RBREAK          reduce using rule 40 (instructionc -> breakST .)
    RCONTINUE       reduce using rule 40 (instructionc -> breakST .)
    RELSE           reduce using rule 40 (instructionc -> breakST .)
    RELSEIF         reduce using rule 40 (instructionc -> breakST .)


state 149

    (41) instructionc -> continueST .

    END             reduce using rule 41 (instructionc -> continueST .)
    PRINT           reduce using rule 41 (instructionc -> continueST .)
    PRINTLN         reduce using rule 41 (instructionc -> continueST .)
    ID              reduce using rule 41 (instructionc -> continueST .)
    LOCAL           reduce using rule 41 (instructionc -> continueST .)
    GLOBAL          reduce using rule 41 (instructionc -> continueST .)
    RIF             reduce using rule 41 (instructionc -> continueST .)
    RWHILE          reduce using rule 41 (instructionc -> continueST .)
    RFOR            reduce using rule 41 (instructionc -> continueST .)
    RRETURN         reduce using rule 41 (instructionc -> continueST .)
    RBREAK          reduce using rule 41 (instructionc -> continueST .)
    RCONTINUE       reduce using rule 41 (instructionc -> continueST .)
    RELSE           reduce using rule 41 (instructionc -> continueST .)
    RELSEIF         reduce using rule 41 (instructionc -> continueST .)


state 150

    (76) declarationc -> ID . IGUAL exp PTCOMA
    (77) declarationc -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (114) assignmentAc -> ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (120) assignmentAc -> ID . listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (134) callFuncSt -> ID . parametersCallFunc PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER
    (136) parametersCallFunc -> . PARIZQ listValues PARDER
    (137) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 232
    CORIZQ          shift and go to state 32
    PARIZQ          shift and go to state 35

    listArray2                     shift and go to state 233
    parametersCallFunc             shift and go to state 34

state 151

    (78) declarationc -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> LOCAL . ID IGUAL exp PTCOMA
    (80) declarationc -> LOCAL . ID PTCOMA
    (88) declarationc -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> LOCAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 234


state 152

    (81) declarationc -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL . ID IGUAL exp PTCOMA
    (83) declarationc -> GLOBAL . ID PTCOMA
    (86) declarationc -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (116) assignmentAc -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (122) assignmentAc -> GLOBAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 235


state 153

    (151) ifStc -> RIF . exp END PTCOMA
    (152) ifStc -> RIF . exp blockifc END PTCOMA
    (153) ifStc -> RIF . exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> RIF . exp blockifc RELSE END PTCOMA
    (155) ifStc -> RIF . exp blockifc elseifStc END PTCOMA
    (156) ifStc -> RIF . exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> RIF . exp blockifc elseifStc RELSE END PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 236

state 154

    (163) forSt -> RFOR parameterFor RIN . exp DOSPT exp blockc
    (164) forSt -> RFOR parameterFor RIN . exp blockc
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 237

state 155

    (165) parameterFor -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 238


state 156

    (173) returnST -> RRETURN exp PTCOMA .

    PRINT           reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    PRINTLN         reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    ID              reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    GLOBAL          reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    LOCAL           reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    FUNCTION        reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RIF             reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RWHILE          reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RFOR            reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RRETURN         reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RBREAK          reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RCONTINUE       reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    $end            reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    END             reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RELSE           reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)
    RELSEIF         reduce using rule 173 (returnST -> RRETURN exp PTCOMA .)


state 157

    (42) p_print -> PRINT PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 239


state 158

    (46) exps -> exps COMA . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 240

state 159

    (43) p_print -> PRINT PARIZQ PARDER PTCOMA .

    PRINT           reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    PRINTLN         reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    GLOBAL          reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    LOCAL           reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    FUNCTION        reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RIF             reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RWHILE          reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RFOR            reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RRETURN         reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RBREAK          reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RCONTINUE       reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    END             reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RELSE           reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RELSEIF         reduce using rule 43 (p_print -> PRINT PARIZQ PARDER PTCOMA .)


state 160

    (44) p_println -> PRINTLN PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 241


state 161

    (45) p_println -> PRINTLN PARIZQ PARDER PTCOMA .

    PRINT           reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    PRINTLN         reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    GLOBAL          reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    LOCAL           reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    FUNCTION        reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RIF             reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RWHILE          reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RFOR            reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RRETURN         reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RBREAK          reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RCONTINUE       reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    END             reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RELSE           reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RELSEIF         reduce using rule 45 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)


state 162

    (48) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 48 (declaration -> ID IGUAL exp PTCOMA .)


state 163

    (49) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 242


state 164

    (56) declaration -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (57) declaration -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 243
    COMA            shift and go to state 158


state 165

    (47) exps -> exp .
    (139) listValues -> exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

  ! reduce/reduce conflict for CORDER resolved using rule 47 (exps -> exp .)
  ! reduce/reduce conflict for COMA resolved using rule 47 (exps -> exp .)
    CORDER          reduce using rule 47 (exps -> exp .)
    COMA            reduce using rule 47 (exps -> exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103

  ! CORDER          [ reduce using rule 139 (listValues -> exp .) ]
  ! COMA            [ reduce using rule 139 (listValues -> exp .) ]


state 166

    (180) listArray2 -> CORIZQ exp CORDER .

    IGUAL           reduce using rule 180 (listArray2 -> CORIZQ exp CORDER .)
    CORIZQ          reduce using rule 180 (listArray2 -> CORIZQ exp CORDER .)


state 167

    (90) assignmentA -> ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (91) assignmentA -> ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 244
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 168

    (96) assignmentA -> ID listArray2 IGUAL exp . PTCOMA
    (97) assignmentA -> ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 245
    DOSPT           shift and go to state 246
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 169

    (179) listArray2 -> listArray2 CORIZQ exp . CORDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    CORDER          shift and go to state 247
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 170

    (136) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    END             reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAS             reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENOS           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MULTIPLICACION  reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DIVISION        reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    POTENCIA        reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MODULO          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    IGUALIGUAL      reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DISTINTO        reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAYOR           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENOR           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAYORIGUAL      reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENORIGUAL      reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ANDD            reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ORR             reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PRINT           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PRINTLN         reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ID              reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    GLOBAL          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    LOCAL           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RIF             reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RWHILE          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RFOR            reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RRETURN         reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RBREAK          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RCONTINUE       reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PARDER          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    COMA            reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DOSPT           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    CORDER          reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RELSE           reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RELSEIF         reduce using rule 136 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 171

    (138) listValues -> listValues COMA . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 248

state 172

    (50) declaration -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> GLOBAL ID IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 249
    PTCOMA          shift and go to state 250
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 173

    (58) declaration -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 251
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 174

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (98) assignmentA -> GLOBAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 IGUAL . exp PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 252
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 253

state 175

    (53) declaration -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> LOCAL ID IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 254
    PTCOMA          shift and go to state 255
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 176

    (60) declaration -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 256
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 177

    (94) assignmentA -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> LOCAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 IGUAL . exp PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 257
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 258

state 178

    (126) function -> FUNCTION ID parametersFunc DOSPT . DOSPT typeDef blockf

    DOSPT           shift and go to state 259


state 179

    (127) function -> FUNCTION ID parametersFunc blockf .

    PRINT           reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    PRINTLN         reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    ID              reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    GLOBAL          reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    LOCAL           reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    FUNCTION        reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    RIF             reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    RWHILE          reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    RFOR            reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    RRETURN         reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    RBREAK          reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    RCONTINUE       reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)
    $end            reduce using rule 127 (function -> FUNCTION ID parametersFunc blockf .)


state 180

    (167) blockf -> instructionsf . END PTCOMA
    (4) instructionsf -> instructionsf . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 260
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    instructionf                   shift and go to state 206
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 181

    (168) blockf -> END . PTCOMA

    PTCOMA          shift and go to state 261


state 182

    (128) parametersFunc -> PARIZQ parameters . PARDER
    (130) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 262
    COMA            shift and go to state 263


state 183

    (129) parametersFunc -> PARIZQ PARDER .

    DOSPT           reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    END             reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    RRETURN         reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    RBREAK          reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)
    RCONTINUE       reduce using rule 129 (parametersFunc -> PARIZQ PARDER .)


state 184

    (131) parameters -> parameter .

    PARDER          reduce using rule 131 (parameters -> parameter .)
    COMA            reduce using rule 131 (parameters -> parameter .)


state 185

    (132) parameter -> ID . DOSPT DOSPT typeDef
    (133) parameter -> ID .

    DOSPT           shift and go to state 264
    PARDER          reduce using rule 133 (parameter -> ID .)
    COMA            reduce using rule 133 (parameter -> ID .)


state 186

    (140) ifSt -> RIF exp END PTCOMA .

    PRINT           reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    ID              reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    FUNCTION        reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RIF             reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RRETURN         reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RBREAK          reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RCONTINUE       reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    $end            reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    END             reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 140 (ifSt -> RIF exp END PTCOMA .)


state 187

    (141) ifSt -> RIF exp blockiff END . PTCOMA

    PTCOMA          shift and go to state 265


state 188

    (142) ifSt -> RIF exp blockiff RELSE . blockiff END PTCOMA
    (143) ifSt -> RIF exp blockiff RELSE . END PTCOMA
    (171) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 267
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockiff                       shift and go to state 266
    instructionsf                  shift and go to state 104
    instructionf                   shift and go to state 105
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 189

    (144) ifSt -> RIF exp blockiff elseifSt . END PTCOMA
    (145) ifSt -> RIF exp blockiff elseifSt . RELSE blockiff END PTCOMA
    (146) ifSt -> RIF exp blockiff elseifSt . RELSE END PTCOMA
    (147) elseifSt -> elseifSt . conelseif
    (149) conelseif -> . RELSEIF exp blockiff
    (150) conelseif -> . RELSEIF exp

    END             shift and go to state 268
    RELSE           shift and go to state 269
    RELSEIF         shift and go to state 191

    conelseif                      shift and go to state 270

state 190

    (148) elseifSt -> conelseif .

    END             reduce using rule 148 (elseifSt -> conelseif .)
    RELSE           reduce using rule 148 (elseifSt -> conelseif .)
    RELSEIF         reduce using rule 148 (elseifSt -> conelseif .)


state 191

    (149) conelseif -> RELSEIF . exp blockiff
    (150) conelseif -> RELSEIF . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 271

state 192

    (181) exp -> exp MAS exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 181 (exp -> exp MAS exp .)
    MAS             reduce using rule 181 (exp -> exp MAS exp .)
    MENOS           reduce using rule 181 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 181 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 181 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 181 (exp -> exp MAS exp .)
    MENOR           reduce using rule 181 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 181 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 181 (exp -> exp MAS exp .)
    ANDD            reduce using rule 181 (exp -> exp MAS exp .)
    ORR             reduce using rule 181 (exp -> exp MAS exp .)
    PRINT           reduce using rule 181 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 181 (exp -> exp MAS exp .)
    ID              reduce using rule 181 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 181 (exp -> exp MAS exp .)
    LOCAL           reduce using rule 181 (exp -> exp MAS exp .)
    RIF             reduce using rule 181 (exp -> exp MAS exp .)
    RWHILE          reduce using rule 181 (exp -> exp MAS exp .)
    RFOR            reduce using rule 181 (exp -> exp MAS exp .)
    RRETURN         reduce using rule 181 (exp -> exp MAS exp .)
    RBREAK          reduce using rule 181 (exp -> exp MAS exp .)
    RCONTINUE       reduce using rule 181 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 181 (exp -> exp MAS exp .)
    PARDER          reduce using rule 181 (exp -> exp MAS exp .)
    COMA            reduce using rule 181 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 181 (exp -> exp MAS exp .)
    CORDER          reduce using rule 181 (exp -> exp MAS exp .)
    RELSE           reduce using rule 181 (exp -> exp MAS exp .)
    RELSEIF         reduce using rule 181 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MULTIPLICACION  [ reduce using rule 181 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 181 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 181 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 181 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 193

    (182) exp -> exp MENOS exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 182 (exp -> exp MENOS exp .)
    MAS             reduce using rule 182 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 182 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 182 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 182 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 182 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 182 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 182 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 182 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 182 (exp -> exp MENOS exp .)
    ORR             reduce using rule 182 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 182 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 182 (exp -> exp MENOS exp .)
    ID              reduce using rule 182 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 182 (exp -> exp MENOS exp .)
    LOCAL           reduce using rule 182 (exp -> exp MENOS exp .)
    RIF             reduce using rule 182 (exp -> exp MENOS exp .)
    RWHILE          reduce using rule 182 (exp -> exp MENOS exp .)
    RFOR            reduce using rule 182 (exp -> exp MENOS exp .)
    RRETURN         reduce using rule 182 (exp -> exp MENOS exp .)
    RBREAK          reduce using rule 182 (exp -> exp MENOS exp .)
    RCONTINUE       reduce using rule 182 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 182 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 182 (exp -> exp MENOS exp .)
    COMA            reduce using rule 182 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 182 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 182 (exp -> exp MENOS exp .)
    RELSE           reduce using rule 182 (exp -> exp MENOS exp .)
    RELSEIF         reduce using rule 182 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MULTIPLICACION  [ reduce using rule 182 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 182 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 182 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 182 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 194

    (183) exp -> exp MULTIPLICACION exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    PRINTLN         reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    ID              reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    GLOBAL          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    LOCAL           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RIF             reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RWHILE          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RFOR            reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RRETURN         reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RBREAK          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RCONTINUE       reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RELSE           reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    RELSEIF         reduce using rule 183 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 94

  ! POTENCIA        [ reduce using rule 183 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! MULTIPLICACION  [ shift and go to state 92 ]
  ! DIVISION        [ shift and go to state 93 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 195

    (184) exp -> exp DIVISION exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 184 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 184 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 184 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 184 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 184 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 184 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 184 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 184 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 184 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 184 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 184 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 184 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 184 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 184 (exp -> exp DIVISION exp .)
    PRINT           reduce using rule 184 (exp -> exp DIVISION exp .)
    PRINTLN         reduce using rule 184 (exp -> exp DIVISION exp .)
    ID              reduce using rule 184 (exp -> exp DIVISION exp .)
    GLOBAL          reduce using rule 184 (exp -> exp DIVISION exp .)
    LOCAL           reduce using rule 184 (exp -> exp DIVISION exp .)
    RIF             reduce using rule 184 (exp -> exp DIVISION exp .)
    RWHILE          reduce using rule 184 (exp -> exp DIVISION exp .)
    RFOR            reduce using rule 184 (exp -> exp DIVISION exp .)
    RRETURN         reduce using rule 184 (exp -> exp DIVISION exp .)
    RBREAK          reduce using rule 184 (exp -> exp DIVISION exp .)
    RCONTINUE       reduce using rule 184 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 184 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 184 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 184 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 184 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 184 (exp -> exp DIVISION exp .)
    RELSE           reduce using rule 184 (exp -> exp DIVISION exp .)
    RELSEIF         reduce using rule 184 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 94

  ! POTENCIA        [ reduce using rule 184 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! MULTIPLICACION  [ shift and go to state 92 ]
  ! DIVISION        [ shift and go to state 93 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 196

    (185) exp -> exp POTENCIA exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 185 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 185 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 185 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 185 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 185 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 185 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 185 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 185 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 185 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 185 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 185 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 185 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 185 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 185 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 185 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 185 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 185 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 185 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 185 (exp -> exp POTENCIA exp .)
    LOCAL           reduce using rule 185 (exp -> exp POTENCIA exp .)
    RIF             reduce using rule 185 (exp -> exp POTENCIA exp .)
    RWHILE          reduce using rule 185 (exp -> exp POTENCIA exp .)
    RFOR            reduce using rule 185 (exp -> exp POTENCIA exp .)
    RRETURN         reduce using rule 185 (exp -> exp POTENCIA exp .)
    RBREAK          reduce using rule 185 (exp -> exp POTENCIA exp .)
    RCONTINUE       reduce using rule 185 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 185 (exp -> exp POTENCIA exp .)
    PARDER          reduce using rule 185 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 185 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 185 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 185 (exp -> exp POTENCIA exp .)
    RELSE           reduce using rule 185 (exp -> exp POTENCIA exp .)
    RELSEIF         reduce using rule 185 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! MULTIPLICACION  [ shift and go to state 92 ]
  ! DIVISION        [ shift and go to state 93 ]
  ! POTENCIA        [ shift and go to state 94 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 197

    (186) exp -> exp MODULO exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 186 (exp -> exp MODULO exp .)
    MAS             reduce using rule 186 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 186 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 186 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 186 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 186 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 186 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 186 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 186 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 186 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 186 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 186 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 186 (exp -> exp MODULO exp .)
    ORR             reduce using rule 186 (exp -> exp MODULO exp .)
    PRINT           reduce using rule 186 (exp -> exp MODULO exp .)
    PRINTLN         reduce using rule 186 (exp -> exp MODULO exp .)
    ID              reduce using rule 186 (exp -> exp MODULO exp .)
    GLOBAL          reduce using rule 186 (exp -> exp MODULO exp .)
    LOCAL           reduce using rule 186 (exp -> exp MODULO exp .)
    RIF             reduce using rule 186 (exp -> exp MODULO exp .)
    RWHILE          reduce using rule 186 (exp -> exp MODULO exp .)
    RFOR            reduce using rule 186 (exp -> exp MODULO exp .)
    RRETURN         reduce using rule 186 (exp -> exp MODULO exp .)
    RBREAK          reduce using rule 186 (exp -> exp MODULO exp .)
    RCONTINUE       reduce using rule 186 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 186 (exp -> exp MODULO exp .)
    PARDER          reduce using rule 186 (exp -> exp MODULO exp .)
    COMA            reduce using rule 186 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 186 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 186 (exp -> exp MODULO exp .)
    RELSE           reduce using rule 186 (exp -> exp MODULO exp .)
    RELSEIF         reduce using rule 186 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 94

  ! POTENCIA        [ reduce using rule 186 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 90 ]
  ! MENOS           [ shift and go to state 91 ]
  ! MULTIPLICACION  [ shift and go to state 92 ]
  ! DIVISION        [ shift and go to state 93 ]
  ! MODULO          [ shift and go to state 95 ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 198

    (188) exp -> exp IGUALIGUAL exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    ANDD            reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    ORR             reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    PRINT           reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    PRINTLN         reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    ID              reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    GLOBAL          reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    LOCAL           reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RIF             reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RWHILE          reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RFOR            reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RRETURN         reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RBREAK          reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RCONTINUE       reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RELSE           reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    RELSEIF         reduce using rule 188 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 188 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 188 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 188 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 188 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 188 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 188 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 199

    (189) exp -> exp DISTINTO exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 189 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 189 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 189 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 189 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 189 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 189 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 189 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 189 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 189 (exp -> exp DISTINTO exp .)
    PRINT           reduce using rule 189 (exp -> exp DISTINTO exp .)
    PRINTLN         reduce using rule 189 (exp -> exp DISTINTO exp .)
    ID              reduce using rule 189 (exp -> exp DISTINTO exp .)
    GLOBAL          reduce using rule 189 (exp -> exp DISTINTO exp .)
    LOCAL           reduce using rule 189 (exp -> exp DISTINTO exp .)
    RIF             reduce using rule 189 (exp -> exp DISTINTO exp .)
    RWHILE          reduce using rule 189 (exp -> exp DISTINTO exp .)
    RFOR            reduce using rule 189 (exp -> exp DISTINTO exp .)
    RRETURN         reduce using rule 189 (exp -> exp DISTINTO exp .)
    RBREAK          reduce using rule 189 (exp -> exp DISTINTO exp .)
    RCONTINUE       reduce using rule 189 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 189 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 189 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 189 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 189 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 189 (exp -> exp DISTINTO exp .)
    RELSE           reduce using rule 189 (exp -> exp DISTINTO exp .)
    RELSEIF         reduce using rule 189 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 189 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 189 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 189 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 189 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 189 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 189 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 200

    (190) exp -> exp MAYOR exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 190 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 190 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 190 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 190 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 190 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 190 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 190 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 190 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 190 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 190 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 190 (exp -> exp MAYOR exp .)
    ID              reduce using rule 190 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 190 (exp -> exp MAYOR exp .)
    LOCAL           reduce using rule 190 (exp -> exp MAYOR exp .)
    RIF             reduce using rule 190 (exp -> exp MAYOR exp .)
    RWHILE          reduce using rule 190 (exp -> exp MAYOR exp .)
    RFOR            reduce using rule 190 (exp -> exp MAYOR exp .)
    RRETURN         reduce using rule 190 (exp -> exp MAYOR exp .)
    RBREAK          reduce using rule 190 (exp -> exp MAYOR exp .)
    RCONTINUE       reduce using rule 190 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 190 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 190 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 190 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 190 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 190 (exp -> exp MAYOR exp .)
    RELSE           reduce using rule 190 (exp -> exp MAYOR exp .)
    RELSEIF         reduce using rule 190 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 190 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 190 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 190 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 190 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 190 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 190 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 201

    (191) exp -> exp MENOR exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 191 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 191 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 191 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 191 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 191 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 191 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 191 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 191 (exp -> exp MENOR exp .)
    ORR             reduce using rule 191 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 191 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 191 (exp -> exp MENOR exp .)
    ID              reduce using rule 191 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 191 (exp -> exp MENOR exp .)
    LOCAL           reduce using rule 191 (exp -> exp MENOR exp .)
    RIF             reduce using rule 191 (exp -> exp MENOR exp .)
    RWHILE          reduce using rule 191 (exp -> exp MENOR exp .)
    RFOR            reduce using rule 191 (exp -> exp MENOR exp .)
    RRETURN         reduce using rule 191 (exp -> exp MENOR exp .)
    RBREAK          reduce using rule 191 (exp -> exp MENOR exp .)
    RCONTINUE       reduce using rule 191 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 191 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 191 (exp -> exp MENOR exp .)
    COMA            reduce using rule 191 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 191 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 191 (exp -> exp MENOR exp .)
    RELSE           reduce using rule 191 (exp -> exp MENOR exp .)
    RELSEIF         reduce using rule 191 (exp -> exp MENOR exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 191 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 191 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 191 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 191 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 191 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 191 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 202

    (192) exp -> exp MAYORIGUAL exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    LOCAL           reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RIF             reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RWHILE          reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RFOR            reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RRETURN         reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RBREAK          reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RCONTINUE       reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RELSE           reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    RELSEIF         reduce using rule 192 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 192 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 192 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 192 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 192 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 192 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 192 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 203

    (193) exp -> exp MENORIGUAL exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    LOCAL           reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RIF             reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RWHILE          reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RFOR            reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RRETURN         reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RBREAK          reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RCONTINUE       reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RELSE           reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    RELSEIF         reduce using rule 193 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95

  ! MAS             [ reduce using rule 193 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 193 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 193 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 193 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 193 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 193 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 96 ]
  ! DISTINTO        [ shift and go to state 97 ]
  ! MAYOR           [ shift and go to state 98 ]
  ! MENOR           [ shift and go to state 99 ]
  ! MAYORIGUAL      [ shift and go to state 100 ]
  ! MENORIGUAL      [ shift and go to state 101 ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 204

    (194) exp -> exp ANDD exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 194 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 194 (exp -> exp ANDD exp .)
    PRINT           reduce using rule 194 (exp -> exp ANDD exp .)
    PRINTLN         reduce using rule 194 (exp -> exp ANDD exp .)
    ID              reduce using rule 194 (exp -> exp ANDD exp .)
    GLOBAL          reduce using rule 194 (exp -> exp ANDD exp .)
    LOCAL           reduce using rule 194 (exp -> exp ANDD exp .)
    RIF             reduce using rule 194 (exp -> exp ANDD exp .)
    RWHILE          reduce using rule 194 (exp -> exp ANDD exp .)
    RFOR            reduce using rule 194 (exp -> exp ANDD exp .)
    RRETURN         reduce using rule 194 (exp -> exp ANDD exp .)
    RBREAK          reduce using rule 194 (exp -> exp ANDD exp .)
    RCONTINUE       reduce using rule 194 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 194 (exp -> exp ANDD exp .)
    PARDER          reduce using rule 194 (exp -> exp ANDD exp .)
    COMA            reduce using rule 194 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 194 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 194 (exp -> exp ANDD exp .)
    RELSE           reduce using rule 194 (exp -> exp ANDD exp .)
    RELSEIF         reduce using rule 194 (exp -> exp ANDD exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ORR             shift and go to state 103

  ! MAS             [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 194 (exp -> exp ANDD exp .) ]
  ! ANDD            [ shift and go to state 102 ]


state 205

    (195) exp -> exp ORR exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    END             reduce using rule 195 (exp -> exp ORR exp .)
    ANDD            reduce using rule 195 (exp -> exp ORR exp .)
    ORR             reduce using rule 195 (exp -> exp ORR exp .)
    PRINT           reduce using rule 195 (exp -> exp ORR exp .)
    PRINTLN         reduce using rule 195 (exp -> exp ORR exp .)
    ID              reduce using rule 195 (exp -> exp ORR exp .)
    GLOBAL          reduce using rule 195 (exp -> exp ORR exp .)
    LOCAL           reduce using rule 195 (exp -> exp ORR exp .)
    RIF             reduce using rule 195 (exp -> exp ORR exp .)
    RWHILE          reduce using rule 195 (exp -> exp ORR exp .)
    RFOR            reduce using rule 195 (exp -> exp ORR exp .)
    RRETURN         reduce using rule 195 (exp -> exp ORR exp .)
    RBREAK          reduce using rule 195 (exp -> exp ORR exp .)
    RCONTINUE       reduce using rule 195 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 195 (exp -> exp ORR exp .)
    PARDER          reduce using rule 195 (exp -> exp ORR exp .)
    COMA            reduce using rule 195 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 195 (exp -> exp ORR exp .)
    CORDER          reduce using rule 195 (exp -> exp ORR exp .)
    RELSE           reduce using rule 195 (exp -> exp ORR exp .)
    RELSEIF         reduce using rule 195 (exp -> exp ORR exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101

  ! MAS             [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 195 (exp -> exp ORR exp .) ]
  ! ANDD            [ shift and go to state 102 ]
  ! ORR             [ shift and go to state 103 ]


state 206

    (4) instructionsf -> instructionsf instructionf .

    PRINT           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    PRINTLN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    ID              reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    GLOBAL          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    LOCAL           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RIF             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RWHILE          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RFOR            reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RRETURN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RBREAK          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RCONTINUE       reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    END             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSE           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSEIF         reduce using rule 4 (instructionsf -> instructionsf instructionf .)


state 207

    (62) declarationf -> ID IGUAL . exp PTCOMA
    (63) declarationf -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (71) declarationf -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 273
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 272

state 208

    (102) assignmentAf -> ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (108) assignmentAf -> ID listArray2 . IGUAL exp PTCOMA
    (109) assignmentAf -> ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 274
    CORIZQ          shift and go to state 75


state 209

    (64) declarationf -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> GLOBAL ID . IGUAL exp PTCOMA
    (66) declarationf -> GLOBAL ID . PTCOMA
    (72) declarationf -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (104) assignmentAf -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (110) assignmentAf -> GLOBAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID . listArray2 IGUAL exp PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 275
    PTCOMA          shift and go to state 276
    CORIZQ          shift and go to state 32

    listArray2                     shift and go to state 277

state 210

    (67) declarationf -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> LOCAL ID . IGUAL exp PTCOMA
    (69) declarationf -> LOCAL ID . PTCOMA
    (74) declarationf -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> LOCAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID . listArray2 IGUAL exp PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 278
    PTCOMA          shift and go to state 279
    CORIZQ          shift and go to state 32

    listArray2                     shift and go to state 280

state 211

    (177) listArray -> listArray CORIZQ . exp CORDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 281

state 212

    (178) listArray -> CORIZQ exp . CORDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    CORDER          shift and go to state 282
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 213

    (197) exp -> UPPERCASE PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 283
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 214

    (215) exp -> PARIZQ exp PARDER .

    END             reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    PRINT           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    ID              reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    LOCAL           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RIF             reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RWHILE          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RFOR            reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RRETURN         reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RBREAK          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    PARDER          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RELSE           reduce using rule 215 (exp -> PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 215 (exp -> PARIZQ exp PARDER .)


state 215

    (198) exp -> LOWERCASE PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 284
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 216

    (199) exp -> RLENGTH PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 285
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 217

    (200) exp -> PARSE PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 286


state 218

    (205) typeDef -> RINT .

    COMA            reduce using rule 205 (typeDef -> RINT .)
    RIN             reduce using rule 205 (typeDef -> RINT .)
    PTCOMA          reduce using rule 205 (typeDef -> RINT .)
    END             reduce using rule 205 (typeDef -> RINT .)
    PRINT           reduce using rule 205 (typeDef -> RINT .)
    PRINTLN         reduce using rule 205 (typeDef -> RINT .)
    ID              reduce using rule 205 (typeDef -> RINT .)
    GLOBAL          reduce using rule 205 (typeDef -> RINT .)
    LOCAL           reduce using rule 205 (typeDef -> RINT .)
    RIF             reduce using rule 205 (typeDef -> RINT .)
    RWHILE          reduce using rule 205 (typeDef -> RINT .)
    RFOR            reduce using rule 205 (typeDef -> RINT .)
    RRETURN         reduce using rule 205 (typeDef -> RINT .)
    RBREAK          reduce using rule 205 (typeDef -> RINT .)
    RCONTINUE       reduce using rule 205 (typeDef -> RINT .)
    PARDER          reduce using rule 205 (typeDef -> RINT .)
    MAS             reduce using rule 205 (typeDef -> RINT .)
    MENOS           reduce using rule 205 (typeDef -> RINT .)
    MULTIPLICACION  reduce using rule 205 (typeDef -> RINT .)
    DIVISION        reduce using rule 205 (typeDef -> RINT .)
    POTENCIA        reduce using rule 205 (typeDef -> RINT .)
    MODULO          reduce using rule 205 (typeDef -> RINT .)
    IGUALIGUAL      reduce using rule 205 (typeDef -> RINT .)
    DISTINTO        reduce using rule 205 (typeDef -> RINT .)
    MAYOR           reduce using rule 205 (typeDef -> RINT .)
    MENOR           reduce using rule 205 (typeDef -> RINT .)
    MAYORIGUAL      reduce using rule 205 (typeDef -> RINT .)
    MENORIGUAL      reduce using rule 205 (typeDef -> RINT .)
    ANDD            reduce using rule 205 (typeDef -> RINT .)
    ORR             reduce using rule 205 (typeDef -> RINT .)
    DOSPT           reduce using rule 205 (typeDef -> RINT .)
    CORDER          reduce using rule 205 (typeDef -> RINT .)
    RELSE           reduce using rule 205 (typeDef -> RINT .)
    RELSEIF         reduce using rule 205 (typeDef -> RINT .)


state 219

    (206) typeDef -> RFLOAT .

    COMA            reduce using rule 206 (typeDef -> RFLOAT .)
    RIN             reduce using rule 206 (typeDef -> RFLOAT .)
    PTCOMA          reduce using rule 206 (typeDef -> RFLOAT .)
    END             reduce using rule 206 (typeDef -> RFLOAT .)
    PRINT           reduce using rule 206 (typeDef -> RFLOAT .)
    PRINTLN         reduce using rule 206 (typeDef -> RFLOAT .)
    ID              reduce using rule 206 (typeDef -> RFLOAT .)
    GLOBAL          reduce using rule 206 (typeDef -> RFLOAT .)
    LOCAL           reduce using rule 206 (typeDef -> RFLOAT .)
    RIF             reduce using rule 206 (typeDef -> RFLOAT .)
    RWHILE          reduce using rule 206 (typeDef -> RFLOAT .)
    RFOR            reduce using rule 206 (typeDef -> RFLOAT .)
    RRETURN         reduce using rule 206 (typeDef -> RFLOAT .)
    RBREAK          reduce using rule 206 (typeDef -> RFLOAT .)
    RCONTINUE       reduce using rule 206 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 206 (typeDef -> RFLOAT .)
    MAS             reduce using rule 206 (typeDef -> RFLOAT .)
    MENOS           reduce using rule 206 (typeDef -> RFLOAT .)
    MULTIPLICACION  reduce using rule 206 (typeDef -> RFLOAT .)
    DIVISION        reduce using rule 206 (typeDef -> RFLOAT .)
    POTENCIA        reduce using rule 206 (typeDef -> RFLOAT .)
    MODULO          reduce using rule 206 (typeDef -> RFLOAT .)
    IGUALIGUAL      reduce using rule 206 (typeDef -> RFLOAT .)
    DISTINTO        reduce using rule 206 (typeDef -> RFLOAT .)
    MAYOR           reduce using rule 206 (typeDef -> RFLOAT .)
    MENOR           reduce using rule 206 (typeDef -> RFLOAT .)
    MAYORIGUAL      reduce using rule 206 (typeDef -> RFLOAT .)
    MENORIGUAL      reduce using rule 206 (typeDef -> RFLOAT .)
    ANDD            reduce using rule 206 (typeDef -> RFLOAT .)
    ORR             reduce using rule 206 (typeDef -> RFLOAT .)
    DOSPT           reduce using rule 206 (typeDef -> RFLOAT .)
    CORDER          reduce using rule 206 (typeDef -> RFLOAT .)
    RELSE           reduce using rule 206 (typeDef -> RFLOAT .)
    RELSEIF         reduce using rule 206 (typeDef -> RFLOAT .)


state 220

    (207) typeDef -> RSTRING .

    COMA            reduce using rule 207 (typeDef -> RSTRING .)
    RIN             reduce using rule 207 (typeDef -> RSTRING .)
    PTCOMA          reduce using rule 207 (typeDef -> RSTRING .)
    END             reduce using rule 207 (typeDef -> RSTRING .)
    PRINT           reduce using rule 207 (typeDef -> RSTRING .)
    PRINTLN         reduce using rule 207 (typeDef -> RSTRING .)
    ID              reduce using rule 207 (typeDef -> RSTRING .)
    GLOBAL          reduce using rule 207 (typeDef -> RSTRING .)
    LOCAL           reduce using rule 207 (typeDef -> RSTRING .)
    RIF             reduce using rule 207 (typeDef -> RSTRING .)
    RWHILE          reduce using rule 207 (typeDef -> RSTRING .)
    RFOR            reduce using rule 207 (typeDef -> RSTRING .)
    RRETURN         reduce using rule 207 (typeDef -> RSTRING .)
    RBREAK          reduce using rule 207 (typeDef -> RSTRING .)
    RCONTINUE       reduce using rule 207 (typeDef -> RSTRING .)
    PARDER          reduce using rule 207 (typeDef -> RSTRING .)
    MAS             reduce using rule 207 (typeDef -> RSTRING .)
    MENOS           reduce using rule 207 (typeDef -> RSTRING .)
    MULTIPLICACION  reduce using rule 207 (typeDef -> RSTRING .)
    DIVISION        reduce using rule 207 (typeDef -> RSTRING .)
    POTENCIA        reduce using rule 207 (typeDef -> RSTRING .)
    MODULO          reduce using rule 207 (typeDef -> RSTRING .)
    IGUALIGUAL      reduce using rule 207 (typeDef -> RSTRING .)
    DISTINTO        reduce using rule 207 (typeDef -> RSTRING .)
    MAYOR           reduce using rule 207 (typeDef -> RSTRING .)
    MENOR           reduce using rule 207 (typeDef -> RSTRING .)
    MAYORIGUAL      reduce using rule 207 (typeDef -> RSTRING .)
    MENORIGUAL      reduce using rule 207 (typeDef -> RSTRING .)
    ANDD            reduce using rule 207 (typeDef -> RSTRING .)
    ORR             reduce using rule 207 (typeDef -> RSTRING .)
    DOSPT           reduce using rule 207 (typeDef -> RSTRING .)
    CORDER          reduce using rule 207 (typeDef -> RSTRING .)
    RELSE           reduce using rule 207 (typeDef -> RSTRING .)
    RELSEIF         reduce using rule 207 (typeDef -> RSTRING .)


state 221

    (208) typeDef -> RCHAR .

    COMA            reduce using rule 208 (typeDef -> RCHAR .)
    RIN             reduce using rule 208 (typeDef -> RCHAR .)
    PTCOMA          reduce using rule 208 (typeDef -> RCHAR .)
    END             reduce using rule 208 (typeDef -> RCHAR .)
    PRINT           reduce using rule 208 (typeDef -> RCHAR .)
    PRINTLN         reduce using rule 208 (typeDef -> RCHAR .)
    ID              reduce using rule 208 (typeDef -> RCHAR .)
    GLOBAL          reduce using rule 208 (typeDef -> RCHAR .)
    LOCAL           reduce using rule 208 (typeDef -> RCHAR .)
    RIF             reduce using rule 208 (typeDef -> RCHAR .)
    RWHILE          reduce using rule 208 (typeDef -> RCHAR .)
    RFOR            reduce using rule 208 (typeDef -> RCHAR .)
    RRETURN         reduce using rule 208 (typeDef -> RCHAR .)
    RBREAK          reduce using rule 208 (typeDef -> RCHAR .)
    RCONTINUE       reduce using rule 208 (typeDef -> RCHAR .)
    PARDER          reduce using rule 208 (typeDef -> RCHAR .)
    MAS             reduce using rule 208 (typeDef -> RCHAR .)
    MENOS           reduce using rule 208 (typeDef -> RCHAR .)
    MULTIPLICACION  reduce using rule 208 (typeDef -> RCHAR .)
    DIVISION        reduce using rule 208 (typeDef -> RCHAR .)
    POTENCIA        reduce using rule 208 (typeDef -> RCHAR .)
    MODULO          reduce using rule 208 (typeDef -> RCHAR .)
    IGUALIGUAL      reduce using rule 208 (typeDef -> RCHAR .)
    DISTINTO        reduce using rule 208 (typeDef -> RCHAR .)
    MAYOR           reduce using rule 208 (typeDef -> RCHAR .)
    MENOR           reduce using rule 208 (typeDef -> RCHAR .)
    MAYORIGUAL      reduce using rule 208 (typeDef -> RCHAR .)
    MENORIGUAL      reduce using rule 208 (typeDef -> RCHAR .)
    ANDD            reduce using rule 208 (typeDef -> RCHAR .)
    ORR             reduce using rule 208 (typeDef -> RCHAR .)
    DOSPT           reduce using rule 208 (typeDef -> RCHAR .)
    CORDER          reduce using rule 208 (typeDef -> RCHAR .)
    RELSE           reduce using rule 208 (typeDef -> RCHAR .)
    RELSEIF         reduce using rule 208 (typeDef -> RCHAR .)


state 222

    (209) typeDef -> RBOOL .

    COMA            reduce using rule 209 (typeDef -> RBOOL .)
    RIN             reduce using rule 209 (typeDef -> RBOOL .)
    PTCOMA          reduce using rule 209 (typeDef -> RBOOL .)
    END             reduce using rule 209 (typeDef -> RBOOL .)
    PRINT           reduce using rule 209 (typeDef -> RBOOL .)
    PRINTLN         reduce using rule 209 (typeDef -> RBOOL .)
    ID              reduce using rule 209 (typeDef -> RBOOL .)
    GLOBAL          reduce using rule 209 (typeDef -> RBOOL .)
    LOCAL           reduce using rule 209 (typeDef -> RBOOL .)
    RIF             reduce using rule 209 (typeDef -> RBOOL .)
    RWHILE          reduce using rule 209 (typeDef -> RBOOL .)
    RFOR            reduce using rule 209 (typeDef -> RBOOL .)
    RRETURN         reduce using rule 209 (typeDef -> RBOOL .)
    RBREAK          reduce using rule 209 (typeDef -> RBOOL .)
    RCONTINUE       reduce using rule 209 (typeDef -> RBOOL .)
    PARDER          reduce using rule 209 (typeDef -> RBOOL .)
    MAS             reduce using rule 209 (typeDef -> RBOOL .)
    MENOS           reduce using rule 209 (typeDef -> RBOOL .)
    MULTIPLICACION  reduce using rule 209 (typeDef -> RBOOL .)
    DIVISION        reduce using rule 209 (typeDef -> RBOOL .)
    POTENCIA        reduce using rule 209 (typeDef -> RBOOL .)
    MODULO          reduce using rule 209 (typeDef -> RBOOL .)
    IGUALIGUAL      reduce using rule 209 (typeDef -> RBOOL .)
    DISTINTO        reduce using rule 209 (typeDef -> RBOOL .)
    MAYOR           reduce using rule 209 (typeDef -> RBOOL .)
    MENOR           reduce using rule 209 (typeDef -> RBOOL .)
    MAYORIGUAL      reduce using rule 209 (typeDef -> RBOOL .)
    MENORIGUAL      reduce using rule 209 (typeDef -> RBOOL .)
    ANDD            reduce using rule 209 (typeDef -> RBOOL .)
    ORR             reduce using rule 209 (typeDef -> RBOOL .)
    DOSPT           reduce using rule 209 (typeDef -> RBOOL .)
    CORDER          reduce using rule 209 (typeDef -> RBOOL .)
    RELSE           reduce using rule 209 (typeDef -> RBOOL .)
    RELSEIF         reduce using rule 209 (typeDef -> RBOOL .)


state 223

    (210) typeDef -> RARRAY . LLAIZQ RINT LLADER
    (211) typeDef -> RARRAY . LLAIZQ RFLOAT LLADER
    (212) typeDef -> RARRAY . LLAIZQ RSTRING LLADER
    (213) typeDef -> RARRAY . LLAIZQ RCHAR LLADER
    (214) typeDef -> RARRAY . LLAIZQ RBOOL LLADER

    LLAIZQ          shift and go to state 287


state 224

    (201) exp -> TRUNC PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 288


state 225

    (202) exp -> TRUNC PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 289
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 226

    (203) exp -> MFLOAT PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 290
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 227

    (204) exp -> MSTRING PARIZQ exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 291
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 228

    (225) exp -> CORIZQ listValues CORDER .
    (226) exp -> CORIZQ listValues CORDER . DOSPT DOSPT typeDef

  ! shift/reduce conflict for DOSPT resolved as shift
    END             reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    PRINT           reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    PRINTLN         reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    ID              reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    GLOBAL          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    LOCAL           reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RIF             reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RWHILE          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RFOR            reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RRETURN         reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RBREAK          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RCONTINUE       reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    PARDER          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RELSE           reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    RELSEIF         reduce using rule 225 (exp -> CORIZQ listValues CORDER .)
    DOSPT           shift and go to state 292

  ! DOSPT           [ reduce using rule 225 (exp -> CORIZQ listValues CORDER .) ]


state 229

    (169) blockc -> instructionsc END . PTCOMA

    PTCOMA          shift and go to state 293


state 230

    (6) instructionsc -> instructionsc instructionc .

    END             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINT           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINTLN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    ID              reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    LOCAL           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    GLOBAL          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RIF             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RWHILE          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RFOR            reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RRETURN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RBREAK          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RCONTINUE       reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSE           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSEIF         reduce using rule 6 (instructionsc -> instructionsc instructionc .)


state 231

    (170) blockc -> END PTCOMA .

    PRINT           reduce using rule 170 (blockc -> END PTCOMA .)
    PRINTLN         reduce using rule 170 (blockc -> END PTCOMA .)
    ID              reduce using rule 170 (blockc -> END PTCOMA .)
    GLOBAL          reduce using rule 170 (blockc -> END PTCOMA .)
    LOCAL           reduce using rule 170 (blockc -> END PTCOMA .)
    FUNCTION        reduce using rule 170 (blockc -> END PTCOMA .)
    RIF             reduce using rule 170 (blockc -> END PTCOMA .)
    RWHILE          reduce using rule 170 (blockc -> END PTCOMA .)
    RFOR            reduce using rule 170 (blockc -> END PTCOMA .)
    RRETURN         reduce using rule 170 (blockc -> END PTCOMA .)
    RBREAK          reduce using rule 170 (blockc -> END PTCOMA .)
    RCONTINUE       reduce using rule 170 (blockc -> END PTCOMA .)
    $end            reduce using rule 170 (blockc -> END PTCOMA .)
    END             reduce using rule 170 (blockc -> END PTCOMA .)
    RELSE           reduce using rule 170 (blockc -> END PTCOMA .)
    RELSEIF         reduce using rule 170 (blockc -> END PTCOMA .)


state 232

    (76) declarationc -> ID IGUAL . exp PTCOMA
    (77) declarationc -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (85) declarationc -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 295
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 294

state 233

    (114) assignmentAc -> ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (120) assignmentAc -> ID listArray2 . IGUAL exp PTCOMA
    (121) assignmentAc -> ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 296
    CORIZQ          shift and go to state 75


state 234

    (78) declarationc -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> LOCAL ID . IGUAL exp PTCOMA
    (80) declarationc -> LOCAL ID . PTCOMA
    (88) declarationc -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> LOCAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID . listArray2 IGUAL exp PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 297
    PTCOMA          shift and go to state 298
    CORIZQ          shift and go to state 32

    listArray2                     shift and go to state 299

state 235

    (81) declarationc -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID . IGUAL exp PTCOMA
    (83) declarationc -> GLOBAL ID . PTCOMA
    (86) declarationc -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (116) assignmentAc -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (122) assignmentAc -> GLOBAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID . listArray2 IGUAL exp PTCOMA
    (179) listArray2 -> . listArray2 CORIZQ exp CORDER
    (180) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 300
    PTCOMA          shift and go to state 301
    CORIZQ          shift and go to state 32

    listArray2                     shift and go to state 302

state 236

    (151) ifStc -> RIF exp . END PTCOMA
    (152) ifStc -> RIF exp . blockifc END PTCOMA
    (153) ifStc -> RIF exp . blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> RIF exp . blockifc RELSE END PTCOMA
    (155) ifStc -> RIF exp . blockifc elseifStc END PTCOMA
    (156) ifStc -> RIF exp . blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> RIF exp . blockifc elseifStc RELSE END PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (172) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 303
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockifc                       shift and go to state 304
    instructionsc                  shift and go to state 305
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 237

    (163) forSt -> RFOR parameterFor RIN exp . DOSPT exp blockc
    (164) forSt -> RFOR parameterFor RIN exp . blockc
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (169) blockc -> . instructionsc END PTCOMA
    (170) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    DOSPT           shift and go to state 306
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    END             shift and go to state 137
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockc                         shift and go to state 307
    instructionsc                  shift and go to state 136
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 238

    (165) parameterFor -> ID DOSPT DOSPT . typeDef
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 308

state 239

    (42) p_print -> PRINT PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RRETURN         reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RBREAK          reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RCONTINUE       reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 42 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)


state 240

    (46) exps -> exps COMA exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          reduce using rule 46 (exps -> exps COMA exp .)
    COMA            reduce using rule 46 (exps -> exps COMA exp .)
    CORDER          reduce using rule 46 (exps -> exps COMA exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 241

    (44) p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RRETURN         reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RBREAK          reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RCONTINUE       reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 44 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)


state 242

    (49) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 309

state 243

    (56) declaration -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (57) declaration -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 310
    DOSPT           shift and go to state 311


state 244

    (90) assignmentA -> ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (91) assignmentA -> ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 312
    COMA            shift and go to state 158


state 245

    (96) assignmentA -> ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    $end            reduce using rule 96 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)


state 246

    (97) assignmentA -> ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 313


state 247

    (179) listArray2 -> listArray2 CORIZQ exp CORDER .

    IGUAL           reduce using rule 179 (listArray2 -> listArray2 CORIZQ exp CORDER .)
    CORIZQ          reduce using rule 179 (listArray2 -> listArray2 CORIZQ exp CORDER .)


state 248

    (138) listValues -> listValues COMA exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          reduce using rule 138 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 138 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 138 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 249

    (50) declaration -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 314


state 250

    (51) declaration -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 51 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)


state 251

    (58) declaration -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 315
    COMA            shift and go to state 158


state 252

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 316
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 253

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 317
    PTCOMA          shift and go to state 318
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 254

    (53) declaration -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 319


state 255

    (54) declaration -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 54 (declaration -> LOCAL ID IGUAL exp PTCOMA .)


state 256

    (60) declaration -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 320
    COMA            shift and go to state 158


state 257

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 321
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 258

    (100) assignmentA -> LOCAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 322
    PTCOMA          shift and go to state 323
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 259

    (126) function -> FUNCTION ID parametersFunc DOSPT DOSPT . typeDef blockf
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 324

state 260

    (167) blockf -> instructionsf END . PTCOMA

    PTCOMA          shift and go to state 325


state 261

    (168) blockf -> END PTCOMA .

    PRINT           reduce using rule 168 (blockf -> END PTCOMA .)
    PRINTLN         reduce using rule 168 (blockf -> END PTCOMA .)
    ID              reduce using rule 168 (blockf -> END PTCOMA .)
    GLOBAL          reduce using rule 168 (blockf -> END PTCOMA .)
    LOCAL           reduce using rule 168 (blockf -> END PTCOMA .)
    FUNCTION        reduce using rule 168 (blockf -> END PTCOMA .)
    RIF             reduce using rule 168 (blockf -> END PTCOMA .)
    RWHILE          reduce using rule 168 (blockf -> END PTCOMA .)
    RFOR            reduce using rule 168 (blockf -> END PTCOMA .)
    RRETURN         reduce using rule 168 (blockf -> END PTCOMA .)
    RBREAK          reduce using rule 168 (blockf -> END PTCOMA .)
    RCONTINUE       reduce using rule 168 (blockf -> END PTCOMA .)
    $end            reduce using rule 168 (blockf -> END PTCOMA .)


state 262

    (128) parametersFunc -> PARIZQ parameters PARDER .

    DOSPT           reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    END             reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    GLOBAL          reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    LOCAL           reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    RFOR            reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    RRETURN         reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    RBREAK          reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)
    RCONTINUE       reduce using rule 128 (parametersFunc -> PARIZQ parameters PARDER .)


state 263

    (130) parameters -> parameters COMA . parameter
    (132) parameter -> . ID DOSPT DOSPT typeDef
    (133) parameter -> . ID

    ID              shift and go to state 185

    parameter                      shift and go to state 326

state 264

    (132) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 327


state 265

    (141) ifSt -> RIF exp blockiff END PTCOMA .

    PRINT           reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    PRINTLN         reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    ID              reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    GLOBAL          reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    LOCAL           reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    FUNCTION        reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RIF             reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RWHILE          reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RFOR            reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RRETURN         reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RBREAK          reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    $end            reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    END             reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSE           reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSEIF         reduce using rule 141 (ifSt -> RIF exp blockiff END PTCOMA .)


state 266

    (142) ifSt -> RIF exp blockiff RELSE blockiff . END PTCOMA

    END             shift and go to state 328


state 267

    (143) ifSt -> RIF exp blockiff RELSE END . PTCOMA

    PTCOMA          shift and go to state 329


state 268

    (144) ifSt -> RIF exp blockiff elseifSt END . PTCOMA

    PTCOMA          shift and go to state 330


state 269

    (145) ifSt -> RIF exp blockiff elseifSt RELSE . blockiff END PTCOMA
    (146) ifSt -> RIF exp blockiff elseifSt RELSE . END PTCOMA
    (171) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 332
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockiff                       shift and go to state 331
    instructionsf                  shift and go to state 104
    instructionf                   shift and go to state 105
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 270

    (147) elseifSt -> elseifSt conelseif .

    END             reduce using rule 147 (elseifSt -> elseifSt conelseif .)
    RELSE           reduce using rule 147 (elseifSt -> elseifSt conelseif .)
    RELSEIF         reduce using rule 147 (elseifSt -> elseifSt conelseif .)


state 271

    (149) conelseif -> RELSEIF exp . blockiff
    (150) conelseif -> RELSEIF exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (171) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 150 (conelseif -> RELSEIF exp .)
    RELSE           reduce using rule 150 (conelseif -> RELSEIF exp .)
    RELSEIF         reduce using rule 150 (conelseif -> RELSEIF exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockiff                       shift and go to state 333
    instructionsf                  shift and go to state 104
    instructionf                   shift and go to state 105
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 272

    (62) declarationf -> ID IGUAL exp . PTCOMA
    (63) declarationf -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 334
    DOSPT           shift and go to state 335
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 273

    (70) declarationf -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (71) declarationf -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 336
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 274

    (102) assignmentAf -> ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (108) assignmentAf -> ID listArray2 IGUAL . exp PTCOMA
    (109) assignmentAf -> ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 337
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 338

state 275

    (64) declarationf -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> GLOBAL ID IGUAL . exp PTCOMA
    (72) declarationf -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 340
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 339

state 276

    (66) declarationf -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    END             reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 66 (declarationf -> GLOBAL ID PTCOMA .)


state 277

    (104) assignmentAf -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (110) assignmentAf -> GLOBAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 . IGUAL exp PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 341
    CORIZQ          shift and go to state 75


state 278

    (67) declarationf -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> LOCAL ID IGUAL . exp PTCOMA
    (74) declarationf -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 343
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 342

state 279

    (69) declarationf -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    ID              reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    END             reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 69 (declarationf -> LOCAL ID PTCOMA .)


state 280

    (106) assignmentAf -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> LOCAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 . IGUAL exp PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 344
    CORIZQ          shift and go to state 75


state 281

    (177) listArray -> listArray CORIZQ exp . CORDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    CORDER          shift and go to state 345
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 282

    (178) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    END             reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    PRINT           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    ID              reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    LOCAL           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RIF             reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RWHILE          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RFOR            reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RRETURN         reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RBREAK          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RCONTINUE       reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RELSE           reduce using rule 178 (listArray -> CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 178 (listArray -> CORIZQ exp CORDER .)


state 283

    (197) exp -> UPPERCASE PARIZQ exp PARDER .

    END             reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RRETURN         reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RBREAK          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 197 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 284

    (198) exp -> LOWERCASE PARIZQ exp PARDER .

    END             reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RRETURN         reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RBREAK          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 198 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 285

    (199) exp -> RLENGTH PARIZQ exp PARDER .

    END             reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MAS             reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MENOS           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    DIVISION        reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MODULO          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MAYOR           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MENOR           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    ANDD            reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    ORR             reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    PRINT           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    ID              reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    LOCAL           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RIF             reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RWHILE          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RFOR            reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RRETURN         reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RBREAK          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    PARDER          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    COMA            reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    DOSPT           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    CORDER          reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RELSE           reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 199 (exp -> RLENGTH PARIZQ exp PARDER .)


state 286

    (200) exp -> PARSE PARIZQ typeDef COMA . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 346

state 287

    (210) typeDef -> RARRAY LLAIZQ . RINT LLADER
    (211) typeDef -> RARRAY LLAIZQ . RFLOAT LLADER
    (212) typeDef -> RARRAY LLAIZQ . RSTRING LLADER
    (213) typeDef -> RARRAY LLAIZQ . RCHAR LLADER
    (214) typeDef -> RARRAY LLAIZQ . RBOOL LLADER

    RINT            shift and go to state 347
    RFLOAT          shift and go to state 348
    RSTRING         shift and go to state 349
    RCHAR           shift and go to state 350
    RBOOL           shift and go to state 351


state 288

    (201) exp -> TRUNC PARIZQ typeDef COMA . exp PARDER
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 352

state 289

    (202) exp -> TRUNC PARIZQ exp PARDER .

    END             reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MAS             reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MENOS           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    DIVISION        reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MODULO          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MAYOR           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MENOR           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    ANDD            reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    ORR             reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    PRINT           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    ID              reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    LOCAL           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RIF             reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RWHILE          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RFOR            reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RRETURN         reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RBREAK          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    PARDER          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    COMA            reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    DOSPT           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    CORDER          reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RELSE           reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 202 (exp -> TRUNC PARIZQ exp PARDER .)


state 290

    (203) exp -> MFLOAT PARIZQ exp PARDER .

    END             reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAS             reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOS           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MODULO          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOR           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    ANDD            reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    ORR             reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINT           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    ID              reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RIF             reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RFOR            reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RRETURN         reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RBREAK          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    PARDER          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    COMA            reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    CORDER          reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSE           reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 203 (exp -> MFLOAT PARIZQ exp PARDER .)


state 291

    (204) exp -> MSTRING PARIZQ exp PARDER .

    END             reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MAS             reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOS           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    DIVISION        reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MODULO          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYOR           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOR           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    ANDD            reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    ORR             reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINT           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    ID              reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    LOCAL           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RIF             reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RWHILE          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RFOR            reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RRETURN         reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RBREAK          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    PARDER          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    COMA            reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    DOSPT           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    CORDER          reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSE           reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 204 (exp -> MSTRING PARIZQ exp PARDER .)


state 292

    (226) exp -> CORIZQ listValues CORDER DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 353


state 293

    (169) blockc -> instructionsc END PTCOMA .

    PRINT           reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    PRINTLN         reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    ID              reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    GLOBAL          reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    LOCAL           reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    FUNCTION        reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RIF             reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RWHILE          reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RFOR            reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RRETURN         reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RBREAK          reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RCONTINUE       reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    $end            reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    END             reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RELSE           reduce using rule 169 (blockc -> instructionsc END PTCOMA .)
    RELSEIF         reduce using rule 169 (blockc -> instructionsc END PTCOMA .)


state 294

    (76) declarationc -> ID IGUAL exp . PTCOMA
    (77) declarationc -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 354
    DOSPT           shift and go to state 355
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 295

    (84) declarationc -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (85) declarationc -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 356
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 296

    (114) assignmentAc -> ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (120) assignmentAc -> ID listArray2 IGUAL . exp PTCOMA
    (121) assignmentAc -> ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 357
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 358

state 297

    (78) declarationc -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> LOCAL ID IGUAL . exp PTCOMA
    (88) declarationc -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 360
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 359

state 298

    (80) declarationc -> LOCAL ID PTCOMA .

    END             reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    PRINT           reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    ID              reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 80 (declarationc -> LOCAL ID PTCOMA .)


state 299

    (118) assignmentAc -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> LOCAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 . IGUAL exp PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 361
    CORIZQ          shift and go to state 75


state 300

    (81) declarationc -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID IGUAL . exp PTCOMA
    (86) declarationc -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 363
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 362

state 301

    (83) declarationc -> GLOBAL ID PTCOMA .

    END             reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    PRINT           reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 83 (declarationc -> GLOBAL ID PTCOMA .)


state 302

    (116) assignmentAc -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (122) assignmentAc -> GLOBAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 . IGUAL exp PTCOMA
    (179) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 364
    CORIZQ          shift and go to state 75


state 303

    (151) ifStc -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 365


state 304

    (152) ifStc -> RIF exp blockifc . END PTCOMA
    (153) ifStc -> RIF exp blockifc . RELSE blockifc END PTCOMA
    (154) ifStc -> RIF exp blockifc . RELSE END PTCOMA
    (155) ifStc -> RIF exp blockifc . elseifStc END PTCOMA
    (156) ifStc -> RIF exp blockifc . elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> RIF exp blockifc . elseifStc RELSE END PTCOMA
    (158) elseifStc -> . elseifStc conelseifc
    (159) elseifStc -> . conelseifc
    (160) conelseifc -> . RELSEIF exp blockifc
    (161) conelseifc -> . RELSEIF exp

    END             shift and go to state 366
    RELSE           shift and go to state 367
    RELSEIF         shift and go to state 370

    elseifStc                      shift and go to state 368
    conelseifc                     shift and go to state 369

state 305

    (172) blockifc -> instructionsc .
    (6) instructionsc -> instructionsc . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 172 (blockifc -> instructionsc .)
    RELSE           reduce using rule 172 (blockifc -> instructionsc .)
    RELSEIF         reduce using rule 172 (blockifc -> instructionsc .)
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    instructionc                   shift and go to state 230
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 306

    (163) forSt -> RFOR parameterFor RIN exp DOSPT . exp blockc
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 371

state 307

    (164) forSt -> RFOR parameterFor RIN exp blockc .

    PRINT           reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    PRINTLN         reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    ID              reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    GLOBAL          reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    LOCAL           reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    FUNCTION        reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RIF             reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RWHILE          reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RFOR            reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RRETURN         reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RBREAK          reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RCONTINUE       reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    $end            reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    END             reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RELSE           reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)
    RELSEIF         reduce using rule 164 (forSt -> RFOR parameterFor RIN exp blockc .)


state 308

    (165) parameterFor -> ID DOSPT DOSPT typeDef .

    RIN             reduce using rule 165 (parameterFor -> ID DOSPT DOSPT typeDef .)


state 309

    (49) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 372


state 310

    (56) declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 56 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 311

    (57) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 373


state 312

    (90) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA
    (91) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 374
    DOSPT           shift and go to state 375


state 313

    (97) assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 376

state 314

    (50) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 377

state 315

    (58) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (59) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 378
    PTCOMA          shift and go to state 379


state 316

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 380
    COMA            shift and go to state 158


state 317

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 381


state 318

    (99) assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    $end            reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)


state 319

    (53) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 382

state 320

    (60) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (61) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 383
    PTCOMA          shift and go to state 384


state 321

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 385
    COMA            shift and go to state 158


state 322

    (100) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 386


state 323

    (101) assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    $end            reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)


state 324

    (126) function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef . blockf
    (167) blockf -> . instructionsf END PTCOMA
    (168) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (20) instructionf -> . p_print
    (21) instructionf -> . p_println
    (22) instructionf -> . declarationf
    (23) instructionf -> . assignmentAf
    (24) instructionf -> . callFuncSt
    (25) instructionf -> . ifSt
    (26) instructionf -> . whileSt
    (27) instructionf -> . forSt
    (28) instructionf -> . returnST
    (29) instructionf -> . breakST
    (30) instructionf -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (62) declarationf -> . ID IGUAL exp PTCOMA
    (63) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (64) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (66) declarationf -> . GLOBAL ID PTCOMA
    (67) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (69) declarationf -> . LOCAL ID PTCOMA
    (70) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (71) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (72) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (103) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (104) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (140) ifSt -> . RIF exp END PTCOMA
    (141) ifSt -> . RIF exp blockiff END PTCOMA
    (142) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (143) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (144) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (145) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (146) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 181
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 117
    GLOBAL          shift and go to state 118
    LOCAL           shift and go to state 119
    RIF             shift and go to state 22
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockf                         shift and go to state 387
    instructionsf                  shift and go to state 180
    instructionf                   shift and go to state 105
    p_print                        shift and go to state 106
    p_println                      shift and go to state 107
    declarationf                   shift and go to state 108
    assignmentAf                   shift and go to state 109
    callFuncSt                     shift and go to state 110
    ifSt                           shift and go to state 111
    whileSt                        shift and go to state 112
    forSt                          shift and go to state 113
    returnST                       shift and go to state 114
    breakST                        shift and go to state 115
    continueST                     shift and go to state 116

state 325

    (167) blockf -> instructionsf END PTCOMA .

    PRINT           reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    PRINTLN         reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    ID              reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    GLOBAL          reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    LOCAL           reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    FUNCTION        reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    RIF             reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    RWHILE          reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    RFOR            reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    RRETURN         reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    RBREAK          reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    RCONTINUE       reduce using rule 167 (blockf -> instructionsf END PTCOMA .)
    $end            reduce using rule 167 (blockf -> instructionsf END PTCOMA .)


state 326

    (130) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 130 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 130 (parameters -> parameters COMA parameter .)


state 327

    (132) parameter -> ID DOSPT DOSPT . typeDef
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 388

state 328

    (142) ifSt -> RIF exp blockiff RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 389


state 329

    (143) ifSt -> RIF exp blockiff RELSE END PTCOMA .

    PRINT           reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    PRINTLN         reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    ID              reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    GLOBAL          reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    LOCAL           reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    FUNCTION        reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RIF             reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RWHILE          reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RFOR            reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RRETURN         reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RBREAK          reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    $end            reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    END             reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSE           reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSEIF         reduce using rule 143 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)


state 330

    (144) ifSt -> RIF exp blockiff elseifSt END PTCOMA .

    PRINT           reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    PRINTLN         reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    ID              reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    GLOBAL          reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    LOCAL           reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    FUNCTION        reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RIF             reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RWHILE          reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RFOR            reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RRETURN         reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RBREAK          reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RCONTINUE       reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    $end            reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    END             reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSE           reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSEIF         reduce using rule 144 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)


state 331

    (145) ifSt -> RIF exp blockiff elseifSt RELSE blockiff . END PTCOMA

    END             shift and go to state 390


state 332

    (146) ifSt -> RIF exp blockiff elseifSt RELSE END . PTCOMA

    PTCOMA          shift and go to state 391


state 333

    (149) conelseif -> RELSEIF exp blockiff .

    END             reduce using rule 149 (conelseif -> RELSEIF exp blockiff .)
    RELSE           reduce using rule 149 (conelseif -> RELSEIF exp blockiff .)
    RELSEIF         reduce using rule 149 (conelseif -> RELSEIF exp blockiff .)


state 334

    (62) declarationf -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 62 (declarationf -> ID IGUAL exp PTCOMA .)


state 335

    (63) declarationf -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 392


state 336

    (70) declarationf -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (71) declarationf -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 393
    COMA            shift and go to state 158


state 337

    (102) assignmentAf -> ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 394
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 338

    (108) assignmentAf -> ID listArray2 IGUAL exp . PTCOMA
    (109) assignmentAf -> ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 395
    DOSPT           shift and go to state 396
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 339

    (64) declarationf -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> GLOBAL ID IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 397
    PTCOMA          shift and go to state 398
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 340

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 399
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 341

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL . exp PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 400
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 401

state 342

    (67) declarationf -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> LOCAL ID IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 402
    PTCOMA          shift and go to state 403
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 343

    (74) declarationf -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 404
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 344

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> LOCAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 IGUAL . exp PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 405
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 406

state 345

    (177) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    END             reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    PRINT           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    ID              reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    LOCAL           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RIF             reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RWHILE          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RFOR            reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RRETURN         reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RBREAK          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RCONTINUE       reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RELSE           reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 177 (listArray -> listArray CORIZQ exp CORDER .)


state 346

    (200) exp -> PARSE PARIZQ typeDef COMA exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 407
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 347

    (210) typeDef -> RARRAY LLAIZQ RINT . LLADER

    LLADER          shift and go to state 408


state 348

    (211) typeDef -> RARRAY LLAIZQ RFLOAT . LLADER

    LLADER          shift and go to state 409


state 349

    (212) typeDef -> RARRAY LLAIZQ RSTRING . LLADER

    LLADER          shift and go to state 410


state 350

    (213) typeDef -> RARRAY LLAIZQ RCHAR . LLADER

    LLADER          shift and go to state 411


state 351

    (214) typeDef -> RARRAY LLAIZQ RBOOL . LLADER

    LLADER          shift and go to state 412


state 352

    (201) exp -> TRUNC PARIZQ typeDef COMA exp . PARDER
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PARDER          shift and go to state 413
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 353

    (226) exp -> CORIZQ listValues CORDER DOSPT DOSPT . typeDef
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 414

state 354

    (76) declarationc -> ID IGUAL exp PTCOMA .

    END             reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 76 (declarationc -> ID IGUAL exp PTCOMA .)


state 355

    (77) declarationc -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 415


state 356

    (84) declarationc -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (85) declarationc -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 416
    COMA            shift and go to state 158


state 357

    (114) assignmentAc -> ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 417
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 358

    (120) assignmentAc -> ID listArray2 IGUAL exp . PTCOMA
    (121) assignmentAc -> ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    PTCOMA          shift and go to state 418
    DOSPT           shift and go to state 419
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 359

    (78) declarationc -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> LOCAL ID IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 420
    PTCOMA          shift and go to state 421
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 360

    (88) declarationc -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 422
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 361

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> LOCAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 IGUAL . exp PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 423
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 424

state 362

    (81) declarationc -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 425
    PTCOMA          shift and go to state 426
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 363

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 427
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 364

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL . exp PTCOMA
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 428
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57

    exp                            shift and go to state 429

state 365

    (151) ifStc -> RIF exp END PTCOMA .

    END             reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    PRINT           reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    ID              reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RIF             reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RRETURN         reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RBREAK          reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RCONTINUE       reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 151 (ifStc -> RIF exp END PTCOMA .)


state 366

    (152) ifStc -> RIF exp blockifc END . PTCOMA

    PTCOMA          shift and go to state 430


state 367

    (153) ifStc -> RIF exp blockifc RELSE . blockifc END PTCOMA
    (154) ifStc -> RIF exp blockifc RELSE . END PTCOMA
    (172) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 432
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockifc                       shift and go to state 431
    instructionsc                  shift and go to state 305
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 368

    (155) ifStc -> RIF exp blockifc elseifStc . END PTCOMA
    (156) ifStc -> RIF exp blockifc elseifStc . RELSE blockifc END PTCOMA
    (157) ifStc -> RIF exp blockifc elseifStc . RELSE END PTCOMA
    (158) elseifStc -> elseifStc . conelseifc
    (160) conelseifc -> . RELSEIF exp blockifc
    (161) conelseifc -> . RELSEIF exp

    END             shift and go to state 433
    RELSE           shift and go to state 434
    RELSEIF         shift and go to state 370

    conelseifc                     shift and go to state 435

state 369

    (159) elseifStc -> conelseifc .

    END             reduce using rule 159 (elseifStc -> conelseifc .)
    RELSE           reduce using rule 159 (elseifStc -> conelseifc .)
    RELSEIF         reduce using rule 159 (elseifStc -> conelseifc .)


state 370

    (160) conelseifc -> RELSEIF . exp blockifc
    (161) conelseifc -> RELSEIF . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exp                            shift and go to state 436

state 371

    (163) forSt -> RFOR parameterFor RIN exp DOSPT exp . blockc
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (169) blockc -> . instructionsc END PTCOMA
    (170) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    END             shift and go to state 137
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockc                         shift and go to state 437
    instructionsc                  shift and go to state 136
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 372

    (49) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 49 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 373

    (57) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 438

state 374

    (90) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 90 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 375

    (91) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 439


state 376

    (97) assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 440


state 377

    (50) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 441


state 378

    (58) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 442


state 379

    (59) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 59 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 380

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (93) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 443
    PTCOMA          shift and go to state 444


state 381

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 445

state 382

    (53) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 446


state 383

    (60) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 447


state 384

    (61) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 61 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 385

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (95) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 448
    PTCOMA          shift and go to state 449


state 386

    (100) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 450

state 387

    (126) function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .

    PRINT           reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    PRINTLN         reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    ID              reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    GLOBAL          reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    LOCAL           reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    FUNCTION        reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RIF             reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RWHILE          reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RFOR            reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RRETURN         reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RBREAK          reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RCONTINUE       reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    $end            reduce using rule 126 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)


state 388

    (132) parameter -> ID DOSPT DOSPT typeDef .

    PARDER          reduce using rule 132 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 132 (parameter -> ID DOSPT DOSPT typeDef .)


state 389

    (142) ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    ID              reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RRETURN         reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RBREAK          reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    $end            reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    END             reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 142 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)


state 390

    (145) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 451


state 391

    (146) ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .

    PRINT           reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    PRINTLN         reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    ID              reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    GLOBAL          reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    LOCAL           reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    FUNCTION        reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RIF             reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RWHILE          reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RFOR            reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RRETURN         reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RBREAK          reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    $end            reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    END             reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSE           reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSEIF         reduce using rule 146 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)


state 392

    (63) declarationf -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 452

state 393

    (70) declarationf -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (71) declarationf -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 453
    DOSPT           shift and go to state 454


state 394

    (102) assignmentAf -> ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 455
    COMA            shift and go to state 158


state 395

    (108) assignmentAf -> ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    END             reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)


state 396

    (109) assignmentAf -> ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 456


state 397

    (64) declarationf -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 457


state 398

    (65) declarationf -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 65 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)


state 399

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 458
    COMA            shift and go to state 158


state 400

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 459
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 401

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 460
    PTCOMA          shift and go to state 461
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 402

    (67) declarationf -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 462


state 403

    (68) declarationf -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 68 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)


state 404

    (74) declarationf -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 463
    COMA            shift and go to state 158


state 405

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 464
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 406

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 465
    PTCOMA          shift and go to state 466
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 407

    (200) exp -> PARSE PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RRETURN         reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RBREAK          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RCONTINUE       reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 200 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)


state 408

    (210) typeDef -> RARRAY LLAIZQ RINT LLADER .

    COMA            reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RIN             reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PTCOMA          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    END             reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PRINT           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PRINTLN         reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ID              reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    GLOBAL          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    LOCAL           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RIF             reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RWHILE          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RFOR            reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RRETURN         reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RBREAK          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RCONTINUE       reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PARDER          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAS             reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENOS           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MULTIPLICACION  reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DIVISION        reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    POTENCIA        reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MODULO          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    IGUALIGUAL      reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DISTINTO        reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAYOR           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENOR           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAYORIGUAL      reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENORIGUAL      reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ANDD            reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ORR             reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DOSPT           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    CORDER          reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RELSE           reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RELSEIF         reduce using rule 210 (typeDef -> RARRAY LLAIZQ RINT LLADER .)


state 409

    (211) typeDef -> RARRAY LLAIZQ RFLOAT LLADER .

    COMA            reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RIN             reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PTCOMA          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    END             reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PRINT           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PRINTLN         reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ID              reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    GLOBAL          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    LOCAL           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RIF             reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RWHILE          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RFOR            reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RRETURN         reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RBREAK          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RCONTINUE       reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PARDER          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAS             reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENOS           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MULTIPLICACION  reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DIVISION        reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    POTENCIA        reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MODULO          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    IGUALIGUAL      reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DISTINTO        reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAYOR           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENOR           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAYORIGUAL      reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENORIGUAL      reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ANDD            reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ORR             reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DOSPT           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    CORDER          reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RELSE           reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RELSEIF         reduce using rule 211 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)


state 410

    (212) typeDef -> RARRAY LLAIZQ RSTRING LLADER .

    COMA            reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RIN             reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PTCOMA          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    END             reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PRINT           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PRINTLN         reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ID              reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    GLOBAL          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    LOCAL           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RIF             reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RWHILE          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RFOR            reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RRETURN         reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RBREAK          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RCONTINUE       reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PARDER          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAS             reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENOS           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MULTIPLICACION  reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DIVISION        reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    POTENCIA        reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MODULO          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    IGUALIGUAL      reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DISTINTO        reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAYOR           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENOR           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAYORIGUAL      reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENORIGUAL      reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ANDD            reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ORR             reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DOSPT           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    CORDER          reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RELSE           reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RELSEIF         reduce using rule 212 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)


state 411

    (213) typeDef -> RARRAY LLAIZQ RCHAR LLADER .

    COMA            reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RIN             reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PTCOMA          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    END             reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PRINT           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PRINTLN         reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ID              reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    GLOBAL          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    LOCAL           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RIF             reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RWHILE          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RFOR            reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RRETURN         reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RBREAK          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RCONTINUE       reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PARDER          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAS             reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENOS           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MULTIPLICACION  reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DIVISION        reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    POTENCIA        reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MODULO          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    IGUALIGUAL      reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DISTINTO        reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAYOR           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENOR           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAYORIGUAL      reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENORIGUAL      reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ANDD            reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ORR             reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DOSPT           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    CORDER          reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RELSE           reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RELSEIF         reduce using rule 213 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)


state 412

    (214) typeDef -> RARRAY LLAIZQ RBOOL LLADER .

    COMA            reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RIN             reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PTCOMA          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    END             reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PRINT           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PRINTLN         reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ID              reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    GLOBAL          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    LOCAL           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RIF             reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RWHILE          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RFOR            reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RRETURN         reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RBREAK          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RCONTINUE       reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PARDER          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAS             reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENOS           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MULTIPLICACION  reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DIVISION        reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    POTENCIA        reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MODULO          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    IGUALIGUAL      reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DISTINTO        reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAYOR           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENOR           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAYORIGUAL      reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENORIGUAL      reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ANDD            reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ORR             reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DOSPT           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    CORDER          reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RELSE           reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RELSEIF         reduce using rule 214 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)


state 413

    (201) exp -> TRUNC PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RRETURN         reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RBREAK          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RCONTINUE       reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 201 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)


state 414

    (226) exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .

    END             reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAS             reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENOS           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MULTIPLICACION  reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DIVISION        reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    POTENCIA        reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MODULO          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    IGUALIGUAL      reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DISTINTO        reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAYOR           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENOR           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAYORIGUAL      reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENORIGUAL      reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ANDD            reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ORR             reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PRINT           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PRINTLN         reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ID              reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    GLOBAL          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    LOCAL           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RIF             reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RWHILE          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RFOR            reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RRETURN         reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RBREAK          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RCONTINUE       reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PTCOMA          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PARDER          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    COMA            reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DOSPT           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    CORDER          reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RELSE           reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RELSEIF         reduce using rule 226 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)


state 415

    (77) declarationc -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 467

state 416

    (84) declarationc -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (85) declarationc -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 468
    DOSPT           shift and go to state 469


state 417

    (114) assignmentAc -> ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 470
    COMA            shift and go to state 158


state 418

    (120) assignmentAc -> ID listArray2 IGUAL exp PTCOMA .

    END             reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    PRINT           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)


state 419

    (121) assignmentAc -> ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 471


state 420

    (78) declarationc -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 472


state 421

    (79) declarationc -> LOCAL ID IGUAL exp PTCOMA .

    END             reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 79 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)


state 422

    (88) declarationc -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 473
    COMA            shift and go to state 158


state 423

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 474
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 424

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 475
    PTCOMA          shift and go to state 476
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 425

    (81) declarationc -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 477


state 426

    (82) declarationc -> GLOBAL ID IGUAL exp PTCOMA .

    END             reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 82 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)


state 427

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 478
    COMA            shift and go to state 158


state 428

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (225) exp -> CORIZQ . listValues CORDER
    (226) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> CORIZQ . CORDER
    (46) exps -> . exps COMA exp
    (47) exps -> . exp
    (138) listValues -> . listValues COMA exp
    (139) listValues -> . exp
    (135) exp -> . ID parametersCallFunc
    (181) exp -> . exp MAS exp
    (182) exp -> . exp MENOS exp
    (183) exp -> . exp MULTIPLICACION exp
    (184) exp -> . exp DIVISION exp
    (185) exp -> . exp POTENCIA exp
    (186) exp -> . exp MODULO exp
    (187) exp -> . MENOS exp
    (188) exp -> . exp IGUALIGUAL exp
    (189) exp -> . exp DISTINTO exp
    (190) exp -> . exp MAYOR exp
    (191) exp -> . exp MENOR exp
    (192) exp -> . exp MAYORIGUAL exp
    (193) exp -> . exp MENORIGUAL exp
    (194) exp -> . exp ANDD exp
    (195) exp -> . exp ORR exp
    (196) exp -> . NOTT exp
    (197) exp -> . UPPERCASE PARIZQ exp PARDER
    (198) exp -> . LOWERCASE PARIZQ exp PARDER
    (199) exp -> . RLENGTH PARIZQ exp PARDER
    (200) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (201) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (202) exp -> . TRUNC PARIZQ exp PARDER
    (203) exp -> . MFLOAT PARIZQ exp PARDER
    (204) exp -> . MSTRING PARIZQ exp PARDER
    (215) exp -> . PARIZQ exp PARDER
    (216) exp -> . ENTERO
    (217) exp -> . DECIMAL
    (218) exp -> . STRING
    (219) exp -> . CHAR
    (220) exp -> . VERDADERO
    (221) exp -> . FALSO
    (222) exp -> . NULO
    (223) exp -> . ID
    (224) exp -> . ID listArray
    (225) exp -> . CORIZQ listValues CORDER
    (226) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (227) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 134
    ID              shift and go to state 40
    MENOS           shift and go to state 41
    NOTT            shift and go to state 42
    UPPERCASE       shift and go to state 43
    LOWERCASE       shift and go to state 45
    RLENGTH         shift and go to state 46
    PARSE           shift and go to state 47
    TRUNC           shift and go to state 48
    MFLOAT          shift and go to state 49
    MSTRING         shift and go to state 50
    PARIZQ          shift and go to state 44
    ENTERO          shift and go to state 51
    DECIMAL         shift and go to state 52
    STRING          shift and go to state 53
    CHAR            shift and go to state 54
    VERDADERO       shift and go to state 55
    FALSO           shift and go to state 56
    NULO            shift and go to state 57
    CORIZQ          shift and go to state 58

    exps                           shift and go to state 479
    listValues                     shift and go to state 133
    exp                            shift and go to state 165

state 429

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL exp . PTCOMA
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp

    DOSPT           shift and go to state 480
    PTCOMA          shift and go to state 481
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103


state 430

    (152) ifStc -> RIF exp blockifc END PTCOMA .

    END             reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINT           reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINTLN         reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    ID              reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    LOCAL           reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    GLOBAL          reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RIF             reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RWHILE          reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RFOR            reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RRETURN         reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RBREAK          reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSE           reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSEIF         reduce using rule 152 (ifStc -> RIF exp blockifc END PTCOMA .)


state 431

    (153) ifStc -> RIF exp blockifc RELSE blockifc . END PTCOMA

    END             shift and go to state 482


state 432

    (154) ifStc -> RIF exp blockifc RELSE END . PTCOMA

    PTCOMA          shift and go to state 483


state 433

    (155) ifStc -> RIF exp blockifc elseifStc END . PTCOMA

    PTCOMA          shift and go to state 484


state 434

    (156) ifStc -> RIF exp blockifc elseifStc RELSE . blockifc END PTCOMA
    (157) ifStc -> RIF exp blockifc elseifStc RELSE . END PTCOMA
    (172) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 486
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockifc                       shift and go to state 485
    instructionsc                  shift and go to state 305
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 435

    (158) elseifStc -> elseifStc conelseifc .

    END             reduce using rule 158 (elseifStc -> elseifStc conelseifc .)
    RELSE           reduce using rule 158 (elseifStc -> elseifStc conelseifc .)
    RELSEIF         reduce using rule 158 (elseifStc -> elseifStc conelseifc .)


state 436

    (160) conelseifc -> RELSEIF exp . blockifc
    (161) conelseifc -> RELSEIF exp .
    (181) exp -> exp . MAS exp
    (182) exp -> exp . MENOS exp
    (183) exp -> exp . MULTIPLICACION exp
    (184) exp -> exp . DIVISION exp
    (185) exp -> exp . POTENCIA exp
    (186) exp -> exp . MODULO exp
    (188) exp -> exp . IGUALIGUAL exp
    (189) exp -> exp . DISTINTO exp
    (190) exp -> exp . MAYOR exp
    (191) exp -> exp . MENOR exp
    (192) exp -> exp . MAYORIGUAL exp
    (193) exp -> exp . MENORIGUAL exp
    (194) exp -> exp . ANDD exp
    (195) exp -> exp . ORR exp
    (172) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (31) instructionc -> . p_print
    (32) instructionc -> . p_println
    (33) instructionc -> . declarationc
    (34) instructionc -> . assignmentAc
    (35) instructionc -> . callFuncSt
    (36) instructionc -> . ifStc
    (37) instructionc -> . whileSt
    (38) instructionc -> . forSt
    (39) instructionc -> . returnST
    (40) instructionc -> . breakST
    (41) instructionc -> . continueST
    (42) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (43) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (44) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (45) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (76) declarationc -> . ID IGUAL exp PTCOMA
    (77) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (78) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (80) declarationc -> . LOCAL ID PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (83) declarationc -> . GLOBAL ID PTCOMA
    (84) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (86) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (88) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (115) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (134) callFuncSt -> . ID parametersCallFunc PTCOMA
    (151) ifStc -> . RIF exp END PTCOMA
    (152) ifStc -> . RIF exp blockifc END PTCOMA
    (153) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (154) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (155) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (156) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (157) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (162) whileSt -> . RWHILE exp blockc
    (163) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (164) forSt -> . RFOR parameterFor RIN exp blockc
    (173) returnST -> . RRETURN exp PTCOMA
    (174) returnST -> . RRETURN PTCOMA
    (175) breakST -> . RBREAK PTCOMA
    (176) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 161 (conelseifc -> RELSEIF exp .)
    RELSE           reduce using rule 161 (conelseifc -> RELSEIF exp .)
    RELSEIF         reduce using rule 161 (conelseifc -> RELSEIF exp .)
    MAS             shift and go to state 90
    MENOS           shift and go to state 91
    MULTIPLICACION  shift and go to state 92
    DIVISION        shift and go to state 93
    POTENCIA        shift and go to state 94
    MODULO          shift and go to state 95
    IGUALIGUAL      shift and go to state 96
    DISTINTO        shift and go to state 97
    MAYOR           shift and go to state 98
    MENOR           shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101
    ANDD            shift and go to state 102
    ORR             shift and go to state 103
    PRINT           shift and go to state 16
    PRINTLN         shift and go to state 17
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RRETURN         shift and go to state 25
    RBREAK          shift and go to state 26
    RCONTINUE       shift and go to state 27

    blockifc                       shift and go to state 487
    instructionsc                  shift and go to state 305
    instructionc                   shift and go to state 138
    p_print                        shift and go to state 139
    p_println                      shift and go to state 140
    declarationc                   shift and go to state 141
    assignmentAc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 437

    (163) forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .

    PRINT           reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    PRINTLN         reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    ID              reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    GLOBAL          reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    LOCAL           reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    FUNCTION        reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RIF             reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RWHILE          reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RFOR            reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RRETURN         reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RBREAK          reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RCONTINUE       reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    $end            reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    END             reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RELSE           reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RELSEIF         reduce using rule 163 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)


state 438

    (57) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 488


state 439

    (91) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 489

state 440

    (97) assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 97 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 441

    (50) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 50 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 442

    (58) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 490

state 443

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 491


state 444

    (93) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 93 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 445

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 492


state 446

    (53) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 53 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 447

    (60) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 493

state 448

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 494


state 449

    (95) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 95 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 450

    (100) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 495


state 451

    (145) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    ID              reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RRETURN         reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RBREAK          reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    $end            reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    END             reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 145 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)


state 452

    (63) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 496


state 453

    (70) declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 70 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 454

    (71) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 497


state 455

    (102) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA
    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 498
    DOSPT           shift and go to state 499


state 456

    (109) assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 500

state 457

    (64) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 501

state 458

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (73) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 502
    PTCOMA          shift and go to state 503


state 459

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 504
    COMA            shift and go to state 158


state 460

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 505


state 461

    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    END             reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)


state 462

    (67) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 506

state 463

    (74) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (75) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 507
    PTCOMA          shift and go to state 508


state 464

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 509
    COMA            shift and go to state 158


state 465

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 510


state 466

    (113) assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    END             reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)


state 467

    (77) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 511


state 468

    (84) declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 84 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 469

    (85) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 512


state 470

    (114) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA
    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 513
    DOSPT           shift and go to state 514


state 471

    (121) assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 515

state 472

    (78) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 516

state 473

    (88) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (89) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 517
    PTCOMA          shift and go to state 518


state 474

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 519
    COMA            shift and go to state 158


state 475

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 520


state 476

    (125) assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .

    END             reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINT           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)


state 477

    (81) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 521

state 478

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (87) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 522
    PTCOMA          shift and go to state 523


state 479

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (46) exps -> exps . COMA exp

    CORDER          shift and go to state 524
    COMA            shift and go to state 158


state 480

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 525


state 481

    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .

    END             reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINT           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)


state 482

    (153) ifStc -> RIF exp blockifc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 526


state 483

    (154) ifStc -> RIF exp blockifc RELSE END PTCOMA .

    END             reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINT           reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    ID              reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    LOCAL           reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RIF             reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RWHILE          reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RFOR            reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RRETURN         reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RBREAK          reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSE           reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 154 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)


state 484

    (155) ifStc -> RIF exp blockifc elseifStc END PTCOMA .

    END             reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINT           reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINTLN         reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    ID              reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    LOCAL           reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    GLOBAL          reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RIF             reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RWHILE          reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RFOR            reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RRETURN         reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RBREAK          reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RCONTINUE       reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSE           reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSEIF         reduce using rule 155 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)


state 485

    (156) ifStc -> RIF exp blockifc elseifStc RELSE blockifc . END PTCOMA

    END             shift and go to state 527


state 486

    (157) ifStc -> RIF exp blockifc elseifStc RELSE END . PTCOMA

    PTCOMA          shift and go to state 528


state 487

    (160) conelseifc -> RELSEIF exp blockifc .

    END             reduce using rule 160 (conelseifc -> RELSEIF exp blockifc .)
    RELSE           reduce using rule 160 (conelseifc -> RELSEIF exp blockifc .)
    RELSEIF         reduce using rule 160 (conelseifc -> RELSEIF exp blockifc .)


state 488

    (57) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 57 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 489

    (91) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 529


state 490

    (58) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 530


state 491

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 531

state 492

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 493

    (60) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 532


state 494

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 533

state 495

    (100) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 496

    (63) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 63 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 497

    (71) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 534

state 498

    (102) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 102 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 499

    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 535


state 500

    (109) assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 536


state 501

    (64) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 537


state 502

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 538


state 503

    (73) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 73 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 504

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (105) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 539
    PTCOMA          shift and go to state 540


state 505

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 541

state 506

    (67) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 542


state 507

    (74) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 543


state 508

    (75) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 75 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 509

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (107) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 544
    PTCOMA          shift and go to state 545


state 510

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 546

state 511

    (77) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 77 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 512

    (85) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 547

state 513

    (114) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 114 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 514

    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 548


state 515

    (121) assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 549


state 516

    (78) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 550


state 517

    (88) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 551


state 518

    (89) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 89 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 519

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 552
    PTCOMA          shift and go to state 553


state 520

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 554

state 521

    (81) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 555


state 522

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 556


state 523

    (87) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 87 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 524

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 557
    PTCOMA          shift and go to state 558


state 525

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 559

state 526

    (153) ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .

    END             reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RRETURN         reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RBREAK          reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 153 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)


state 527

    (156) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 560


state 528

    (157) ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .

    END             reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINT           reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    ID              reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    LOCAL           reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RIF             reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RWHILE          reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RFOR            reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RRETURN         reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RBREAK          reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSE           reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 157 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)


state 529

    (91) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 91 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 530

    (58) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 58 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 531

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 561


state 532

    (60) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 60 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 533

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 562


state 534

    (71) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 563


state 535

    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 564

state 536

    (109) assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 537

    (64) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 64 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 538

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 565

state 539

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 566


state 540

    (105) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 105 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 541

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 567


state 542

    (67) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 67 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 543

    (74) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 568

state 544

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 569


state 545

    (107) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 107 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 546

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 570


state 547

    (85) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 571


state 548

    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 572

state 549

    (121) assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 550

    (78) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 78 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 551

    (88) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 573

state 552

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 574


state 553

    (119) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 119 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 554

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 575


state 555

    (81) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 81 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 556

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 576

state 557

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 577


state 558

    (117) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 117 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 559

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 578


state 560

    (156) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .

    END             reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RRETURN         reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RBREAK          reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 156 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)


state 561

    (92) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 92 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 562

    (94) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 94 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 563

    (71) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 71 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 564

    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 579


state 565

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 580


state 566

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 581

state 567

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 568

    (74) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 582


state 569

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 583

state 570

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 571

    (85) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 85 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 572

    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 584


state 573

    (88) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 585


state 574

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 586

state 575

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 576

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 587


state 577

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (205) typeDef -> . RINT
    (206) typeDef -> . RFLOAT
    (207) typeDef -> . RSTRING
    (208) typeDef -> . RCHAR
    (209) typeDef -> . RBOOL
    (210) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (211) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (212) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (213) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (214) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 218
    RFLOAT          shift and go to state 219
    RSTRING         shift and go to state 220
    RCHAR           shift and go to state 221
    RBOOL           shift and go to state 222
    RARRAY          shift and go to state 223

    typeDef                        shift and go to state 588

state 578

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 579

    (103) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 103 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 580

    (72) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 72 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 581

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 589


state 582

    (74) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 74 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 583

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 590


state 584

    (115) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 115 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 585

    (88) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 88 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 586

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 591


state 587

    (86) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 86 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 588

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 592


state 589

    (104) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 104 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 590

    (106) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 106 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 591

    (118) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 118 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 592

    (116) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 116 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOSPT in state 228 resolved as shift
WARNING: reduce/reduce conflict in state 165 resolved using rule (exps -> exp)
WARNING: rejected rule (listValues -> exp) in state 165
