Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RBOOLA
    RCHARA
    RFLOATA
    RINTA
    RSTRINGA

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructionsf -> instructionsf instructionf
Rule 5     instructionsf -> instructionf
Rule 6     instructionsc -> instructionsc instructionc
Rule 7     instructionsc -> instructionc
Rule 8     instruction -> p_print
Rule 9     instruction -> p_println
Rule 10    instruction -> declaration
Rule 11    instruction -> assignmentA
Rule 12    instruction -> function
Rule 13    instruction -> callFuncSt
Rule 14    instruction -> ifSt
Rule 15    instruction -> whileSt
Rule 16    instruction -> forSt
Rule 17    instruction -> returnST
Rule 18    instruction -> breakST
Rule 19    instruction -> continueST
Rule 20    instruction -> push
Rule 21    instruction -> pop
Rule 22    instructionf -> p_print
Rule 23    instructionf -> p_println
Rule 24    instructionf -> declarationf
Rule 25    instructionf -> assignmentAf
Rule 26    instructionf -> callFuncSt
Rule 27    instructionf -> ifSt
Rule 28    instructionf -> whileSt
Rule 29    instructionf -> forSt
Rule 30    instructionf -> returnST
Rule 31    instructionf -> breakST
Rule 32    instructionf -> continueST
Rule 33    instructionf -> push
Rule 34    instructionf -> pop
Rule 35    instructionc -> p_print
Rule 36    instructionc -> p_println
Rule 37    instructionc -> declarationc
Rule 38    instructionc -> assignmentAc
Rule 39    instructionc -> callFuncSt
Rule 40    instructionc -> ifStc
Rule 41    instructionc -> whileSt
Rule 42    instructionc -> forSt
Rule 43    instructionc -> returnST
Rule 44    instructionc -> breakST
Rule 45    instructionc -> continueST
Rule 46    instructionc -> push
Rule 47    instructionc -> pop
Rule 48    p_print -> PRINT PARIZQ exps PARDER PTCOMA
Rule 49    p_print -> PRINT PARIZQ PARDER PTCOMA
Rule 50    p_println -> PRINTLN PARIZQ exps PARDER PTCOMA
Rule 51    p_println -> PRINTLN PARIZQ PARDER PTCOMA
Rule 52    exps -> exps COMA exp
Rule 53    exps -> exp
Rule 54    declaration -> ID IGUAL exp PTCOMA
Rule 55    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 56    declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 57    declaration -> GLOBAL ID IGUAL exp PTCOMA
Rule 58    declaration -> GLOBAL ID PTCOMA
Rule 59    declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 60    declaration -> LOCAL ID IGUAL exp PTCOMA
Rule 61    declaration -> LOCAL ID PTCOMA
Rule 62    declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 63    declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 64    declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 65    declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 66    declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 67    declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 68    declarationf -> ID IGUAL exp PTCOMA
Rule 69    declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 70    declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 71    declarationf -> GLOBAL ID IGUAL exp PTCOMA
Rule 72    declarationf -> GLOBAL ID PTCOMA
Rule 73    declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 74    declarationf -> LOCAL ID IGUAL exp PTCOMA
Rule 75    declarationf -> LOCAL ID PTCOMA
Rule 76    declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 77    declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 78    declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 79    declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 80    declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 81    declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 82    declarationc -> ID IGUAL exp PTCOMA
Rule 83    declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 84    declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 85    declarationc -> LOCAL ID IGUAL exp PTCOMA
Rule 86    declarationc -> LOCAL ID PTCOMA
Rule 87    declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 88    declarationc -> GLOBAL ID IGUAL exp PTCOMA
Rule 89    declarationc -> GLOBAL ID PTCOMA
Rule 90    declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 91    declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 92    declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 93    declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 94    declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 95    declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 96    assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 97    assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 98    assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 99    assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 100   assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 101   assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 102   assignmentA -> ID listArray2 IGUAL exp PTCOMA
Rule 103   assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 104   assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 105   assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA
Rule 106   assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 107   assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA
Rule 108   assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 109   assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 110   assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 111   assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 112   assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 113   assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 114   assignmentAf -> ID listArray2 IGUAL exp PTCOMA
Rule 115   assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 116   assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 117   assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA
Rule 118   assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 119   assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA
Rule 120   assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 121   assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 122   assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 123   assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 124   assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 125   assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
Rule 126   assignmentAc -> ID listArray2 IGUAL exp PTCOMA
Rule 127   assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 128   assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 129   assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA
Rule 130   assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 131   assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA
Rule 132   function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf
Rule 133   function -> FUNCTION ID parametersFunc blockf
Rule 134   parametersFunc -> PARIZQ parameters PARDER
Rule 135   parametersFunc -> PARIZQ PARDER
Rule 136   parameters -> parameters COMA parameter
Rule 137   parameters -> parameter
Rule 138   parameter -> ID DOSPT DOSPT typeDef
Rule 139   parameter -> ID
Rule 140   callFuncSt -> ID parametersCallFunc PTCOMA
Rule 141   parametersCallFunc -> PARIZQ listValues PARDER
Rule 142   parametersCallFunc -> PARIZQ PARDER
Rule 143   listValues -> listValues COMA exp
Rule 144   listValues -> exp
Rule 145   ifSt -> RIF exp END PTCOMA
Rule 146   ifSt -> RIF exp blockiff END PTCOMA
Rule 147   ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA
Rule 148   ifSt -> RIF exp blockiff RELSE END PTCOMA
Rule 149   ifSt -> RIF exp blockiff elseifSt END PTCOMA
Rule 150   ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
Rule 151   ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA
Rule 152   elseifSt -> elseifSt conelseif
Rule 153   elseifSt -> conelseif
Rule 154   conelseif -> RELSEIF exp blockiff
Rule 155   conelseif -> RELSEIF exp
Rule 156   ifStc -> RIF exp END PTCOMA
Rule 157   ifStc -> RIF exp blockifc END PTCOMA
Rule 158   ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA
Rule 159   ifStc -> RIF exp blockifc RELSE END PTCOMA
Rule 160   ifStc -> RIF exp blockifc elseifStc END PTCOMA
Rule 161   ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
Rule 162   ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA
Rule 163   elseifStc -> elseifStc conelseifc
Rule 164   elseifStc -> conelseifc
Rule 165   conelseifc -> RELSEIF exp blockifc
Rule 166   conelseifc -> RELSEIF exp
Rule 167   whileSt -> RWHILE exp blockc
Rule 168   forSt -> RFOR parameterFor RIN exp DOSPT exp blockc
Rule 169   forSt -> RFOR parameterFor RIN exp blockc
Rule 170   parameterFor -> ID DOSPT DOSPT typeDef
Rule 171   parameterFor -> ID
Rule 172   blockf -> instructionsf END PTCOMA
Rule 173   blockf -> END PTCOMA
Rule 174   blockc -> instructionsc END PTCOMA
Rule 175   blockc -> END PTCOMA
Rule 176   blockiff -> instructionsf
Rule 177   blockifc -> instructionsc
Rule 178   returnST -> RRETURN exp PTCOMA
Rule 179   returnST -> RRETURN PTCOMA
Rule 180   breakST -> RBREAK PTCOMA
Rule 181   continueST -> RCONTINUE PTCOMA
Rule 182   listArray -> listArray CORIZQ exp CORDER
Rule 183   listArray -> CORIZQ exp CORDER
Rule 184   listArray2 -> listArray2 CORIZQ exp CORDER
Rule 185   listArray2 -> CORIZQ exp CORDER
Rule 186   exp -> exp MAS exp
Rule 187   exp -> exp MENOS exp
Rule 188   exp -> exp MULTIPLICACION exp
Rule 189   exp -> exp DIVISION exp
Rule 190   exp -> exp POTENCIA exp
Rule 191   exp -> exp MODULO exp
Rule 192   exp -> MENOS exp
Rule 193   exp -> exp IGUALIGUAL exp
Rule 194   exp -> exp DISTINTO exp
Rule 195   exp -> exp MAYOR exp
Rule 196   exp -> exp MENOR exp
Rule 197   exp -> exp MAYORIGUAL exp
Rule 198   exp -> exp MENORIGUAL exp
Rule 199   exp -> exp ANDD exp
Rule 200   exp -> exp ORR exp
Rule 201   exp -> NOTT exp
Rule 202   exp -> ID parametersCallFunc
Rule 203   exp -> UPPERCASE PARIZQ exp PARDER
Rule 204   exp -> LOWERCASE PARIZQ exp PARDER
Rule 205   exp -> LOG PARIZQ exp COMA exp PARDER
Rule 206   exp -> LOG10 PARIZQ exp PARDER
Rule 207   exp -> SIN PARIZQ exp PARDER
Rule 208   exp -> COS PARIZQ exp PARDER
Rule 209   exp -> TAN PARIZQ exp PARDER
Rule 210   exp -> SQRT PARIZQ exp PARDER
Rule 211   exp -> PARSE PARIZQ typeDef COMA exp PARDER
Rule 212   exp -> TRUNC PARIZQ typeDef COMA exp PARDER
Rule 213   exp -> TRUNC PARIZQ exp PARDER
Rule 214   exp -> MFLOAT PARIZQ exp PARDER
Rule 215   exp -> MSTRING PARIZQ exp PARDER
Rule 216   exp -> TYPEOF PARIZQ exp PARDER
Rule 217   exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER
Rule 218   exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
Rule 219   exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
Rule 220   exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
Rule 221   exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
Rule 222   exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
Rule 223   exp -> RPOP NOTT PARIZQ ID PARDER
Rule 224   exp -> RPOP NOTT PARIZQ ID listArray2 PARDER
Rule 225   push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
Rule 226   push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
Rule 227   push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
Rule 228   push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
Rule 229   push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
Rule 230   push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
Rule 231   pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA
Rule 232   pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA
Rule 233   exp -> RLENGTH PARIZQ exp PARDER
Rule 234   typeDef -> RINT
Rule 235   typeDef -> RFLOAT
Rule 236   typeDef -> RSTRING
Rule 237   typeDef -> RCHAR
Rule 238   typeDef -> RBOOL
Rule 239   typeDef -> RARRAY LLAIZQ RINT LLADER
Rule 240   typeDef -> RARRAY LLAIZQ RFLOAT LLADER
Rule 241   typeDef -> RARRAY LLAIZQ RSTRING LLADER
Rule 242   typeDef -> RARRAY LLAIZQ RCHAR LLADER
Rule 243   typeDef -> RARRAY LLAIZQ RBOOL LLADER
Rule 244   exp -> PARIZQ exp PARDER
Rule 245   exp -> ENTERO
Rule 246   exp -> DECIMAL
Rule 247   exp -> STRING
Rule 248   exp -> CHAR
Rule 249   exp -> VERDADERO
Rule 250   exp -> FALSO
Rule 251   exp -> NULO
Rule 252   exp -> ID
Rule 253   exp -> ID listArray
Rule 254   exp -> CORIZQ listValues CORDER
Rule 255   exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef
Rule 256   exp -> CORIZQ CORDER

Terminals, with rules where they appear

ANDD                 : 199
CHAR                 : 248
COMA                 : 52 136 143 205 211 212 217 218 219 220 221 222 225 226 227 228 229 230
CORDER               : 62 63 64 65 66 67 76 77 78 79 80 81 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 120 121 122 123 124 125 182 183 184 185 218 219 221 222 226 227 229 230 254 255 256
CORIZQ               : 62 63 64 65 66 67 76 77 78 79 80 81 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 120 121 122 123 124 125 182 183 184 185 218 219 221 222 226 227 229 230 254 255 256
COS                  : 208
DECIMAL              : 246
DISTINTO             : 194
DIVISION             : 189
DOSPT                : 55 55 56 56 59 59 63 63 64 64 66 66 69 69 70 70 73 73 77 77 78 78 80 80 83 83 84 84 87 87 91 91 92 92 94 94 97 97 98 98 100 100 103 103 104 104 106 106 109 109 110 110 112 112 115 115 116 116 118 118 121 121 122 122 124 124 127 127 128 128 130 130 132 132 138 138 168 170 170 255 255
END                  : 145 146 147 148 149 150 151 156 157 158 159 160 161 162 172 173 174 175
ENTERO               : 245
FALSO                : 250
FUNCTION             : 132 133
GLOBAL               : 56 57 58 64 65 70 71 72 78 79 87 88 89 92 93 98 99 104 105 110 111 116 117 122 123 128 129
ID                   : 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 138 139 140 170 171 202 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 252 253
IGUAL                : 54 55 56 57 59 60 62 63 64 65 66 67 68 69 70 71 73 74 76 77 78 79 80 81 82 83 84 85 87 88 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131
IGUALIGUAL           : 193
LLADER               : 239 240 241 242 243
LLAIZQ               : 239 240 241 242 243
LOCAL                : 59 60 61 66 67 73 74 75 80 81 84 85 86 94 95 100 101 106 107 112 113 118 119 124 125 130 131
LOG                  : 205
LOG10                : 206
LOWERCASE            : 204
MAS                  : 186
MAYOR                : 195
MAYORIGUAL           : 197
MENOR                : 196
MENORIGUAL           : 198
MENOS                : 187 192
MFLOAT               : 214
MODULO               : 191
MSTRING              : 215
MULTIPLICACION       : 188
NOTT                 : 201 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232
NULO                 : 251
ORR                  : 200
PARDER               : 48 49 50 51 134 135 141 142 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 244
PARIZQ               : 48 49 50 51 134 135 141 142 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 244
PARSE                : 211
POTENCIA             : 190
PRINT                : 48 49
PRINTLN              : 50 51
PTCOMA               : 48 49 50 51 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 140 145 146 147 148 149 150 151 156 157 158 159 160 161 162 172 173 174 175 178 179 180 181 225 226 227 228 229 230 231 232
RARRAY               : 239 240 241 242 243
RBOOL                : 238 243
RBOOLA               : 
RBREAK               : 180
RCHAR                : 237 242
RCHARA               : 
RCONTINUE            : 181
RELSE                : 147 148 150 151 158 159 161 162
RELSEIF              : 154 155 165 166
RFLOAT               : 235 240
RFLOATA              : 
RFOR                 : 168 169
RIF                  : 145 146 147 148 149 150 151 156 157 158 159 160 161 162
RIN                  : 168 169
RINT                 : 234 239
RINTA                : 
RLENGTH              : 233
RPOP                 : 223 224 231 232
RPUSH                : 217 218 219 220 221 222 225 226 227 228 229 230
RRETURN              : 178 179
RSTRING              : 236 241
RSTRINGA             : 
RWHILE               : 167
SIN                  : 207
SQRT                 : 210
STRING               : 247
TAN                  : 209
TRUNC                : 212 213
TYPEOF               : 216
UPPERCASE            : 203
VERDADERO            : 249
error                : 

Nonterminals, with rules where they appear

assignmentA          : 11
assignmentAc         : 38
assignmentAf         : 25
blockc               : 167 168 169
blockf               : 132 133
blockifc             : 157 158 158 159 160 161 161 162 165
blockiff             : 146 147 147 148 149 150 150 151 154
breakST              : 18 31 44
callFuncSt           : 13 26 39
conelseif            : 152 153
conelseifc           : 163 164
continueST           : 19 32 45
declaration          : 10
declarationc         : 37
declarationf         : 24
elseifSt             : 149 150 151 152
elseifStc            : 160 161 162 163
exp                  : 52 53 54 55 56 57 59 60 68 69 70 71 73 74 82 83 84 85 87 88 102 103 104 105 106 107 114 115 116 117 118 119 126 127 128 129 130 131 143 144 145 146 147 148 149 150 151 154 155 156 157 158 159 160 161 162 165 166 167 168 168 169 178 182 183 184 185 186 186 187 187 188 188 189 189 190 190 191 191 192 193 193 194 194 195 195 196 196 197 197 198 198 199 199 200 200 201 203 204 205 205 206 207 208 209 210 211 212 213 214 215 216 217 220 225 228 233 244
exps                 : 48 50 52 62 63 64 65 66 67 76 77 78 79 80 81 90 91 92 93 94 95 96 97 98 99 100 101 108 109 110 111 112 113 120 121 122 123 124 125 219 222 227 230
forSt                : 16 29 42
function             : 12
ifSt                 : 14 27
ifStc                : 40
initial              : 0
instruction          : 2 3
instructionc         : 6 7
instructionf         : 4 5
instructions         : 1 2
instructionsc        : 6 174 177
instructionsf        : 4 172 176
listArray            : 182 253
listArray2           : 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 184 220 221 222 224 228 229 230 232
listValues           : 141 143 254 255
p_print              : 8 22 35
p_println            : 9 23 36
parameter            : 136 137
parameterFor         : 168 169
parameters           : 134 136
parametersCallFunc   : 140 202
parametersFunc       : 132 133
pop                  : 21 34 47
push                 : 20 33 46
returnST             : 17 30 43
typeDef              : 55 56 59 63 64 66 69 70 73 77 78 80 83 84 87 91 92 94 97 98 100 103 104 106 109 110 112 115 116 118 121 122 124 127 128 130 132 138 170 211 212 255
whileSt              : 15 28 41

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . assignmentA
    (12) instruction -> . function
    (13) instruction -> . callFuncSt
    (14) instruction -> . ifSt
    (15) instruction -> . whileSt
    (16) instruction -> . forSt
    (17) instruction -> . returnST
    (18) instruction -> . breakST
    (19) instruction -> . continueST
    (20) instruction -> . push
    (21) instruction -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (54) declaration -> . ID IGUAL exp PTCOMA
    (55) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (57) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (58) declaration -> . GLOBAL ID PTCOMA
    (59) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (61) declaration -> . LOCAL ID PTCOMA
    (62) declaration -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (63) declaration -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (64) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (96) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (97) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (98) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentA -> . ID listArray2 IGUAL exp PTCOMA
    (103) assignmentA -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (104) assignmentA -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (106) assignmentA -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (132) function -> . FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf
    (133) function -> . FUNCTION ID parametersFunc blockf
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    GLOBAL          shift and go to state 21
    LOCAL           shift and go to state 22
    FUNCTION        shift and go to state 23
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    assignmentA                    shift and go to state 7
    function                       shift and go to state 8
    callFuncSt                     shift and go to state 9
    ifSt                           shift and go to state 10
    whileSt                        shift and go to state 11
    forSt                          shift and go to state 12
    returnST                       shift and go to state 13
    breakST                        shift and go to state 14
    continueST                     shift and go to state 15
    push                           shift and go to state 16
    pop                            shift and go to state 17

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . assignmentA
    (12) instruction -> . function
    (13) instruction -> . callFuncSt
    (14) instruction -> . ifSt
    (15) instruction -> . whileSt
    (16) instruction -> . forSt
    (17) instruction -> . returnST
    (18) instruction -> . breakST
    (19) instruction -> . continueST
    (20) instruction -> . push
    (21) instruction -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (54) declaration -> . ID IGUAL exp PTCOMA
    (55) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (57) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (58) declaration -> . GLOBAL ID PTCOMA
    (59) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (61) declaration -> . LOCAL ID PTCOMA
    (62) declaration -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (63) declaration -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (64) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (96) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (97) assignmentA -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (98) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (102) assignmentA -> . ID listArray2 IGUAL exp PTCOMA
    (103) assignmentA -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (104) assignmentA -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (106) assignmentA -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (132) function -> . FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf
    (133) function -> . FUNCTION ID parametersFunc blockf
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 20
    GLOBAL          shift and go to state 21
    LOCAL           shift and go to state 22
    FUNCTION        shift and go to state 23
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    instruction                    shift and go to state 32
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    assignmentA                    shift and go to state 7
    function                       shift and go to state 8
    callFuncSt                     shift and go to state 9
    ifSt                           shift and go to state 10
    whileSt                        shift and go to state 11
    forSt                          shift and go to state 12
    returnST                       shift and go to state 13
    breakST                        shift and go to state 14
    continueST                     shift and go to state 15
    push                           shift and go to state 16
    pop                            shift and go to state 17

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    GLOBAL          reduce using rule 3 (instructions -> instruction .)
    LOCAL           reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    RFOR            reduce using rule 3 (instructions -> instruction .)
    RRETURN         reduce using rule 3 (instructions -> instruction .)
    RBREAK          reduce using rule 3 (instructions -> instruction .)
    RCONTINUE       reduce using rule 3 (instructions -> instruction .)
    RPUSH           reduce using rule 3 (instructions -> instruction .)
    RPOP            reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (8) instruction -> p_print .

    PRINT           reduce using rule 8 (instruction -> p_print .)
    PRINTLN         reduce using rule 8 (instruction -> p_print .)
    ID              reduce using rule 8 (instruction -> p_print .)
    GLOBAL          reduce using rule 8 (instruction -> p_print .)
    LOCAL           reduce using rule 8 (instruction -> p_print .)
    FUNCTION        reduce using rule 8 (instruction -> p_print .)
    RIF             reduce using rule 8 (instruction -> p_print .)
    RWHILE          reduce using rule 8 (instruction -> p_print .)
    RFOR            reduce using rule 8 (instruction -> p_print .)
    RRETURN         reduce using rule 8 (instruction -> p_print .)
    RBREAK          reduce using rule 8 (instruction -> p_print .)
    RCONTINUE       reduce using rule 8 (instruction -> p_print .)
    RPUSH           reduce using rule 8 (instruction -> p_print .)
    RPOP            reduce using rule 8 (instruction -> p_print .)
    $end            reduce using rule 8 (instruction -> p_print .)


state 5

    (9) instruction -> p_println .

    PRINT           reduce using rule 9 (instruction -> p_println .)
    PRINTLN         reduce using rule 9 (instruction -> p_println .)
    ID              reduce using rule 9 (instruction -> p_println .)
    GLOBAL          reduce using rule 9 (instruction -> p_println .)
    LOCAL           reduce using rule 9 (instruction -> p_println .)
    FUNCTION        reduce using rule 9 (instruction -> p_println .)
    RIF             reduce using rule 9 (instruction -> p_println .)
    RWHILE          reduce using rule 9 (instruction -> p_println .)
    RFOR            reduce using rule 9 (instruction -> p_println .)
    RRETURN         reduce using rule 9 (instruction -> p_println .)
    RBREAK          reduce using rule 9 (instruction -> p_println .)
    RCONTINUE       reduce using rule 9 (instruction -> p_println .)
    RPUSH           reduce using rule 9 (instruction -> p_println .)
    RPOP            reduce using rule 9 (instruction -> p_println .)
    $end            reduce using rule 9 (instruction -> p_println .)


state 6

    (10) instruction -> declaration .

    PRINT           reduce using rule 10 (instruction -> declaration .)
    PRINTLN         reduce using rule 10 (instruction -> declaration .)
    ID              reduce using rule 10 (instruction -> declaration .)
    GLOBAL          reduce using rule 10 (instruction -> declaration .)
    LOCAL           reduce using rule 10 (instruction -> declaration .)
    FUNCTION        reduce using rule 10 (instruction -> declaration .)
    RIF             reduce using rule 10 (instruction -> declaration .)
    RWHILE          reduce using rule 10 (instruction -> declaration .)
    RFOR            reduce using rule 10 (instruction -> declaration .)
    RRETURN         reduce using rule 10 (instruction -> declaration .)
    RBREAK          reduce using rule 10 (instruction -> declaration .)
    RCONTINUE       reduce using rule 10 (instruction -> declaration .)
    RPUSH           reduce using rule 10 (instruction -> declaration .)
    RPOP            reduce using rule 10 (instruction -> declaration .)
    $end            reduce using rule 10 (instruction -> declaration .)


state 7

    (11) instruction -> assignmentA .

    PRINT           reduce using rule 11 (instruction -> assignmentA .)
    PRINTLN         reduce using rule 11 (instruction -> assignmentA .)
    ID              reduce using rule 11 (instruction -> assignmentA .)
    GLOBAL          reduce using rule 11 (instruction -> assignmentA .)
    LOCAL           reduce using rule 11 (instruction -> assignmentA .)
    FUNCTION        reduce using rule 11 (instruction -> assignmentA .)
    RIF             reduce using rule 11 (instruction -> assignmentA .)
    RWHILE          reduce using rule 11 (instruction -> assignmentA .)
    RFOR            reduce using rule 11 (instruction -> assignmentA .)
    RRETURN         reduce using rule 11 (instruction -> assignmentA .)
    RBREAK          reduce using rule 11 (instruction -> assignmentA .)
    RCONTINUE       reduce using rule 11 (instruction -> assignmentA .)
    RPUSH           reduce using rule 11 (instruction -> assignmentA .)
    RPOP            reduce using rule 11 (instruction -> assignmentA .)
    $end            reduce using rule 11 (instruction -> assignmentA .)


state 8

    (12) instruction -> function .

    PRINT           reduce using rule 12 (instruction -> function .)
    PRINTLN         reduce using rule 12 (instruction -> function .)
    ID              reduce using rule 12 (instruction -> function .)
    GLOBAL          reduce using rule 12 (instruction -> function .)
    LOCAL           reduce using rule 12 (instruction -> function .)
    FUNCTION        reduce using rule 12 (instruction -> function .)
    RIF             reduce using rule 12 (instruction -> function .)
    RWHILE          reduce using rule 12 (instruction -> function .)
    RFOR            reduce using rule 12 (instruction -> function .)
    RRETURN         reduce using rule 12 (instruction -> function .)
    RBREAK          reduce using rule 12 (instruction -> function .)
    RCONTINUE       reduce using rule 12 (instruction -> function .)
    RPUSH           reduce using rule 12 (instruction -> function .)
    RPOP            reduce using rule 12 (instruction -> function .)
    $end            reduce using rule 12 (instruction -> function .)


state 9

    (13) instruction -> callFuncSt .

    PRINT           reduce using rule 13 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 13 (instruction -> callFuncSt .)
    ID              reduce using rule 13 (instruction -> callFuncSt .)
    GLOBAL          reduce using rule 13 (instruction -> callFuncSt .)
    LOCAL           reduce using rule 13 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 13 (instruction -> callFuncSt .)
    RIF             reduce using rule 13 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 13 (instruction -> callFuncSt .)
    RFOR            reduce using rule 13 (instruction -> callFuncSt .)
    RRETURN         reduce using rule 13 (instruction -> callFuncSt .)
    RBREAK          reduce using rule 13 (instruction -> callFuncSt .)
    RCONTINUE       reduce using rule 13 (instruction -> callFuncSt .)
    RPUSH           reduce using rule 13 (instruction -> callFuncSt .)
    RPOP            reduce using rule 13 (instruction -> callFuncSt .)
    $end            reduce using rule 13 (instruction -> callFuncSt .)


state 10

    (14) instruction -> ifSt .

    PRINT           reduce using rule 14 (instruction -> ifSt .)
    PRINTLN         reduce using rule 14 (instruction -> ifSt .)
    ID              reduce using rule 14 (instruction -> ifSt .)
    GLOBAL          reduce using rule 14 (instruction -> ifSt .)
    LOCAL           reduce using rule 14 (instruction -> ifSt .)
    FUNCTION        reduce using rule 14 (instruction -> ifSt .)
    RIF             reduce using rule 14 (instruction -> ifSt .)
    RWHILE          reduce using rule 14 (instruction -> ifSt .)
    RFOR            reduce using rule 14 (instruction -> ifSt .)
    RRETURN         reduce using rule 14 (instruction -> ifSt .)
    RBREAK          reduce using rule 14 (instruction -> ifSt .)
    RCONTINUE       reduce using rule 14 (instruction -> ifSt .)
    RPUSH           reduce using rule 14 (instruction -> ifSt .)
    RPOP            reduce using rule 14 (instruction -> ifSt .)
    $end            reduce using rule 14 (instruction -> ifSt .)


state 11

    (15) instruction -> whileSt .

    PRINT           reduce using rule 15 (instruction -> whileSt .)
    PRINTLN         reduce using rule 15 (instruction -> whileSt .)
    ID              reduce using rule 15 (instruction -> whileSt .)
    GLOBAL          reduce using rule 15 (instruction -> whileSt .)
    LOCAL           reduce using rule 15 (instruction -> whileSt .)
    FUNCTION        reduce using rule 15 (instruction -> whileSt .)
    RIF             reduce using rule 15 (instruction -> whileSt .)
    RWHILE          reduce using rule 15 (instruction -> whileSt .)
    RFOR            reduce using rule 15 (instruction -> whileSt .)
    RRETURN         reduce using rule 15 (instruction -> whileSt .)
    RBREAK          reduce using rule 15 (instruction -> whileSt .)
    RCONTINUE       reduce using rule 15 (instruction -> whileSt .)
    RPUSH           reduce using rule 15 (instruction -> whileSt .)
    RPOP            reduce using rule 15 (instruction -> whileSt .)
    $end            reduce using rule 15 (instruction -> whileSt .)


state 12

    (16) instruction -> forSt .

    PRINT           reduce using rule 16 (instruction -> forSt .)
    PRINTLN         reduce using rule 16 (instruction -> forSt .)
    ID              reduce using rule 16 (instruction -> forSt .)
    GLOBAL          reduce using rule 16 (instruction -> forSt .)
    LOCAL           reduce using rule 16 (instruction -> forSt .)
    FUNCTION        reduce using rule 16 (instruction -> forSt .)
    RIF             reduce using rule 16 (instruction -> forSt .)
    RWHILE          reduce using rule 16 (instruction -> forSt .)
    RFOR            reduce using rule 16 (instruction -> forSt .)
    RRETURN         reduce using rule 16 (instruction -> forSt .)
    RBREAK          reduce using rule 16 (instruction -> forSt .)
    RCONTINUE       reduce using rule 16 (instruction -> forSt .)
    RPUSH           reduce using rule 16 (instruction -> forSt .)
    RPOP            reduce using rule 16 (instruction -> forSt .)
    $end            reduce using rule 16 (instruction -> forSt .)


state 13

    (17) instruction -> returnST .

    PRINT           reduce using rule 17 (instruction -> returnST .)
    PRINTLN         reduce using rule 17 (instruction -> returnST .)
    ID              reduce using rule 17 (instruction -> returnST .)
    GLOBAL          reduce using rule 17 (instruction -> returnST .)
    LOCAL           reduce using rule 17 (instruction -> returnST .)
    FUNCTION        reduce using rule 17 (instruction -> returnST .)
    RIF             reduce using rule 17 (instruction -> returnST .)
    RWHILE          reduce using rule 17 (instruction -> returnST .)
    RFOR            reduce using rule 17 (instruction -> returnST .)
    RRETURN         reduce using rule 17 (instruction -> returnST .)
    RBREAK          reduce using rule 17 (instruction -> returnST .)
    RCONTINUE       reduce using rule 17 (instruction -> returnST .)
    RPUSH           reduce using rule 17 (instruction -> returnST .)
    RPOP            reduce using rule 17 (instruction -> returnST .)
    $end            reduce using rule 17 (instruction -> returnST .)


state 14

    (18) instruction -> breakST .

    PRINT           reduce using rule 18 (instruction -> breakST .)
    PRINTLN         reduce using rule 18 (instruction -> breakST .)
    ID              reduce using rule 18 (instruction -> breakST .)
    GLOBAL          reduce using rule 18 (instruction -> breakST .)
    LOCAL           reduce using rule 18 (instruction -> breakST .)
    FUNCTION        reduce using rule 18 (instruction -> breakST .)
    RIF             reduce using rule 18 (instruction -> breakST .)
    RWHILE          reduce using rule 18 (instruction -> breakST .)
    RFOR            reduce using rule 18 (instruction -> breakST .)
    RRETURN         reduce using rule 18 (instruction -> breakST .)
    RBREAK          reduce using rule 18 (instruction -> breakST .)
    RCONTINUE       reduce using rule 18 (instruction -> breakST .)
    RPUSH           reduce using rule 18 (instruction -> breakST .)
    RPOP            reduce using rule 18 (instruction -> breakST .)
    $end            reduce using rule 18 (instruction -> breakST .)


state 15

    (19) instruction -> continueST .

    PRINT           reduce using rule 19 (instruction -> continueST .)
    PRINTLN         reduce using rule 19 (instruction -> continueST .)
    ID              reduce using rule 19 (instruction -> continueST .)
    GLOBAL          reduce using rule 19 (instruction -> continueST .)
    LOCAL           reduce using rule 19 (instruction -> continueST .)
    FUNCTION        reduce using rule 19 (instruction -> continueST .)
    RIF             reduce using rule 19 (instruction -> continueST .)
    RWHILE          reduce using rule 19 (instruction -> continueST .)
    RFOR            reduce using rule 19 (instruction -> continueST .)
    RRETURN         reduce using rule 19 (instruction -> continueST .)
    RBREAK          reduce using rule 19 (instruction -> continueST .)
    RCONTINUE       reduce using rule 19 (instruction -> continueST .)
    RPUSH           reduce using rule 19 (instruction -> continueST .)
    RPOP            reduce using rule 19 (instruction -> continueST .)
    $end            reduce using rule 19 (instruction -> continueST .)


state 16

    (20) instruction -> push .

    PRINT           reduce using rule 20 (instruction -> push .)
    PRINTLN         reduce using rule 20 (instruction -> push .)
    ID              reduce using rule 20 (instruction -> push .)
    GLOBAL          reduce using rule 20 (instruction -> push .)
    LOCAL           reduce using rule 20 (instruction -> push .)
    FUNCTION        reduce using rule 20 (instruction -> push .)
    RIF             reduce using rule 20 (instruction -> push .)
    RWHILE          reduce using rule 20 (instruction -> push .)
    RFOR            reduce using rule 20 (instruction -> push .)
    RRETURN         reduce using rule 20 (instruction -> push .)
    RBREAK          reduce using rule 20 (instruction -> push .)
    RCONTINUE       reduce using rule 20 (instruction -> push .)
    RPUSH           reduce using rule 20 (instruction -> push .)
    RPOP            reduce using rule 20 (instruction -> push .)
    $end            reduce using rule 20 (instruction -> push .)


state 17

    (21) instruction -> pop .

    PRINT           reduce using rule 21 (instruction -> pop .)
    PRINTLN         reduce using rule 21 (instruction -> pop .)
    ID              reduce using rule 21 (instruction -> pop .)
    GLOBAL          reduce using rule 21 (instruction -> pop .)
    LOCAL           reduce using rule 21 (instruction -> pop .)
    FUNCTION        reduce using rule 21 (instruction -> pop .)
    RIF             reduce using rule 21 (instruction -> pop .)
    RWHILE          reduce using rule 21 (instruction -> pop .)
    RFOR            reduce using rule 21 (instruction -> pop .)
    RRETURN         reduce using rule 21 (instruction -> pop .)
    RBREAK          reduce using rule 21 (instruction -> pop .)
    RCONTINUE       reduce using rule 21 (instruction -> pop .)
    RPUSH           reduce using rule 21 (instruction -> pop .)
    RPOP            reduce using rule 21 (instruction -> pop .)
    $end            reduce using rule 21 (instruction -> pop .)


state 18

    (48) p_print -> PRINT . PARIZQ exps PARDER PTCOMA
    (49) p_print -> PRINT . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 33


state 19

    (50) p_println -> PRINTLN . PARIZQ exps PARDER PTCOMA
    (51) p_println -> PRINTLN . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 34


state 20

    (54) declaration -> ID . IGUAL exp PTCOMA
    (55) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (62) declaration -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (63) declaration -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (96) assignmentA -> ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (97) assignmentA -> ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (102) assignmentA -> ID . listArray2 IGUAL exp PTCOMA
    (103) assignmentA -> ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (140) callFuncSt -> ID . parametersCallFunc PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER
    (141) parametersCallFunc -> . PARIZQ listValues PARDER
    (142) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 35
    CORIZQ          shift and go to state 36
    PARIZQ          shift and go to state 39

    listArray2                     shift and go to state 37
    parametersCallFunc             shift and go to state 38

state 21

    (56) declaration -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (57) declaration -> GLOBAL . ID IGUAL exp PTCOMA
    (58) declaration -> GLOBAL . ID PTCOMA
    (64) declaration -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (98) assignmentA -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (104) assignmentA -> GLOBAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> GLOBAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 40


state 22

    (59) declaration -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declaration -> LOCAL . ID IGUAL exp PTCOMA
    (61) declaration -> LOCAL . ID PTCOMA
    (66) declaration -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentA -> LOCAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> LOCAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 41


state 23

    (132) function -> FUNCTION . ID parametersFunc DOSPT DOSPT typeDef blockf
    (133) function -> FUNCTION . ID parametersFunc blockf

    ID              shift and go to state 42


state 24

    (145) ifSt -> RIF . exp END PTCOMA
    (146) ifSt -> RIF . exp blockiff END PTCOMA
    (147) ifSt -> RIF . exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> RIF . exp blockiff RELSE END PTCOMA
    (149) ifSt -> RIF . exp blockiff elseifSt END PTCOMA
    (150) ifSt -> RIF . exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> RIF . exp blockiff elseifSt RELSE END PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 43

state 25

    (167) whileSt -> RWHILE . exp blockc
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 72

state 26

    (168) forSt -> RFOR . parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> RFOR . parameterFor RIN exp blockc
    (170) parameterFor -> . ID DOSPT DOSPT typeDef
    (171) parameterFor -> . ID

    ID              shift and go to state 74

    parameterFor                   shift and go to state 73

state 27

    (178) returnST -> RRETURN . exp PTCOMA
    (179) returnST -> RRETURN . PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    PTCOMA          shift and go to state 76
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 75

state 28

    (180) breakST -> RBREAK . PTCOMA

    PTCOMA          shift and go to state 77


state 29

    (181) continueST -> RCONTINUE . PTCOMA

    PTCOMA          shift and go to state 78


state 30

    (225) push -> RPUSH . NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> RPUSH . NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> RPUSH . NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> RPUSH . NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> RPUSH . NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> RPUSH . NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA

    NOTT            shift and go to state 79


state 31

    (231) pop -> RPOP . NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> RPOP . NOTT PARIZQ ID listArray2 PARDER PTCOMA

    NOTT            shift and go to state 80


state 32

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    GLOBAL          reduce using rule 2 (instructions -> instructions instruction .)
    LOCAL           reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    RFOR            reduce using rule 2 (instructions -> instructions instruction .)
    RRETURN         reduce using rule 2 (instructions -> instructions instruction .)
    RBREAK          reduce using rule 2 (instructions -> instructions instruction .)
    RCONTINUE       reduce using rule 2 (instructions -> instructions instruction .)
    RPUSH           reduce using rule 2 (instructions -> instructions instruction .)
    RPOP            reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 33

    (48) p_print -> PRINT PARIZQ . exps PARDER PTCOMA
    (49) p_print -> PRINT PARIZQ . PARDER PTCOMA
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 82
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 81
    exp                            shift and go to state 83

state 34

    (50) p_println -> PRINTLN PARIZQ . exps PARDER PTCOMA
    (51) p_println -> PRINTLN PARIZQ . PARDER PTCOMA
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 85
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 84
    exp                            shift and go to state 83

state 35

    (54) declaration -> ID IGUAL . exp PTCOMA
    (55) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (62) declaration -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (63) declaration -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 87
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 86

state 36

    (185) listArray2 -> CORIZQ . exp CORDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 88

state 37

    (96) assignmentA -> ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (97) assignmentA -> ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (102) assignmentA -> ID listArray2 . IGUAL exp PTCOMA
    (103) assignmentA -> ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 89
    CORIZQ          shift and go to state 90


state 38

    (140) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 91


state 39

    (141) parametersCallFunc -> PARIZQ . listValues PARDER
    (142) parametersCallFunc -> PARIZQ . PARDER
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 93
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    listValues                     shift and go to state 92
    exp                            shift and go to state 94

state 40

    (56) declaration -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (57) declaration -> GLOBAL ID . IGUAL exp PTCOMA
    (58) declaration -> GLOBAL ID . PTCOMA
    (64) declaration -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (98) assignmentA -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (104) assignmentA -> GLOBAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> GLOBAL ID . listArray2 IGUAL exp PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 95
    PTCOMA          shift and go to state 96
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 97

state 41

    (59) declaration -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declaration -> LOCAL ID . IGUAL exp PTCOMA
    (61) declaration -> LOCAL ID . PTCOMA
    (66) declaration -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (100) assignmentA -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentA -> LOCAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> LOCAL ID . listArray2 IGUAL exp PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 98
    PTCOMA          shift and go to state 99
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 100

state 42

    (132) function -> FUNCTION ID . parametersFunc DOSPT DOSPT typeDef blockf
    (133) function -> FUNCTION ID . parametersFunc blockf
    (134) parametersFunc -> . PARIZQ parameters PARDER
    (135) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 102

    parametersFunc                 shift and go to state 101

state 43

    (145) ifSt -> RIF exp . END PTCOMA
    (146) ifSt -> RIF exp . blockiff END PTCOMA
    (147) ifSt -> RIF exp . blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> RIF exp . blockiff RELSE END PTCOMA
    (149) ifSt -> RIF exp . blockiff elseifSt END PTCOMA
    (150) ifSt -> RIF exp . blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> RIF exp . blockiff elseifSt RELSE END PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (176) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 103
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockiff                       shift and go to state 104
    instructionsf                  shift and go to state 119
    instructionf                   shift and go to state 120
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 44

    (192) exp -> MENOS . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 137

state 45

    (201) exp -> NOTT . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 138

state 46

    (202) exp -> ID . parametersCallFunc
    (252) exp -> ID .
    (253) exp -> ID . listArray
    (141) parametersCallFunc -> . PARIZQ listValues PARDER
    (142) parametersCallFunc -> . PARIZQ PARDER
    (182) listArray -> . listArray CORIZQ exp CORDER
    (183) listArray -> . CORIZQ exp CORDER

    END             reduce using rule 252 (exp -> ID .)
    MAS             reduce using rule 252 (exp -> ID .)
    MENOS           reduce using rule 252 (exp -> ID .)
    MULTIPLICACION  reduce using rule 252 (exp -> ID .)
    DIVISION        reduce using rule 252 (exp -> ID .)
    POTENCIA        reduce using rule 252 (exp -> ID .)
    MODULO          reduce using rule 252 (exp -> ID .)
    IGUALIGUAL      reduce using rule 252 (exp -> ID .)
    DISTINTO        reduce using rule 252 (exp -> ID .)
    MAYOR           reduce using rule 252 (exp -> ID .)
    MENOR           reduce using rule 252 (exp -> ID .)
    MAYORIGUAL      reduce using rule 252 (exp -> ID .)
    MENORIGUAL      reduce using rule 252 (exp -> ID .)
    ANDD            reduce using rule 252 (exp -> ID .)
    ORR             reduce using rule 252 (exp -> ID .)
    PRINT           reduce using rule 252 (exp -> ID .)
    PRINTLN         reduce using rule 252 (exp -> ID .)
    ID              reduce using rule 252 (exp -> ID .)
    GLOBAL          reduce using rule 252 (exp -> ID .)
    LOCAL           reduce using rule 252 (exp -> ID .)
    RIF             reduce using rule 252 (exp -> ID .)
    RWHILE          reduce using rule 252 (exp -> ID .)
    RFOR            reduce using rule 252 (exp -> ID .)
    RRETURN         reduce using rule 252 (exp -> ID .)
    RBREAK          reduce using rule 252 (exp -> ID .)
    RCONTINUE       reduce using rule 252 (exp -> ID .)
    RPUSH           reduce using rule 252 (exp -> ID .)
    RPOP            reduce using rule 252 (exp -> ID .)
    PTCOMA          reduce using rule 252 (exp -> ID .)
    PARDER          reduce using rule 252 (exp -> ID .)
    COMA            reduce using rule 252 (exp -> ID .)
    DOSPT           reduce using rule 252 (exp -> ID .)
    CORDER          reduce using rule 252 (exp -> ID .)
    RELSE           reduce using rule 252 (exp -> ID .)
    RELSEIF         reduce using rule 252 (exp -> ID .)
    PARIZQ          shift and go to state 39
    CORIZQ          shift and go to state 141

    parametersCallFunc             shift and go to state 139
    listArray                      shift and go to state 140

state 47

    (203) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 142


state 48

    (244) exp -> PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 143

state 49

    (204) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 144


state 50

    (205) exp -> LOG . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 145


state 51

    (206) exp -> LOG10 . PARIZQ exp PARDER

    PARIZQ          shift and go to state 146


state 52

    (207) exp -> SIN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 147


state 53

    (208) exp -> COS . PARIZQ exp PARDER

    PARIZQ          shift and go to state 148


state 54

    (209) exp -> TAN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 149


state 55

    (210) exp -> SQRT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 150


state 56

    (211) exp -> PARSE . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 151


state 57

    (212) exp -> TRUNC . PARIZQ typeDef COMA exp PARDER
    (213) exp -> TRUNC . PARIZQ exp PARDER

    PARIZQ          shift and go to state 152


state 58

    (214) exp -> MFLOAT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 153


state 59

    (215) exp -> MSTRING . PARIZQ exp PARDER

    PARIZQ          shift and go to state 154


state 60

    (216) exp -> TYPEOF . PARIZQ exp PARDER

    PARIZQ          shift and go to state 155


state 61

    (217) exp -> RPUSH . NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> RPUSH . NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> RPUSH . NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> RPUSH . NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> RPUSH . NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> RPUSH . NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER

    NOTT            shift and go to state 156


state 62

    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    listValues                     shift and go to state 157
    exp                            shift and go to state 94

state 63

    (223) exp -> RPOP . NOTT PARIZQ ID PARDER
    (224) exp -> RPOP . NOTT PARIZQ ID listArray2 PARDER

    NOTT            shift and go to state 159


state 64

    (233) exp -> RLENGTH . PARIZQ exp PARDER

    PARIZQ          shift and go to state 160


state 65

    (245) exp -> ENTERO .

    END             reduce using rule 245 (exp -> ENTERO .)
    MAS             reduce using rule 245 (exp -> ENTERO .)
    MENOS           reduce using rule 245 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 245 (exp -> ENTERO .)
    DIVISION        reduce using rule 245 (exp -> ENTERO .)
    POTENCIA        reduce using rule 245 (exp -> ENTERO .)
    MODULO          reduce using rule 245 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 245 (exp -> ENTERO .)
    DISTINTO        reduce using rule 245 (exp -> ENTERO .)
    MAYOR           reduce using rule 245 (exp -> ENTERO .)
    MENOR           reduce using rule 245 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 245 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 245 (exp -> ENTERO .)
    ANDD            reduce using rule 245 (exp -> ENTERO .)
    ORR             reduce using rule 245 (exp -> ENTERO .)
    PRINT           reduce using rule 245 (exp -> ENTERO .)
    PRINTLN         reduce using rule 245 (exp -> ENTERO .)
    ID              reduce using rule 245 (exp -> ENTERO .)
    GLOBAL          reduce using rule 245 (exp -> ENTERO .)
    LOCAL           reduce using rule 245 (exp -> ENTERO .)
    RIF             reduce using rule 245 (exp -> ENTERO .)
    RWHILE          reduce using rule 245 (exp -> ENTERO .)
    RFOR            reduce using rule 245 (exp -> ENTERO .)
    RRETURN         reduce using rule 245 (exp -> ENTERO .)
    RBREAK          reduce using rule 245 (exp -> ENTERO .)
    RCONTINUE       reduce using rule 245 (exp -> ENTERO .)
    RPUSH           reduce using rule 245 (exp -> ENTERO .)
    RPOP            reduce using rule 245 (exp -> ENTERO .)
    PTCOMA          reduce using rule 245 (exp -> ENTERO .)
    PARDER          reduce using rule 245 (exp -> ENTERO .)
    COMA            reduce using rule 245 (exp -> ENTERO .)
    DOSPT           reduce using rule 245 (exp -> ENTERO .)
    CORDER          reduce using rule 245 (exp -> ENTERO .)
    RELSE           reduce using rule 245 (exp -> ENTERO .)
    RELSEIF         reduce using rule 245 (exp -> ENTERO .)


state 66

    (246) exp -> DECIMAL .

    END             reduce using rule 246 (exp -> DECIMAL .)
    MAS             reduce using rule 246 (exp -> DECIMAL .)
    MENOS           reduce using rule 246 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 246 (exp -> DECIMAL .)
    DIVISION        reduce using rule 246 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 246 (exp -> DECIMAL .)
    MODULO          reduce using rule 246 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 246 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 246 (exp -> DECIMAL .)
    MAYOR           reduce using rule 246 (exp -> DECIMAL .)
    MENOR           reduce using rule 246 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 246 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 246 (exp -> DECIMAL .)
    ANDD            reduce using rule 246 (exp -> DECIMAL .)
    ORR             reduce using rule 246 (exp -> DECIMAL .)
    PRINT           reduce using rule 246 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 246 (exp -> DECIMAL .)
    ID              reduce using rule 246 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 246 (exp -> DECIMAL .)
    LOCAL           reduce using rule 246 (exp -> DECIMAL .)
    RIF             reduce using rule 246 (exp -> DECIMAL .)
    RWHILE          reduce using rule 246 (exp -> DECIMAL .)
    RFOR            reduce using rule 246 (exp -> DECIMAL .)
    RRETURN         reduce using rule 246 (exp -> DECIMAL .)
    RBREAK          reduce using rule 246 (exp -> DECIMAL .)
    RCONTINUE       reduce using rule 246 (exp -> DECIMAL .)
    RPUSH           reduce using rule 246 (exp -> DECIMAL .)
    RPOP            reduce using rule 246 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 246 (exp -> DECIMAL .)
    PARDER          reduce using rule 246 (exp -> DECIMAL .)
    COMA            reduce using rule 246 (exp -> DECIMAL .)
    DOSPT           reduce using rule 246 (exp -> DECIMAL .)
    CORDER          reduce using rule 246 (exp -> DECIMAL .)
    RELSE           reduce using rule 246 (exp -> DECIMAL .)
    RELSEIF         reduce using rule 246 (exp -> DECIMAL .)


state 67

    (247) exp -> STRING .

    END             reduce using rule 247 (exp -> STRING .)
    MAS             reduce using rule 247 (exp -> STRING .)
    MENOS           reduce using rule 247 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 247 (exp -> STRING .)
    DIVISION        reduce using rule 247 (exp -> STRING .)
    POTENCIA        reduce using rule 247 (exp -> STRING .)
    MODULO          reduce using rule 247 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 247 (exp -> STRING .)
    DISTINTO        reduce using rule 247 (exp -> STRING .)
    MAYOR           reduce using rule 247 (exp -> STRING .)
    MENOR           reduce using rule 247 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 247 (exp -> STRING .)
    MENORIGUAL      reduce using rule 247 (exp -> STRING .)
    ANDD            reduce using rule 247 (exp -> STRING .)
    ORR             reduce using rule 247 (exp -> STRING .)
    PRINT           reduce using rule 247 (exp -> STRING .)
    PRINTLN         reduce using rule 247 (exp -> STRING .)
    ID              reduce using rule 247 (exp -> STRING .)
    GLOBAL          reduce using rule 247 (exp -> STRING .)
    LOCAL           reduce using rule 247 (exp -> STRING .)
    RIF             reduce using rule 247 (exp -> STRING .)
    RWHILE          reduce using rule 247 (exp -> STRING .)
    RFOR            reduce using rule 247 (exp -> STRING .)
    RRETURN         reduce using rule 247 (exp -> STRING .)
    RBREAK          reduce using rule 247 (exp -> STRING .)
    RCONTINUE       reduce using rule 247 (exp -> STRING .)
    RPUSH           reduce using rule 247 (exp -> STRING .)
    RPOP            reduce using rule 247 (exp -> STRING .)
    PTCOMA          reduce using rule 247 (exp -> STRING .)
    PARDER          reduce using rule 247 (exp -> STRING .)
    COMA            reduce using rule 247 (exp -> STRING .)
    DOSPT           reduce using rule 247 (exp -> STRING .)
    CORDER          reduce using rule 247 (exp -> STRING .)
    RELSE           reduce using rule 247 (exp -> STRING .)
    RELSEIF         reduce using rule 247 (exp -> STRING .)


state 68

    (248) exp -> CHAR .

    END             reduce using rule 248 (exp -> CHAR .)
    MAS             reduce using rule 248 (exp -> CHAR .)
    MENOS           reduce using rule 248 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 248 (exp -> CHAR .)
    DIVISION        reduce using rule 248 (exp -> CHAR .)
    POTENCIA        reduce using rule 248 (exp -> CHAR .)
    MODULO          reduce using rule 248 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 248 (exp -> CHAR .)
    DISTINTO        reduce using rule 248 (exp -> CHAR .)
    MAYOR           reduce using rule 248 (exp -> CHAR .)
    MENOR           reduce using rule 248 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 248 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 248 (exp -> CHAR .)
    ANDD            reduce using rule 248 (exp -> CHAR .)
    ORR             reduce using rule 248 (exp -> CHAR .)
    PRINT           reduce using rule 248 (exp -> CHAR .)
    PRINTLN         reduce using rule 248 (exp -> CHAR .)
    ID              reduce using rule 248 (exp -> CHAR .)
    GLOBAL          reduce using rule 248 (exp -> CHAR .)
    LOCAL           reduce using rule 248 (exp -> CHAR .)
    RIF             reduce using rule 248 (exp -> CHAR .)
    RWHILE          reduce using rule 248 (exp -> CHAR .)
    RFOR            reduce using rule 248 (exp -> CHAR .)
    RRETURN         reduce using rule 248 (exp -> CHAR .)
    RBREAK          reduce using rule 248 (exp -> CHAR .)
    RCONTINUE       reduce using rule 248 (exp -> CHAR .)
    RPUSH           reduce using rule 248 (exp -> CHAR .)
    RPOP            reduce using rule 248 (exp -> CHAR .)
    PTCOMA          reduce using rule 248 (exp -> CHAR .)
    PARDER          reduce using rule 248 (exp -> CHAR .)
    COMA            reduce using rule 248 (exp -> CHAR .)
    DOSPT           reduce using rule 248 (exp -> CHAR .)
    CORDER          reduce using rule 248 (exp -> CHAR .)
    RELSE           reduce using rule 248 (exp -> CHAR .)
    RELSEIF         reduce using rule 248 (exp -> CHAR .)


state 69

    (249) exp -> VERDADERO .

    END             reduce using rule 249 (exp -> VERDADERO .)
    MAS             reduce using rule 249 (exp -> VERDADERO .)
    MENOS           reduce using rule 249 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 249 (exp -> VERDADERO .)
    DIVISION        reduce using rule 249 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 249 (exp -> VERDADERO .)
    MODULO          reduce using rule 249 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 249 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 249 (exp -> VERDADERO .)
    MAYOR           reduce using rule 249 (exp -> VERDADERO .)
    MENOR           reduce using rule 249 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 249 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 249 (exp -> VERDADERO .)
    ANDD            reduce using rule 249 (exp -> VERDADERO .)
    ORR             reduce using rule 249 (exp -> VERDADERO .)
    PRINT           reduce using rule 249 (exp -> VERDADERO .)
    PRINTLN         reduce using rule 249 (exp -> VERDADERO .)
    ID              reduce using rule 249 (exp -> VERDADERO .)
    GLOBAL          reduce using rule 249 (exp -> VERDADERO .)
    LOCAL           reduce using rule 249 (exp -> VERDADERO .)
    RIF             reduce using rule 249 (exp -> VERDADERO .)
    RWHILE          reduce using rule 249 (exp -> VERDADERO .)
    RFOR            reduce using rule 249 (exp -> VERDADERO .)
    RRETURN         reduce using rule 249 (exp -> VERDADERO .)
    RBREAK          reduce using rule 249 (exp -> VERDADERO .)
    RCONTINUE       reduce using rule 249 (exp -> VERDADERO .)
    RPUSH           reduce using rule 249 (exp -> VERDADERO .)
    RPOP            reduce using rule 249 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 249 (exp -> VERDADERO .)
    PARDER          reduce using rule 249 (exp -> VERDADERO .)
    COMA            reduce using rule 249 (exp -> VERDADERO .)
    DOSPT           reduce using rule 249 (exp -> VERDADERO .)
    CORDER          reduce using rule 249 (exp -> VERDADERO .)
    RELSE           reduce using rule 249 (exp -> VERDADERO .)
    RELSEIF         reduce using rule 249 (exp -> VERDADERO .)


state 70

    (250) exp -> FALSO .

    END             reduce using rule 250 (exp -> FALSO .)
    MAS             reduce using rule 250 (exp -> FALSO .)
    MENOS           reduce using rule 250 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 250 (exp -> FALSO .)
    DIVISION        reduce using rule 250 (exp -> FALSO .)
    POTENCIA        reduce using rule 250 (exp -> FALSO .)
    MODULO          reduce using rule 250 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 250 (exp -> FALSO .)
    DISTINTO        reduce using rule 250 (exp -> FALSO .)
    MAYOR           reduce using rule 250 (exp -> FALSO .)
    MENOR           reduce using rule 250 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 250 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 250 (exp -> FALSO .)
    ANDD            reduce using rule 250 (exp -> FALSO .)
    ORR             reduce using rule 250 (exp -> FALSO .)
    PRINT           reduce using rule 250 (exp -> FALSO .)
    PRINTLN         reduce using rule 250 (exp -> FALSO .)
    ID              reduce using rule 250 (exp -> FALSO .)
    GLOBAL          reduce using rule 250 (exp -> FALSO .)
    LOCAL           reduce using rule 250 (exp -> FALSO .)
    RIF             reduce using rule 250 (exp -> FALSO .)
    RWHILE          reduce using rule 250 (exp -> FALSO .)
    RFOR            reduce using rule 250 (exp -> FALSO .)
    RRETURN         reduce using rule 250 (exp -> FALSO .)
    RBREAK          reduce using rule 250 (exp -> FALSO .)
    RCONTINUE       reduce using rule 250 (exp -> FALSO .)
    RPUSH           reduce using rule 250 (exp -> FALSO .)
    RPOP            reduce using rule 250 (exp -> FALSO .)
    PTCOMA          reduce using rule 250 (exp -> FALSO .)
    PARDER          reduce using rule 250 (exp -> FALSO .)
    COMA            reduce using rule 250 (exp -> FALSO .)
    DOSPT           reduce using rule 250 (exp -> FALSO .)
    CORDER          reduce using rule 250 (exp -> FALSO .)
    RELSE           reduce using rule 250 (exp -> FALSO .)
    RELSEIF         reduce using rule 250 (exp -> FALSO .)


state 71

    (251) exp -> NULO .

    END             reduce using rule 251 (exp -> NULO .)
    MAS             reduce using rule 251 (exp -> NULO .)
    MENOS           reduce using rule 251 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 251 (exp -> NULO .)
    DIVISION        reduce using rule 251 (exp -> NULO .)
    POTENCIA        reduce using rule 251 (exp -> NULO .)
    MODULO          reduce using rule 251 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 251 (exp -> NULO .)
    DISTINTO        reduce using rule 251 (exp -> NULO .)
    MAYOR           reduce using rule 251 (exp -> NULO .)
    MENOR           reduce using rule 251 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 251 (exp -> NULO .)
    MENORIGUAL      reduce using rule 251 (exp -> NULO .)
    ANDD            reduce using rule 251 (exp -> NULO .)
    ORR             reduce using rule 251 (exp -> NULO .)
    PRINT           reduce using rule 251 (exp -> NULO .)
    PRINTLN         reduce using rule 251 (exp -> NULO .)
    ID              reduce using rule 251 (exp -> NULO .)
    GLOBAL          reduce using rule 251 (exp -> NULO .)
    LOCAL           reduce using rule 251 (exp -> NULO .)
    RIF             reduce using rule 251 (exp -> NULO .)
    RWHILE          reduce using rule 251 (exp -> NULO .)
    RFOR            reduce using rule 251 (exp -> NULO .)
    RRETURN         reduce using rule 251 (exp -> NULO .)
    RBREAK          reduce using rule 251 (exp -> NULO .)
    RCONTINUE       reduce using rule 251 (exp -> NULO .)
    RPUSH           reduce using rule 251 (exp -> NULO .)
    RPOP            reduce using rule 251 (exp -> NULO .)
    PTCOMA          reduce using rule 251 (exp -> NULO .)
    PARDER          reduce using rule 251 (exp -> NULO .)
    COMA            reduce using rule 251 (exp -> NULO .)
    DOSPT           reduce using rule 251 (exp -> NULO .)
    CORDER          reduce using rule 251 (exp -> NULO .)
    RELSE           reduce using rule 251 (exp -> NULO .)
    RELSEIF         reduce using rule 251 (exp -> NULO .)


state 72

    (167) whileSt -> RWHILE exp . blockc
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (174) blockc -> . instructionsc END PTCOMA
    (175) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    END             shift and go to state 163
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockc                         shift and go to state 161
    instructionsc                  shift and go to state 162
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 73

    (168) forSt -> RFOR parameterFor . RIN exp DOSPT exp blockc
    (169) forSt -> RFOR parameterFor . RIN exp blockc

    RIN             shift and go to state 182


state 74

    (170) parameterFor -> ID . DOSPT DOSPT typeDef
    (171) parameterFor -> ID .

    DOSPT           shift and go to state 183
    RIN             reduce using rule 171 (parameterFor -> ID .)


state 75

    (178) returnST -> RRETURN exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 184
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 76

    (179) returnST -> RRETURN PTCOMA .

    PRINT           reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    PRINTLN         reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    ID              reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    GLOBAL          reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    LOCAL           reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    FUNCTION        reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RIF             reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RWHILE          reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RFOR            reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RRETURN         reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RBREAK          reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RCONTINUE       reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RPUSH           reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RPOP            reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    $end            reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    END             reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RELSE           reduce using rule 179 (returnST -> RRETURN PTCOMA .)
    RELSEIF         reduce using rule 179 (returnST -> RRETURN PTCOMA .)


state 77

    (180) breakST -> RBREAK PTCOMA .

    PRINT           reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    PRINTLN         reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    ID              reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    GLOBAL          reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    LOCAL           reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    FUNCTION        reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RIF             reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RWHILE          reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RFOR            reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RRETURN         reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RBREAK          reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RCONTINUE       reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RPUSH           reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RPOP            reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    $end            reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    END             reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RELSE           reduce using rule 180 (breakST -> RBREAK PTCOMA .)
    RELSEIF         reduce using rule 180 (breakST -> RBREAK PTCOMA .)


state 78

    (181) continueST -> RCONTINUE PTCOMA .

    PRINT           reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    PRINTLN         reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    ID              reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    GLOBAL          reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    LOCAL           reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    FUNCTION        reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RIF             reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RWHILE          reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RFOR            reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RRETURN         reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RBREAK          reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RCONTINUE       reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RPUSH           reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RPOP            reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    $end            reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    END             reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RELSE           reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)
    RELSEIF         reduce using rule 181 (continueST -> RCONTINUE PTCOMA .)


state 79

    (225) push -> RPUSH NOTT . PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> RPUSH NOTT . PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> RPUSH NOTT . PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> RPUSH NOTT . PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> RPUSH NOTT . PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> RPUSH NOTT . PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA

    PARIZQ          shift and go to state 185


state 80

    (231) pop -> RPOP NOTT . PARIZQ ID PARDER PTCOMA
    (232) pop -> RPOP NOTT . PARIZQ ID listArray2 PARDER PTCOMA

    PARIZQ          shift and go to state 186


state 81

    (48) p_print -> PRINT PARIZQ exps . PARDER PTCOMA
    (52) exps -> exps . COMA exp

    PARDER          shift and go to state 187
    COMA            shift and go to state 188


state 82

    (49) p_print -> PRINT PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 189


state 83

    (53) exps -> exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          reduce using rule 53 (exps -> exp .)
    COMA            reduce using rule 53 (exps -> exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 84

    (50) p_println -> PRINTLN PARIZQ exps . PARDER PTCOMA
    (52) exps -> exps . COMA exp

    PARDER          shift and go to state 190
    COMA            shift and go to state 188


state 85

    (51) p_println -> PRINTLN PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 191


state 86

    (54) declaration -> ID IGUAL exp . PTCOMA
    (55) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 192
    DOSPT           shift and go to state 193
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 87

    (62) declaration -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (63) declaration -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 194
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 88

    (185) listArray2 -> CORIZQ exp . CORDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    CORDER          shift and go to state 196
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 89

    (96) assignmentA -> ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (97) assignmentA -> ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (102) assignmentA -> ID listArray2 IGUAL . exp PTCOMA
    (103) assignmentA -> ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 197
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 198

state 90

    (184) listArray2 -> listArray2 CORIZQ . exp CORDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 199

state 91

    (140) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    GLOBAL          reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    LOCAL           reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RFOR            reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RRETURN         reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RBREAK          reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RCONTINUE       reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RPUSH           reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RPOP            reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSE           reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSEIF         reduce using rule 140 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 92

    (141) parametersCallFunc -> PARIZQ listValues . PARDER
    (143) listValues -> listValues . COMA exp

    PARDER          shift and go to state 200
    COMA            shift and go to state 201


state 93

    (142) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    END             reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MAS             reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MENOS           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MULTIPLICACION  reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    DIVISION        reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    POTENCIA        reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MODULO          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    IGUALIGUAL      reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    DISTINTO        reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MAYOR           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MENOR           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    ANDD            reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    ORR             reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    ID              reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RRETURN         reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RBREAK          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RCONTINUE       reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RPUSH           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RPOP            reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    PARDER          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    COMA            reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    DOSPT           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    CORDER          reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RELSE           reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)
    RELSEIF         reduce using rule 142 (parametersCallFunc -> PARIZQ PARDER .)


state 94

    (144) listValues -> exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          reduce using rule 144 (listValues -> exp .)
    COMA            reduce using rule 144 (listValues -> exp .)
    CORDER          reduce using rule 144 (listValues -> exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 95

    (56) declaration -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (57) declaration -> GLOBAL ID IGUAL . exp PTCOMA
    (64) declaration -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 203
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 202

state 96

    (58) declaration -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    FUNCTION        reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RPUSH           reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    RPOP            reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)
    $end            reduce using rule 58 (declaration -> GLOBAL ID PTCOMA .)


state 97

    (98) assignmentA -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (104) assignmentA -> GLOBAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> GLOBAL ID listArray2 . IGUAL exp PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 204
    CORIZQ          shift and go to state 90


state 98

    (59) declaration -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (60) declaration -> LOCAL ID IGUAL . exp PTCOMA
    (66) declaration -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 206
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 205

state 99

    (61) declaration -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    ID              reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    FUNCTION        reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RPUSH           reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    RPOP            reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)
    $end            reduce using rule 61 (declaration -> LOCAL ID PTCOMA .)


state 100

    (100) assignmentA -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (106) assignmentA -> LOCAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> LOCAL ID listArray2 . IGUAL exp PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 207
    CORIZQ          shift and go to state 90


state 101

    (132) function -> FUNCTION ID parametersFunc . DOSPT DOSPT typeDef blockf
    (133) function -> FUNCTION ID parametersFunc . blockf
    (172) blockf -> . instructionsf END PTCOMA
    (173) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    DOSPT           shift and go to state 208
    END             shift and go to state 211
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockf                         shift and go to state 209
    instructionsf                  shift and go to state 210
    instructionf                   shift and go to state 120
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 102

    (134) parametersFunc -> PARIZQ . parameters PARDER
    (135) parametersFunc -> PARIZQ . PARDER
    (136) parameters -> . parameters COMA parameter
    (137) parameters -> . parameter
    (138) parameter -> . ID DOSPT DOSPT typeDef
    (139) parameter -> . ID

    PARDER          shift and go to state 213
    ID              shift and go to state 215

    parameters                     shift and go to state 212
    parameter                      shift and go to state 214

state 103

    (145) ifSt -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 216


state 104

    (146) ifSt -> RIF exp blockiff . END PTCOMA
    (147) ifSt -> RIF exp blockiff . RELSE blockiff END PTCOMA
    (148) ifSt -> RIF exp blockiff . RELSE END PTCOMA
    (149) ifSt -> RIF exp blockiff . elseifSt END PTCOMA
    (150) ifSt -> RIF exp blockiff . elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> RIF exp blockiff . elseifSt RELSE END PTCOMA
    (152) elseifSt -> . elseifSt conelseif
    (153) elseifSt -> . conelseif
    (154) conelseif -> . RELSEIF exp blockiff
    (155) conelseif -> . RELSEIF exp

    END             shift and go to state 217
    RELSE           shift and go to state 218
    RELSEIF         shift and go to state 221

    elseifSt                       shift and go to state 219
    conelseif                      shift and go to state 220

state 105

    (186) exp -> exp MAS . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 222

state 106

    (187) exp -> exp MENOS . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 223

state 107

    (188) exp -> exp MULTIPLICACION . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 224

state 108

    (189) exp -> exp DIVISION . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 225

state 109

    (190) exp -> exp POTENCIA . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 226

state 110

    (191) exp -> exp MODULO . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 227

state 111

    (193) exp -> exp IGUALIGUAL . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 228

state 112

    (194) exp -> exp DISTINTO . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 229

state 113

    (195) exp -> exp MAYOR . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 230

state 114

    (196) exp -> exp MENOR . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 231

state 115

    (197) exp -> exp MAYORIGUAL . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 232

state 116

    (198) exp -> exp MENORIGUAL . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 233

state 117

    (199) exp -> exp ANDD . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 234

state 118

    (200) exp -> exp ORR . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 235

state 119

    (176) blockiff -> instructionsf .
    (4) instructionsf -> instructionsf . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             reduce using rule 176 (blockiff -> instructionsf .)
    RELSE           reduce using rule 176 (blockiff -> instructionsf .)
    RELSEIF         reduce using rule 176 (blockiff -> instructionsf .)
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    instructionf                   shift and go to state 236
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 120

    (5) instructionsf -> instructionf .

    PRINT           reduce using rule 5 (instructionsf -> instructionf .)
    PRINTLN         reduce using rule 5 (instructionsf -> instructionf .)
    ID              reduce using rule 5 (instructionsf -> instructionf .)
    GLOBAL          reduce using rule 5 (instructionsf -> instructionf .)
    LOCAL           reduce using rule 5 (instructionsf -> instructionf .)
    RIF             reduce using rule 5 (instructionsf -> instructionf .)
    RWHILE          reduce using rule 5 (instructionsf -> instructionf .)
    RFOR            reduce using rule 5 (instructionsf -> instructionf .)
    RRETURN         reduce using rule 5 (instructionsf -> instructionf .)
    RBREAK          reduce using rule 5 (instructionsf -> instructionf .)
    RCONTINUE       reduce using rule 5 (instructionsf -> instructionf .)
    RPUSH           reduce using rule 5 (instructionsf -> instructionf .)
    RPOP            reduce using rule 5 (instructionsf -> instructionf .)
    END             reduce using rule 5 (instructionsf -> instructionf .)
    RELSE           reduce using rule 5 (instructionsf -> instructionf .)
    RELSEIF         reduce using rule 5 (instructionsf -> instructionf .)


state 121

    (22) instructionf -> p_print .

    PRINT           reduce using rule 22 (instructionf -> p_print .)
    PRINTLN         reduce using rule 22 (instructionf -> p_print .)
    ID              reduce using rule 22 (instructionf -> p_print .)
    GLOBAL          reduce using rule 22 (instructionf -> p_print .)
    LOCAL           reduce using rule 22 (instructionf -> p_print .)
    RIF             reduce using rule 22 (instructionf -> p_print .)
    RWHILE          reduce using rule 22 (instructionf -> p_print .)
    RFOR            reduce using rule 22 (instructionf -> p_print .)
    RRETURN         reduce using rule 22 (instructionf -> p_print .)
    RBREAK          reduce using rule 22 (instructionf -> p_print .)
    RCONTINUE       reduce using rule 22 (instructionf -> p_print .)
    RPUSH           reduce using rule 22 (instructionf -> p_print .)
    RPOP            reduce using rule 22 (instructionf -> p_print .)
    END             reduce using rule 22 (instructionf -> p_print .)
    RELSE           reduce using rule 22 (instructionf -> p_print .)
    RELSEIF         reduce using rule 22 (instructionf -> p_print .)


state 122

    (23) instructionf -> p_println .

    PRINT           reduce using rule 23 (instructionf -> p_println .)
    PRINTLN         reduce using rule 23 (instructionf -> p_println .)
    ID              reduce using rule 23 (instructionf -> p_println .)
    GLOBAL          reduce using rule 23 (instructionf -> p_println .)
    LOCAL           reduce using rule 23 (instructionf -> p_println .)
    RIF             reduce using rule 23 (instructionf -> p_println .)
    RWHILE          reduce using rule 23 (instructionf -> p_println .)
    RFOR            reduce using rule 23 (instructionf -> p_println .)
    RRETURN         reduce using rule 23 (instructionf -> p_println .)
    RBREAK          reduce using rule 23 (instructionf -> p_println .)
    RCONTINUE       reduce using rule 23 (instructionf -> p_println .)
    RPUSH           reduce using rule 23 (instructionf -> p_println .)
    RPOP            reduce using rule 23 (instructionf -> p_println .)
    END             reduce using rule 23 (instructionf -> p_println .)
    RELSE           reduce using rule 23 (instructionf -> p_println .)
    RELSEIF         reduce using rule 23 (instructionf -> p_println .)


state 123

    (24) instructionf -> declarationf .

    PRINT           reduce using rule 24 (instructionf -> declarationf .)
    PRINTLN         reduce using rule 24 (instructionf -> declarationf .)
    ID              reduce using rule 24 (instructionf -> declarationf .)
    GLOBAL          reduce using rule 24 (instructionf -> declarationf .)
    LOCAL           reduce using rule 24 (instructionf -> declarationf .)
    RIF             reduce using rule 24 (instructionf -> declarationf .)
    RWHILE          reduce using rule 24 (instructionf -> declarationf .)
    RFOR            reduce using rule 24 (instructionf -> declarationf .)
    RRETURN         reduce using rule 24 (instructionf -> declarationf .)
    RBREAK          reduce using rule 24 (instructionf -> declarationf .)
    RCONTINUE       reduce using rule 24 (instructionf -> declarationf .)
    RPUSH           reduce using rule 24 (instructionf -> declarationf .)
    RPOP            reduce using rule 24 (instructionf -> declarationf .)
    END             reduce using rule 24 (instructionf -> declarationf .)
    RELSE           reduce using rule 24 (instructionf -> declarationf .)
    RELSEIF         reduce using rule 24 (instructionf -> declarationf .)


state 124

    (25) instructionf -> assignmentAf .

    PRINT           reduce using rule 25 (instructionf -> assignmentAf .)
    PRINTLN         reduce using rule 25 (instructionf -> assignmentAf .)
    ID              reduce using rule 25 (instructionf -> assignmentAf .)
    GLOBAL          reduce using rule 25 (instructionf -> assignmentAf .)
    LOCAL           reduce using rule 25 (instructionf -> assignmentAf .)
    RIF             reduce using rule 25 (instructionf -> assignmentAf .)
    RWHILE          reduce using rule 25 (instructionf -> assignmentAf .)
    RFOR            reduce using rule 25 (instructionf -> assignmentAf .)
    RRETURN         reduce using rule 25 (instructionf -> assignmentAf .)
    RBREAK          reduce using rule 25 (instructionf -> assignmentAf .)
    RCONTINUE       reduce using rule 25 (instructionf -> assignmentAf .)
    RPUSH           reduce using rule 25 (instructionf -> assignmentAf .)
    RPOP            reduce using rule 25 (instructionf -> assignmentAf .)
    END             reduce using rule 25 (instructionf -> assignmentAf .)
    RELSE           reduce using rule 25 (instructionf -> assignmentAf .)
    RELSEIF         reduce using rule 25 (instructionf -> assignmentAf .)


state 125

    (26) instructionf -> callFuncSt .

    PRINT           reduce using rule 26 (instructionf -> callFuncSt .)
    PRINTLN         reduce using rule 26 (instructionf -> callFuncSt .)
    ID              reduce using rule 26 (instructionf -> callFuncSt .)
    GLOBAL          reduce using rule 26 (instructionf -> callFuncSt .)
    LOCAL           reduce using rule 26 (instructionf -> callFuncSt .)
    RIF             reduce using rule 26 (instructionf -> callFuncSt .)
    RWHILE          reduce using rule 26 (instructionf -> callFuncSt .)
    RFOR            reduce using rule 26 (instructionf -> callFuncSt .)
    RRETURN         reduce using rule 26 (instructionf -> callFuncSt .)
    RBREAK          reduce using rule 26 (instructionf -> callFuncSt .)
    RCONTINUE       reduce using rule 26 (instructionf -> callFuncSt .)
    RPUSH           reduce using rule 26 (instructionf -> callFuncSt .)
    RPOP            reduce using rule 26 (instructionf -> callFuncSt .)
    END             reduce using rule 26 (instructionf -> callFuncSt .)
    RELSE           reduce using rule 26 (instructionf -> callFuncSt .)
    RELSEIF         reduce using rule 26 (instructionf -> callFuncSt .)


state 126

    (27) instructionf -> ifSt .

    PRINT           reduce using rule 27 (instructionf -> ifSt .)
    PRINTLN         reduce using rule 27 (instructionf -> ifSt .)
    ID              reduce using rule 27 (instructionf -> ifSt .)
    GLOBAL          reduce using rule 27 (instructionf -> ifSt .)
    LOCAL           reduce using rule 27 (instructionf -> ifSt .)
    RIF             reduce using rule 27 (instructionf -> ifSt .)
    RWHILE          reduce using rule 27 (instructionf -> ifSt .)
    RFOR            reduce using rule 27 (instructionf -> ifSt .)
    RRETURN         reduce using rule 27 (instructionf -> ifSt .)
    RBREAK          reduce using rule 27 (instructionf -> ifSt .)
    RCONTINUE       reduce using rule 27 (instructionf -> ifSt .)
    RPUSH           reduce using rule 27 (instructionf -> ifSt .)
    RPOP            reduce using rule 27 (instructionf -> ifSt .)
    END             reduce using rule 27 (instructionf -> ifSt .)
    RELSE           reduce using rule 27 (instructionf -> ifSt .)
    RELSEIF         reduce using rule 27 (instructionf -> ifSt .)


state 127

    (28) instructionf -> whileSt .

    PRINT           reduce using rule 28 (instructionf -> whileSt .)
    PRINTLN         reduce using rule 28 (instructionf -> whileSt .)
    ID              reduce using rule 28 (instructionf -> whileSt .)
    GLOBAL          reduce using rule 28 (instructionf -> whileSt .)
    LOCAL           reduce using rule 28 (instructionf -> whileSt .)
    RIF             reduce using rule 28 (instructionf -> whileSt .)
    RWHILE          reduce using rule 28 (instructionf -> whileSt .)
    RFOR            reduce using rule 28 (instructionf -> whileSt .)
    RRETURN         reduce using rule 28 (instructionf -> whileSt .)
    RBREAK          reduce using rule 28 (instructionf -> whileSt .)
    RCONTINUE       reduce using rule 28 (instructionf -> whileSt .)
    RPUSH           reduce using rule 28 (instructionf -> whileSt .)
    RPOP            reduce using rule 28 (instructionf -> whileSt .)
    END             reduce using rule 28 (instructionf -> whileSt .)
    RELSE           reduce using rule 28 (instructionf -> whileSt .)
    RELSEIF         reduce using rule 28 (instructionf -> whileSt .)


state 128

    (29) instructionf -> forSt .

    PRINT           reduce using rule 29 (instructionf -> forSt .)
    PRINTLN         reduce using rule 29 (instructionf -> forSt .)
    ID              reduce using rule 29 (instructionf -> forSt .)
    GLOBAL          reduce using rule 29 (instructionf -> forSt .)
    LOCAL           reduce using rule 29 (instructionf -> forSt .)
    RIF             reduce using rule 29 (instructionf -> forSt .)
    RWHILE          reduce using rule 29 (instructionf -> forSt .)
    RFOR            reduce using rule 29 (instructionf -> forSt .)
    RRETURN         reduce using rule 29 (instructionf -> forSt .)
    RBREAK          reduce using rule 29 (instructionf -> forSt .)
    RCONTINUE       reduce using rule 29 (instructionf -> forSt .)
    RPUSH           reduce using rule 29 (instructionf -> forSt .)
    RPOP            reduce using rule 29 (instructionf -> forSt .)
    END             reduce using rule 29 (instructionf -> forSt .)
    RELSE           reduce using rule 29 (instructionf -> forSt .)
    RELSEIF         reduce using rule 29 (instructionf -> forSt .)


state 129

    (30) instructionf -> returnST .

    PRINT           reduce using rule 30 (instructionf -> returnST .)
    PRINTLN         reduce using rule 30 (instructionf -> returnST .)
    ID              reduce using rule 30 (instructionf -> returnST .)
    GLOBAL          reduce using rule 30 (instructionf -> returnST .)
    LOCAL           reduce using rule 30 (instructionf -> returnST .)
    RIF             reduce using rule 30 (instructionf -> returnST .)
    RWHILE          reduce using rule 30 (instructionf -> returnST .)
    RFOR            reduce using rule 30 (instructionf -> returnST .)
    RRETURN         reduce using rule 30 (instructionf -> returnST .)
    RBREAK          reduce using rule 30 (instructionf -> returnST .)
    RCONTINUE       reduce using rule 30 (instructionf -> returnST .)
    RPUSH           reduce using rule 30 (instructionf -> returnST .)
    RPOP            reduce using rule 30 (instructionf -> returnST .)
    END             reduce using rule 30 (instructionf -> returnST .)
    RELSE           reduce using rule 30 (instructionf -> returnST .)
    RELSEIF         reduce using rule 30 (instructionf -> returnST .)


state 130

    (31) instructionf -> breakST .

    PRINT           reduce using rule 31 (instructionf -> breakST .)
    PRINTLN         reduce using rule 31 (instructionf -> breakST .)
    ID              reduce using rule 31 (instructionf -> breakST .)
    GLOBAL          reduce using rule 31 (instructionf -> breakST .)
    LOCAL           reduce using rule 31 (instructionf -> breakST .)
    RIF             reduce using rule 31 (instructionf -> breakST .)
    RWHILE          reduce using rule 31 (instructionf -> breakST .)
    RFOR            reduce using rule 31 (instructionf -> breakST .)
    RRETURN         reduce using rule 31 (instructionf -> breakST .)
    RBREAK          reduce using rule 31 (instructionf -> breakST .)
    RCONTINUE       reduce using rule 31 (instructionf -> breakST .)
    RPUSH           reduce using rule 31 (instructionf -> breakST .)
    RPOP            reduce using rule 31 (instructionf -> breakST .)
    END             reduce using rule 31 (instructionf -> breakST .)
    RELSE           reduce using rule 31 (instructionf -> breakST .)
    RELSEIF         reduce using rule 31 (instructionf -> breakST .)


state 131

    (32) instructionf -> continueST .

    PRINT           reduce using rule 32 (instructionf -> continueST .)
    PRINTLN         reduce using rule 32 (instructionf -> continueST .)
    ID              reduce using rule 32 (instructionf -> continueST .)
    GLOBAL          reduce using rule 32 (instructionf -> continueST .)
    LOCAL           reduce using rule 32 (instructionf -> continueST .)
    RIF             reduce using rule 32 (instructionf -> continueST .)
    RWHILE          reduce using rule 32 (instructionf -> continueST .)
    RFOR            reduce using rule 32 (instructionf -> continueST .)
    RRETURN         reduce using rule 32 (instructionf -> continueST .)
    RBREAK          reduce using rule 32 (instructionf -> continueST .)
    RCONTINUE       reduce using rule 32 (instructionf -> continueST .)
    RPUSH           reduce using rule 32 (instructionf -> continueST .)
    RPOP            reduce using rule 32 (instructionf -> continueST .)
    END             reduce using rule 32 (instructionf -> continueST .)
    RELSE           reduce using rule 32 (instructionf -> continueST .)
    RELSEIF         reduce using rule 32 (instructionf -> continueST .)


state 132

    (33) instructionf -> push .

    PRINT           reduce using rule 33 (instructionf -> push .)
    PRINTLN         reduce using rule 33 (instructionf -> push .)
    ID              reduce using rule 33 (instructionf -> push .)
    GLOBAL          reduce using rule 33 (instructionf -> push .)
    LOCAL           reduce using rule 33 (instructionf -> push .)
    RIF             reduce using rule 33 (instructionf -> push .)
    RWHILE          reduce using rule 33 (instructionf -> push .)
    RFOR            reduce using rule 33 (instructionf -> push .)
    RRETURN         reduce using rule 33 (instructionf -> push .)
    RBREAK          reduce using rule 33 (instructionf -> push .)
    RCONTINUE       reduce using rule 33 (instructionf -> push .)
    RPUSH           reduce using rule 33 (instructionf -> push .)
    RPOP            reduce using rule 33 (instructionf -> push .)
    END             reduce using rule 33 (instructionf -> push .)
    RELSE           reduce using rule 33 (instructionf -> push .)
    RELSEIF         reduce using rule 33 (instructionf -> push .)


state 133

    (34) instructionf -> pop .

    PRINT           reduce using rule 34 (instructionf -> pop .)
    PRINTLN         reduce using rule 34 (instructionf -> pop .)
    ID              reduce using rule 34 (instructionf -> pop .)
    GLOBAL          reduce using rule 34 (instructionf -> pop .)
    LOCAL           reduce using rule 34 (instructionf -> pop .)
    RIF             reduce using rule 34 (instructionf -> pop .)
    RWHILE          reduce using rule 34 (instructionf -> pop .)
    RFOR            reduce using rule 34 (instructionf -> pop .)
    RRETURN         reduce using rule 34 (instructionf -> pop .)
    RBREAK          reduce using rule 34 (instructionf -> pop .)
    RCONTINUE       reduce using rule 34 (instructionf -> pop .)
    RPUSH           reduce using rule 34 (instructionf -> pop .)
    RPOP            reduce using rule 34 (instructionf -> pop .)
    END             reduce using rule 34 (instructionf -> pop .)
    RELSE           reduce using rule 34 (instructionf -> pop .)
    RELSEIF         reduce using rule 34 (instructionf -> pop .)


state 134

    (68) declarationf -> ID . IGUAL exp PTCOMA
    (69) declarationf -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (76) declarationf -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (108) assignmentAf -> ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (114) assignmentAf -> ID . listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (140) callFuncSt -> ID . parametersCallFunc PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER
    (141) parametersCallFunc -> . PARIZQ listValues PARDER
    (142) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 237
    CORIZQ          shift and go to state 36
    PARIZQ          shift and go to state 39

    listArray2                     shift and go to state 238
    parametersCallFunc             shift and go to state 38

state 135

    (70) declarationf -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> GLOBAL . ID IGUAL exp PTCOMA
    (72) declarationf -> GLOBAL . ID PTCOMA
    (78) declarationf -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (110) assignmentAf -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (116) assignmentAf -> GLOBAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> GLOBAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 239


state 136

    (73) declarationf -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> LOCAL . ID IGUAL exp PTCOMA
    (75) declarationf -> LOCAL . ID PTCOMA
    (80) declarationf -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAf -> LOCAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> LOCAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 240


state 137

    (192) exp -> MENOS exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 192 (exp -> MENOS exp .)
    MAS             reduce using rule 192 (exp -> MENOS exp .)
    MENOS           reduce using rule 192 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 192 (exp -> MENOS exp .)
    DIVISION        reduce using rule 192 (exp -> MENOS exp .)
    POTENCIA        reduce using rule 192 (exp -> MENOS exp .)
    MODULO          reduce using rule 192 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 192 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 192 (exp -> MENOS exp .)
    MAYOR           reduce using rule 192 (exp -> MENOS exp .)
    MENOR           reduce using rule 192 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 192 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 192 (exp -> MENOS exp .)
    ANDD            reduce using rule 192 (exp -> MENOS exp .)
    ORR             reduce using rule 192 (exp -> MENOS exp .)
    PRINT           reduce using rule 192 (exp -> MENOS exp .)
    PRINTLN         reduce using rule 192 (exp -> MENOS exp .)
    ID              reduce using rule 192 (exp -> MENOS exp .)
    GLOBAL          reduce using rule 192 (exp -> MENOS exp .)
    LOCAL           reduce using rule 192 (exp -> MENOS exp .)
    RIF             reduce using rule 192 (exp -> MENOS exp .)
    RWHILE          reduce using rule 192 (exp -> MENOS exp .)
    RFOR            reduce using rule 192 (exp -> MENOS exp .)
    RRETURN         reduce using rule 192 (exp -> MENOS exp .)
    RBREAK          reduce using rule 192 (exp -> MENOS exp .)
    RCONTINUE       reduce using rule 192 (exp -> MENOS exp .)
    RPUSH           reduce using rule 192 (exp -> MENOS exp .)
    RPOP            reduce using rule 192 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 192 (exp -> MENOS exp .)
    PARDER          reduce using rule 192 (exp -> MENOS exp .)
    COMA            reduce using rule 192 (exp -> MENOS exp .)
    DOSPT           reduce using rule 192 (exp -> MENOS exp .)
    CORDER          reduce using rule 192 (exp -> MENOS exp .)
    RELSE           reduce using rule 192 (exp -> MENOS exp .)
    RELSEIF         reduce using rule 192 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULTIPLICACION  [ shift and go to state 107 ]
  ! DIVISION        [ shift and go to state 108 ]
  ! POTENCIA        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 138

    (201) exp -> NOTT exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 201 (exp -> NOTT exp .)
    ANDD            reduce using rule 201 (exp -> NOTT exp .)
    ORR             reduce using rule 201 (exp -> NOTT exp .)
    PRINT           reduce using rule 201 (exp -> NOTT exp .)
    PRINTLN         reduce using rule 201 (exp -> NOTT exp .)
    ID              reduce using rule 201 (exp -> NOTT exp .)
    GLOBAL          reduce using rule 201 (exp -> NOTT exp .)
    LOCAL           reduce using rule 201 (exp -> NOTT exp .)
    RIF             reduce using rule 201 (exp -> NOTT exp .)
    RWHILE          reduce using rule 201 (exp -> NOTT exp .)
    RFOR            reduce using rule 201 (exp -> NOTT exp .)
    RRETURN         reduce using rule 201 (exp -> NOTT exp .)
    RBREAK          reduce using rule 201 (exp -> NOTT exp .)
    RCONTINUE       reduce using rule 201 (exp -> NOTT exp .)
    RPUSH           reduce using rule 201 (exp -> NOTT exp .)
    RPOP            reduce using rule 201 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 201 (exp -> NOTT exp .)
    PARDER          reduce using rule 201 (exp -> NOTT exp .)
    COMA            reduce using rule 201 (exp -> NOTT exp .)
    DOSPT           reduce using rule 201 (exp -> NOTT exp .)
    CORDER          reduce using rule 201 (exp -> NOTT exp .)
    RELSE           reduce using rule 201 (exp -> NOTT exp .)
    RELSEIF         reduce using rule 201 (exp -> NOTT exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116

  ! MAS             [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 201 (exp -> NOTT exp .) ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 139

    (202) exp -> ID parametersCallFunc .

    END             reduce using rule 202 (exp -> ID parametersCallFunc .)
    MAS             reduce using rule 202 (exp -> ID parametersCallFunc .)
    MENOS           reduce using rule 202 (exp -> ID parametersCallFunc .)
    MULTIPLICACION  reduce using rule 202 (exp -> ID parametersCallFunc .)
    DIVISION        reduce using rule 202 (exp -> ID parametersCallFunc .)
    POTENCIA        reduce using rule 202 (exp -> ID parametersCallFunc .)
    MODULO          reduce using rule 202 (exp -> ID parametersCallFunc .)
    IGUALIGUAL      reduce using rule 202 (exp -> ID parametersCallFunc .)
    DISTINTO        reduce using rule 202 (exp -> ID parametersCallFunc .)
    MAYOR           reduce using rule 202 (exp -> ID parametersCallFunc .)
    MENOR           reduce using rule 202 (exp -> ID parametersCallFunc .)
    MAYORIGUAL      reduce using rule 202 (exp -> ID parametersCallFunc .)
    MENORIGUAL      reduce using rule 202 (exp -> ID parametersCallFunc .)
    ANDD            reduce using rule 202 (exp -> ID parametersCallFunc .)
    ORR             reduce using rule 202 (exp -> ID parametersCallFunc .)
    PRINT           reduce using rule 202 (exp -> ID parametersCallFunc .)
    PRINTLN         reduce using rule 202 (exp -> ID parametersCallFunc .)
    ID              reduce using rule 202 (exp -> ID parametersCallFunc .)
    GLOBAL          reduce using rule 202 (exp -> ID parametersCallFunc .)
    LOCAL           reduce using rule 202 (exp -> ID parametersCallFunc .)
    RIF             reduce using rule 202 (exp -> ID parametersCallFunc .)
    RWHILE          reduce using rule 202 (exp -> ID parametersCallFunc .)
    RFOR            reduce using rule 202 (exp -> ID parametersCallFunc .)
    RRETURN         reduce using rule 202 (exp -> ID parametersCallFunc .)
    RBREAK          reduce using rule 202 (exp -> ID parametersCallFunc .)
    RCONTINUE       reduce using rule 202 (exp -> ID parametersCallFunc .)
    RPUSH           reduce using rule 202 (exp -> ID parametersCallFunc .)
    RPOP            reduce using rule 202 (exp -> ID parametersCallFunc .)
    PTCOMA          reduce using rule 202 (exp -> ID parametersCallFunc .)
    PARDER          reduce using rule 202 (exp -> ID parametersCallFunc .)
    COMA            reduce using rule 202 (exp -> ID parametersCallFunc .)
    DOSPT           reduce using rule 202 (exp -> ID parametersCallFunc .)
    CORDER          reduce using rule 202 (exp -> ID parametersCallFunc .)
    RELSE           reduce using rule 202 (exp -> ID parametersCallFunc .)
    RELSEIF         reduce using rule 202 (exp -> ID parametersCallFunc .)


state 140

    (253) exp -> ID listArray .
    (182) listArray -> listArray . CORIZQ exp CORDER

    END             reduce using rule 253 (exp -> ID listArray .)
    MAS             reduce using rule 253 (exp -> ID listArray .)
    MENOS           reduce using rule 253 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 253 (exp -> ID listArray .)
    DIVISION        reduce using rule 253 (exp -> ID listArray .)
    POTENCIA        reduce using rule 253 (exp -> ID listArray .)
    MODULO          reduce using rule 253 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 253 (exp -> ID listArray .)
    DISTINTO        reduce using rule 253 (exp -> ID listArray .)
    MAYOR           reduce using rule 253 (exp -> ID listArray .)
    MENOR           reduce using rule 253 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 253 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 253 (exp -> ID listArray .)
    ANDD            reduce using rule 253 (exp -> ID listArray .)
    ORR             reduce using rule 253 (exp -> ID listArray .)
    PRINT           reduce using rule 253 (exp -> ID listArray .)
    PRINTLN         reduce using rule 253 (exp -> ID listArray .)
    ID              reduce using rule 253 (exp -> ID listArray .)
    GLOBAL          reduce using rule 253 (exp -> ID listArray .)
    LOCAL           reduce using rule 253 (exp -> ID listArray .)
    RIF             reduce using rule 253 (exp -> ID listArray .)
    RWHILE          reduce using rule 253 (exp -> ID listArray .)
    RFOR            reduce using rule 253 (exp -> ID listArray .)
    RRETURN         reduce using rule 253 (exp -> ID listArray .)
    RBREAK          reduce using rule 253 (exp -> ID listArray .)
    RCONTINUE       reduce using rule 253 (exp -> ID listArray .)
    RPUSH           reduce using rule 253 (exp -> ID listArray .)
    RPOP            reduce using rule 253 (exp -> ID listArray .)
    PTCOMA          reduce using rule 253 (exp -> ID listArray .)
    PARDER          reduce using rule 253 (exp -> ID listArray .)
    COMA            reduce using rule 253 (exp -> ID listArray .)
    DOSPT           reduce using rule 253 (exp -> ID listArray .)
    CORDER          reduce using rule 253 (exp -> ID listArray .)
    RELSE           reduce using rule 253 (exp -> ID listArray .)
    RELSEIF         reduce using rule 253 (exp -> ID listArray .)
    CORIZQ          shift and go to state 241


state 141

    (183) listArray -> CORIZQ . exp CORDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 242

state 142

    (203) exp -> UPPERCASE PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 243

state 143

    (244) exp -> PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 244
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 144

    (204) exp -> LOWERCASE PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 245

state 145

    (205) exp -> LOG PARIZQ . exp COMA exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 246

state 146

    (206) exp -> LOG10 PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 247

state 147

    (207) exp -> SIN PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 248

state 148

    (208) exp -> COS PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 249

state 149

    (209) exp -> TAN PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 250

state 150

    (210) exp -> SQRT PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 251

state 151

    (211) exp -> PARSE PARIZQ . typeDef COMA exp PARDER
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 252

state 152

    (212) exp -> TRUNC PARIZQ . typeDef COMA exp PARDER
    (213) exp -> TRUNC PARIZQ . exp PARDER
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    typeDef                        shift and go to state 259
    exp                            shift and go to state 260

state 153

    (214) exp -> MFLOAT PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 261

state 154

    (215) exp -> MSTRING PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 262

state 155

    (216) exp -> TYPEOF PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 263

state 156

    (217) exp -> RPUSH NOTT . PARIZQ ID COMA exp PARDER
    (218) exp -> RPUSH NOTT . PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> RPUSH NOTT . PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> RPUSH NOTT . PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> RPUSH NOTT . PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> RPUSH NOTT . PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER

    PARIZQ          shift and go to state 264


state 157

    (254) exp -> CORIZQ listValues . CORDER
    (255) exp -> CORIZQ listValues . CORDER DOSPT DOSPT typeDef
    (143) listValues -> listValues . COMA exp

    CORDER          shift and go to state 265
    COMA            shift and go to state 201


state 158

    (256) exp -> CORIZQ CORDER .

    END             reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAS             reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 256 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 256 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 256 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 256 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 256 (exp -> CORIZQ CORDER .)
    PRINT           reduce using rule 256 (exp -> CORIZQ CORDER .)
    PRINTLN         reduce using rule 256 (exp -> CORIZQ CORDER .)
    ID              reduce using rule 256 (exp -> CORIZQ CORDER .)
    GLOBAL          reduce using rule 256 (exp -> CORIZQ CORDER .)
    LOCAL           reduce using rule 256 (exp -> CORIZQ CORDER .)
    RIF             reduce using rule 256 (exp -> CORIZQ CORDER .)
    RWHILE          reduce using rule 256 (exp -> CORIZQ CORDER .)
    RFOR            reduce using rule 256 (exp -> CORIZQ CORDER .)
    RRETURN         reduce using rule 256 (exp -> CORIZQ CORDER .)
    RBREAK          reduce using rule 256 (exp -> CORIZQ CORDER .)
    RCONTINUE       reduce using rule 256 (exp -> CORIZQ CORDER .)
    RPUSH           reduce using rule 256 (exp -> CORIZQ CORDER .)
    RPOP            reduce using rule 256 (exp -> CORIZQ CORDER .)
    PTCOMA          reduce using rule 256 (exp -> CORIZQ CORDER .)
    PARDER          reduce using rule 256 (exp -> CORIZQ CORDER .)
    COMA            reduce using rule 256 (exp -> CORIZQ CORDER .)
    DOSPT           reduce using rule 256 (exp -> CORIZQ CORDER .)
    CORDER          reduce using rule 256 (exp -> CORIZQ CORDER .)
    RELSE           reduce using rule 256 (exp -> CORIZQ CORDER .)
    RELSEIF         reduce using rule 256 (exp -> CORIZQ CORDER .)


state 159

    (223) exp -> RPOP NOTT . PARIZQ ID PARDER
    (224) exp -> RPOP NOTT . PARIZQ ID listArray2 PARDER

    PARIZQ          shift and go to state 266


state 160

    (233) exp -> RLENGTH PARIZQ . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 267

state 161

    (167) whileSt -> RWHILE exp blockc .

    PRINT           reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    PRINTLN         reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    ID              reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    GLOBAL          reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    LOCAL           reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    FUNCTION        reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RIF             reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RWHILE          reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RFOR            reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RRETURN         reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RBREAK          reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RCONTINUE       reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RPUSH           reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RPOP            reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    $end            reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    END             reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RELSE           reduce using rule 167 (whileSt -> RWHILE exp blockc .)
    RELSEIF         reduce using rule 167 (whileSt -> RWHILE exp blockc .)


state 162

    (174) blockc -> instructionsc . END PTCOMA
    (6) instructionsc -> instructionsc . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 268
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    instructionc                   shift and go to state 269
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 163

    (175) blockc -> END . PTCOMA

    PTCOMA          shift and go to state 270


state 164

    (7) instructionsc -> instructionc .

    END             reduce using rule 7 (instructionsc -> instructionc .)
    PRINT           reduce using rule 7 (instructionsc -> instructionc .)
    PRINTLN         reduce using rule 7 (instructionsc -> instructionc .)
    ID              reduce using rule 7 (instructionsc -> instructionc .)
    LOCAL           reduce using rule 7 (instructionsc -> instructionc .)
    GLOBAL          reduce using rule 7 (instructionsc -> instructionc .)
    RIF             reduce using rule 7 (instructionsc -> instructionc .)
    RWHILE          reduce using rule 7 (instructionsc -> instructionc .)
    RFOR            reduce using rule 7 (instructionsc -> instructionc .)
    RRETURN         reduce using rule 7 (instructionsc -> instructionc .)
    RBREAK          reduce using rule 7 (instructionsc -> instructionc .)
    RCONTINUE       reduce using rule 7 (instructionsc -> instructionc .)
    RPUSH           reduce using rule 7 (instructionsc -> instructionc .)
    RPOP            reduce using rule 7 (instructionsc -> instructionc .)
    RELSE           reduce using rule 7 (instructionsc -> instructionc .)
    RELSEIF         reduce using rule 7 (instructionsc -> instructionc .)


state 165

    (35) instructionc -> p_print .

    END             reduce using rule 35 (instructionc -> p_print .)
    PRINT           reduce using rule 35 (instructionc -> p_print .)
    PRINTLN         reduce using rule 35 (instructionc -> p_print .)
    ID              reduce using rule 35 (instructionc -> p_print .)
    LOCAL           reduce using rule 35 (instructionc -> p_print .)
    GLOBAL          reduce using rule 35 (instructionc -> p_print .)
    RIF             reduce using rule 35 (instructionc -> p_print .)
    RWHILE          reduce using rule 35 (instructionc -> p_print .)
    RFOR            reduce using rule 35 (instructionc -> p_print .)
    RRETURN         reduce using rule 35 (instructionc -> p_print .)
    RBREAK          reduce using rule 35 (instructionc -> p_print .)
    RCONTINUE       reduce using rule 35 (instructionc -> p_print .)
    RPUSH           reduce using rule 35 (instructionc -> p_print .)
    RPOP            reduce using rule 35 (instructionc -> p_print .)
    RELSE           reduce using rule 35 (instructionc -> p_print .)
    RELSEIF         reduce using rule 35 (instructionc -> p_print .)


state 166

    (36) instructionc -> p_println .

    END             reduce using rule 36 (instructionc -> p_println .)
    PRINT           reduce using rule 36 (instructionc -> p_println .)
    PRINTLN         reduce using rule 36 (instructionc -> p_println .)
    ID              reduce using rule 36 (instructionc -> p_println .)
    LOCAL           reduce using rule 36 (instructionc -> p_println .)
    GLOBAL          reduce using rule 36 (instructionc -> p_println .)
    RIF             reduce using rule 36 (instructionc -> p_println .)
    RWHILE          reduce using rule 36 (instructionc -> p_println .)
    RFOR            reduce using rule 36 (instructionc -> p_println .)
    RRETURN         reduce using rule 36 (instructionc -> p_println .)
    RBREAK          reduce using rule 36 (instructionc -> p_println .)
    RCONTINUE       reduce using rule 36 (instructionc -> p_println .)
    RPUSH           reduce using rule 36 (instructionc -> p_println .)
    RPOP            reduce using rule 36 (instructionc -> p_println .)
    RELSE           reduce using rule 36 (instructionc -> p_println .)
    RELSEIF         reduce using rule 36 (instructionc -> p_println .)


state 167

    (37) instructionc -> declarationc .

    END             reduce using rule 37 (instructionc -> declarationc .)
    PRINT           reduce using rule 37 (instructionc -> declarationc .)
    PRINTLN         reduce using rule 37 (instructionc -> declarationc .)
    ID              reduce using rule 37 (instructionc -> declarationc .)
    LOCAL           reduce using rule 37 (instructionc -> declarationc .)
    GLOBAL          reduce using rule 37 (instructionc -> declarationc .)
    RIF             reduce using rule 37 (instructionc -> declarationc .)
    RWHILE          reduce using rule 37 (instructionc -> declarationc .)
    RFOR            reduce using rule 37 (instructionc -> declarationc .)
    RRETURN         reduce using rule 37 (instructionc -> declarationc .)
    RBREAK          reduce using rule 37 (instructionc -> declarationc .)
    RCONTINUE       reduce using rule 37 (instructionc -> declarationc .)
    RPUSH           reduce using rule 37 (instructionc -> declarationc .)
    RPOP            reduce using rule 37 (instructionc -> declarationc .)
    RELSE           reduce using rule 37 (instructionc -> declarationc .)
    RELSEIF         reduce using rule 37 (instructionc -> declarationc .)


state 168

    (38) instructionc -> assignmentAc .

    END             reduce using rule 38 (instructionc -> assignmentAc .)
    PRINT           reduce using rule 38 (instructionc -> assignmentAc .)
    PRINTLN         reduce using rule 38 (instructionc -> assignmentAc .)
    ID              reduce using rule 38 (instructionc -> assignmentAc .)
    LOCAL           reduce using rule 38 (instructionc -> assignmentAc .)
    GLOBAL          reduce using rule 38 (instructionc -> assignmentAc .)
    RIF             reduce using rule 38 (instructionc -> assignmentAc .)
    RWHILE          reduce using rule 38 (instructionc -> assignmentAc .)
    RFOR            reduce using rule 38 (instructionc -> assignmentAc .)
    RRETURN         reduce using rule 38 (instructionc -> assignmentAc .)
    RBREAK          reduce using rule 38 (instructionc -> assignmentAc .)
    RCONTINUE       reduce using rule 38 (instructionc -> assignmentAc .)
    RPUSH           reduce using rule 38 (instructionc -> assignmentAc .)
    RPOP            reduce using rule 38 (instructionc -> assignmentAc .)
    RELSE           reduce using rule 38 (instructionc -> assignmentAc .)
    RELSEIF         reduce using rule 38 (instructionc -> assignmentAc .)


state 169

    (39) instructionc -> callFuncSt .

    END             reduce using rule 39 (instructionc -> callFuncSt .)
    PRINT           reduce using rule 39 (instructionc -> callFuncSt .)
    PRINTLN         reduce using rule 39 (instructionc -> callFuncSt .)
    ID              reduce using rule 39 (instructionc -> callFuncSt .)
    LOCAL           reduce using rule 39 (instructionc -> callFuncSt .)
    GLOBAL          reduce using rule 39 (instructionc -> callFuncSt .)
    RIF             reduce using rule 39 (instructionc -> callFuncSt .)
    RWHILE          reduce using rule 39 (instructionc -> callFuncSt .)
    RFOR            reduce using rule 39 (instructionc -> callFuncSt .)
    RRETURN         reduce using rule 39 (instructionc -> callFuncSt .)
    RBREAK          reduce using rule 39 (instructionc -> callFuncSt .)
    RCONTINUE       reduce using rule 39 (instructionc -> callFuncSt .)
    RPUSH           reduce using rule 39 (instructionc -> callFuncSt .)
    RPOP            reduce using rule 39 (instructionc -> callFuncSt .)
    RELSE           reduce using rule 39 (instructionc -> callFuncSt .)
    RELSEIF         reduce using rule 39 (instructionc -> callFuncSt .)


state 170

    (40) instructionc -> ifStc .

    END             reduce using rule 40 (instructionc -> ifStc .)
    PRINT           reduce using rule 40 (instructionc -> ifStc .)
    PRINTLN         reduce using rule 40 (instructionc -> ifStc .)
    ID              reduce using rule 40 (instructionc -> ifStc .)
    LOCAL           reduce using rule 40 (instructionc -> ifStc .)
    GLOBAL          reduce using rule 40 (instructionc -> ifStc .)
    RIF             reduce using rule 40 (instructionc -> ifStc .)
    RWHILE          reduce using rule 40 (instructionc -> ifStc .)
    RFOR            reduce using rule 40 (instructionc -> ifStc .)
    RRETURN         reduce using rule 40 (instructionc -> ifStc .)
    RBREAK          reduce using rule 40 (instructionc -> ifStc .)
    RCONTINUE       reduce using rule 40 (instructionc -> ifStc .)
    RPUSH           reduce using rule 40 (instructionc -> ifStc .)
    RPOP            reduce using rule 40 (instructionc -> ifStc .)
    RELSE           reduce using rule 40 (instructionc -> ifStc .)
    RELSEIF         reduce using rule 40 (instructionc -> ifStc .)


state 171

    (41) instructionc -> whileSt .

    END             reduce using rule 41 (instructionc -> whileSt .)
    PRINT           reduce using rule 41 (instructionc -> whileSt .)
    PRINTLN         reduce using rule 41 (instructionc -> whileSt .)
    ID              reduce using rule 41 (instructionc -> whileSt .)
    LOCAL           reduce using rule 41 (instructionc -> whileSt .)
    GLOBAL          reduce using rule 41 (instructionc -> whileSt .)
    RIF             reduce using rule 41 (instructionc -> whileSt .)
    RWHILE          reduce using rule 41 (instructionc -> whileSt .)
    RFOR            reduce using rule 41 (instructionc -> whileSt .)
    RRETURN         reduce using rule 41 (instructionc -> whileSt .)
    RBREAK          reduce using rule 41 (instructionc -> whileSt .)
    RCONTINUE       reduce using rule 41 (instructionc -> whileSt .)
    RPUSH           reduce using rule 41 (instructionc -> whileSt .)
    RPOP            reduce using rule 41 (instructionc -> whileSt .)
    RELSE           reduce using rule 41 (instructionc -> whileSt .)
    RELSEIF         reduce using rule 41 (instructionc -> whileSt .)


state 172

    (42) instructionc -> forSt .

    END             reduce using rule 42 (instructionc -> forSt .)
    PRINT           reduce using rule 42 (instructionc -> forSt .)
    PRINTLN         reduce using rule 42 (instructionc -> forSt .)
    ID              reduce using rule 42 (instructionc -> forSt .)
    LOCAL           reduce using rule 42 (instructionc -> forSt .)
    GLOBAL          reduce using rule 42 (instructionc -> forSt .)
    RIF             reduce using rule 42 (instructionc -> forSt .)
    RWHILE          reduce using rule 42 (instructionc -> forSt .)
    RFOR            reduce using rule 42 (instructionc -> forSt .)
    RRETURN         reduce using rule 42 (instructionc -> forSt .)
    RBREAK          reduce using rule 42 (instructionc -> forSt .)
    RCONTINUE       reduce using rule 42 (instructionc -> forSt .)
    RPUSH           reduce using rule 42 (instructionc -> forSt .)
    RPOP            reduce using rule 42 (instructionc -> forSt .)
    RELSE           reduce using rule 42 (instructionc -> forSt .)
    RELSEIF         reduce using rule 42 (instructionc -> forSt .)


state 173

    (43) instructionc -> returnST .

    END             reduce using rule 43 (instructionc -> returnST .)
    PRINT           reduce using rule 43 (instructionc -> returnST .)
    PRINTLN         reduce using rule 43 (instructionc -> returnST .)
    ID              reduce using rule 43 (instructionc -> returnST .)
    LOCAL           reduce using rule 43 (instructionc -> returnST .)
    GLOBAL          reduce using rule 43 (instructionc -> returnST .)
    RIF             reduce using rule 43 (instructionc -> returnST .)
    RWHILE          reduce using rule 43 (instructionc -> returnST .)
    RFOR            reduce using rule 43 (instructionc -> returnST .)
    RRETURN         reduce using rule 43 (instructionc -> returnST .)
    RBREAK          reduce using rule 43 (instructionc -> returnST .)
    RCONTINUE       reduce using rule 43 (instructionc -> returnST .)
    RPUSH           reduce using rule 43 (instructionc -> returnST .)
    RPOP            reduce using rule 43 (instructionc -> returnST .)
    RELSE           reduce using rule 43 (instructionc -> returnST .)
    RELSEIF         reduce using rule 43 (instructionc -> returnST .)


state 174

    (44) instructionc -> breakST .

    END             reduce using rule 44 (instructionc -> breakST .)
    PRINT           reduce using rule 44 (instructionc -> breakST .)
    PRINTLN         reduce using rule 44 (instructionc -> breakST .)
    ID              reduce using rule 44 (instructionc -> breakST .)
    LOCAL           reduce using rule 44 (instructionc -> breakST .)
    GLOBAL          reduce using rule 44 (instructionc -> breakST .)
    RIF             reduce using rule 44 (instructionc -> breakST .)
    RWHILE          reduce using rule 44 (instructionc -> breakST .)
    RFOR            reduce using rule 44 (instructionc -> breakST .)
    RRETURN         reduce using rule 44 (instructionc -> breakST .)
    RBREAK          reduce using rule 44 (instructionc -> breakST .)
    RCONTINUE       reduce using rule 44 (instructionc -> breakST .)
    RPUSH           reduce using rule 44 (instructionc -> breakST .)
    RPOP            reduce using rule 44 (instructionc -> breakST .)
    RELSE           reduce using rule 44 (instructionc -> breakST .)
    RELSEIF         reduce using rule 44 (instructionc -> breakST .)


state 175

    (45) instructionc -> continueST .

    END             reduce using rule 45 (instructionc -> continueST .)
    PRINT           reduce using rule 45 (instructionc -> continueST .)
    PRINTLN         reduce using rule 45 (instructionc -> continueST .)
    ID              reduce using rule 45 (instructionc -> continueST .)
    LOCAL           reduce using rule 45 (instructionc -> continueST .)
    GLOBAL          reduce using rule 45 (instructionc -> continueST .)
    RIF             reduce using rule 45 (instructionc -> continueST .)
    RWHILE          reduce using rule 45 (instructionc -> continueST .)
    RFOR            reduce using rule 45 (instructionc -> continueST .)
    RRETURN         reduce using rule 45 (instructionc -> continueST .)
    RBREAK          reduce using rule 45 (instructionc -> continueST .)
    RCONTINUE       reduce using rule 45 (instructionc -> continueST .)
    RPUSH           reduce using rule 45 (instructionc -> continueST .)
    RPOP            reduce using rule 45 (instructionc -> continueST .)
    RELSE           reduce using rule 45 (instructionc -> continueST .)
    RELSEIF         reduce using rule 45 (instructionc -> continueST .)


state 176

    (46) instructionc -> push .

    END             reduce using rule 46 (instructionc -> push .)
    PRINT           reduce using rule 46 (instructionc -> push .)
    PRINTLN         reduce using rule 46 (instructionc -> push .)
    ID              reduce using rule 46 (instructionc -> push .)
    LOCAL           reduce using rule 46 (instructionc -> push .)
    GLOBAL          reduce using rule 46 (instructionc -> push .)
    RIF             reduce using rule 46 (instructionc -> push .)
    RWHILE          reduce using rule 46 (instructionc -> push .)
    RFOR            reduce using rule 46 (instructionc -> push .)
    RRETURN         reduce using rule 46 (instructionc -> push .)
    RBREAK          reduce using rule 46 (instructionc -> push .)
    RCONTINUE       reduce using rule 46 (instructionc -> push .)
    RPUSH           reduce using rule 46 (instructionc -> push .)
    RPOP            reduce using rule 46 (instructionc -> push .)
    RELSE           reduce using rule 46 (instructionc -> push .)
    RELSEIF         reduce using rule 46 (instructionc -> push .)


state 177

    (47) instructionc -> pop .

    END             reduce using rule 47 (instructionc -> pop .)
    PRINT           reduce using rule 47 (instructionc -> pop .)
    PRINTLN         reduce using rule 47 (instructionc -> pop .)
    ID              reduce using rule 47 (instructionc -> pop .)
    LOCAL           reduce using rule 47 (instructionc -> pop .)
    GLOBAL          reduce using rule 47 (instructionc -> pop .)
    RIF             reduce using rule 47 (instructionc -> pop .)
    RWHILE          reduce using rule 47 (instructionc -> pop .)
    RFOR            reduce using rule 47 (instructionc -> pop .)
    RRETURN         reduce using rule 47 (instructionc -> pop .)
    RBREAK          reduce using rule 47 (instructionc -> pop .)
    RCONTINUE       reduce using rule 47 (instructionc -> pop .)
    RPUSH           reduce using rule 47 (instructionc -> pop .)
    RPOP            reduce using rule 47 (instructionc -> pop .)
    RELSE           reduce using rule 47 (instructionc -> pop .)
    RELSEIF         reduce using rule 47 (instructionc -> pop .)


state 178

    (82) declarationc -> ID . IGUAL exp PTCOMA
    (83) declarationc -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (90) declarationc -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (120) assignmentAc -> ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (126) assignmentAc -> ID . listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (140) callFuncSt -> ID . parametersCallFunc PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER
    (141) parametersCallFunc -> . PARIZQ listValues PARDER
    (142) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 271
    CORIZQ          shift and go to state 36
    PARIZQ          shift and go to state 39

    listArray2                     shift and go to state 272
    parametersCallFunc             shift and go to state 38

state 179

    (84) declarationc -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> LOCAL . ID IGUAL exp PTCOMA
    (86) declarationc -> LOCAL . ID PTCOMA
    (94) declarationc -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (130) assignmentAc -> LOCAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> LOCAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 273


state 180

    (87) declarationc -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> GLOBAL . ID IGUAL exp PTCOMA
    (89) declarationc -> GLOBAL . ID PTCOMA
    (92) declarationc -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA
    (122) assignmentAc -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (128) assignmentAc -> GLOBAL . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> GLOBAL . ID listArray2 IGUAL exp PTCOMA

    ID              shift and go to state 274


state 181

    (156) ifStc -> RIF . exp END PTCOMA
    (157) ifStc -> RIF . exp blockifc END PTCOMA
    (158) ifStc -> RIF . exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> RIF . exp blockifc RELSE END PTCOMA
    (160) ifStc -> RIF . exp blockifc elseifStc END PTCOMA
    (161) ifStc -> RIF . exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> RIF . exp blockifc elseifStc RELSE END PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 275

state 182

    (168) forSt -> RFOR parameterFor RIN . exp DOSPT exp blockc
    (169) forSt -> RFOR parameterFor RIN . exp blockc
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 276

state 183

    (170) parameterFor -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 277


state 184

    (178) returnST -> RRETURN exp PTCOMA .

    PRINT           reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    PRINTLN         reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    ID              reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    GLOBAL          reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    LOCAL           reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    FUNCTION        reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RIF             reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RWHILE          reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RFOR            reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RRETURN         reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RBREAK          reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RCONTINUE       reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RPUSH           reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RPOP            reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    $end            reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    END             reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RELSE           reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)
    RELSEIF         reduce using rule 178 (returnST -> RRETURN exp PTCOMA .)


state 185

    (225) push -> RPUSH NOTT PARIZQ . ID COMA exp PARDER PTCOMA
    (226) push -> RPUSH NOTT PARIZQ . ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> RPUSH NOTT PARIZQ . ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> RPUSH NOTT PARIZQ . ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> RPUSH NOTT PARIZQ . ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> RPUSH NOTT PARIZQ . ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA

    ID              shift and go to state 278


state 186

    (231) pop -> RPOP NOTT PARIZQ . ID PARDER PTCOMA
    (232) pop -> RPOP NOTT PARIZQ . ID listArray2 PARDER PTCOMA

    ID              shift and go to state 279


state 187

    (48) p_print -> PRINT PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 280


state 188

    (52) exps -> exps COMA . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 281

state 189

    (49) p_print -> PRINT PARIZQ PARDER PTCOMA .

    PRINT           reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    PRINTLN         reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    GLOBAL          reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    LOCAL           reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    FUNCTION        reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RIF             reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RWHILE          reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RFOR            reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RRETURN         reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RBREAK          reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RCONTINUE       reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RPUSH           reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RPOP            reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    END             reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RELSE           reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)
    RELSEIF         reduce using rule 49 (p_print -> PRINT PARIZQ PARDER PTCOMA .)


state 190

    (50) p_println -> PRINTLN PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 282


state 191

    (51) p_println -> PRINTLN PARIZQ PARDER PTCOMA .

    PRINT           reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    PRINTLN         reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    GLOBAL          reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    LOCAL           reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    FUNCTION        reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RIF             reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RWHILE          reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RFOR            reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RRETURN         reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RBREAK          reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RCONTINUE       reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RPUSH           reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RPOP            reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    END             reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RELSE           reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)
    RELSEIF         reduce using rule 51 (p_println -> PRINTLN PARIZQ PARDER PTCOMA .)


state 192

    (54) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 54 (declaration -> ID IGUAL exp PTCOMA .)


state 193

    (55) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 283


state 194

    (62) declaration -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (63) declaration -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 284
    COMA            shift and go to state 188


state 195

    (53) exps -> exp .
    (144) listValues -> exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

  ! reduce/reduce conflict for CORDER resolved using rule 53 (exps -> exp .)
  ! reduce/reduce conflict for COMA resolved using rule 53 (exps -> exp .)
    CORDER          reduce using rule 53 (exps -> exp .)
    COMA            reduce using rule 53 (exps -> exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118

  ! CORDER          [ reduce using rule 144 (listValues -> exp .) ]
  ! COMA            [ reduce using rule 144 (listValues -> exp .) ]


state 196

    (185) listArray2 -> CORIZQ exp CORDER .

    IGUAL           reduce using rule 185 (listArray2 -> CORIZQ exp CORDER .)
    CORIZQ          reduce using rule 185 (listArray2 -> CORIZQ exp CORDER .)
    COMA            reduce using rule 185 (listArray2 -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 185 (listArray2 -> CORIZQ exp CORDER .)


state 197

    (96) assignmentA -> ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (97) assignmentA -> ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 285
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 198

    (102) assignmentA -> ID listArray2 IGUAL exp . PTCOMA
    (103) assignmentA -> ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 286
    DOSPT           shift and go to state 287
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 199

    (184) listArray2 -> listArray2 CORIZQ exp . CORDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    CORDER          shift and go to state 288
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 200

    (141) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    END             reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAS             reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENOS           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MULTIPLICACION  reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DIVISION        reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    POTENCIA        reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MODULO          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    IGUALIGUAL      reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DISTINTO        reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAYOR           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENOR           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAYORIGUAL      reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENORIGUAL      reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ANDD            reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ORR             reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PRINT           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PRINTLN         reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ID              reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    GLOBAL          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    LOCAL           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RIF             reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RWHILE          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RFOR            reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RRETURN         reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RBREAK          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RCONTINUE       reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RPUSH           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RPOP            reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PARDER          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    COMA            reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DOSPT           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    CORDER          reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RELSE           reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RELSEIF         reduce using rule 141 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 201

    (143) listValues -> listValues COMA . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 289

state 202

    (56) declaration -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (57) declaration -> GLOBAL ID IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 290
    PTCOMA          shift and go to state 291
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 203

    (64) declaration -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 292
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 204

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (104) assignmentA -> GLOBAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> GLOBAL ID listArray2 IGUAL . exp PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 293
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 294

state 205

    (59) declaration -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (60) declaration -> LOCAL ID IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 295
    PTCOMA          shift and go to state 296
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 206

    (66) declaration -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 297
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 207

    (100) assignmentA -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (106) assignmentA -> LOCAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> LOCAL ID listArray2 IGUAL . exp PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 298
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 299

state 208

    (132) function -> FUNCTION ID parametersFunc DOSPT . DOSPT typeDef blockf

    DOSPT           shift and go to state 300


state 209

    (133) function -> FUNCTION ID parametersFunc blockf .

    PRINT           reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    PRINTLN         reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    ID              reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    GLOBAL          reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    LOCAL           reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    FUNCTION        reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RIF             reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RWHILE          reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RFOR            reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RRETURN         reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RBREAK          reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RCONTINUE       reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RPUSH           reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    RPOP            reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)
    $end            reduce using rule 133 (function -> FUNCTION ID parametersFunc blockf .)


state 210

    (172) blockf -> instructionsf . END PTCOMA
    (4) instructionsf -> instructionsf . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 301
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    instructionf                   shift and go to state 236
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 211

    (173) blockf -> END . PTCOMA

    PTCOMA          shift and go to state 302


state 212

    (134) parametersFunc -> PARIZQ parameters . PARDER
    (136) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 303
    COMA            shift and go to state 304


state 213

    (135) parametersFunc -> PARIZQ PARDER .

    DOSPT           reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    END             reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RRETURN         reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RBREAK          reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RCONTINUE       reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RPUSH           reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)
    RPOP            reduce using rule 135 (parametersFunc -> PARIZQ PARDER .)


state 214

    (137) parameters -> parameter .

    PARDER          reduce using rule 137 (parameters -> parameter .)
    COMA            reduce using rule 137 (parameters -> parameter .)


state 215

    (138) parameter -> ID . DOSPT DOSPT typeDef
    (139) parameter -> ID .

    DOSPT           shift and go to state 305
    PARDER          reduce using rule 139 (parameter -> ID .)
    COMA            reduce using rule 139 (parameter -> ID .)


state 216

    (145) ifSt -> RIF exp END PTCOMA .

    PRINT           reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    ID              reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    FUNCTION        reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RIF             reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RRETURN         reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RBREAK          reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RCONTINUE       reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RPUSH           reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RPOP            reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    $end            reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    END             reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 145 (ifSt -> RIF exp END PTCOMA .)


state 217

    (146) ifSt -> RIF exp blockiff END . PTCOMA

    PTCOMA          shift and go to state 306


state 218

    (147) ifSt -> RIF exp blockiff RELSE . blockiff END PTCOMA
    (148) ifSt -> RIF exp blockiff RELSE . END PTCOMA
    (176) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 308
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockiff                       shift and go to state 307
    instructionsf                  shift and go to state 119
    instructionf                   shift and go to state 120
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 219

    (149) ifSt -> RIF exp blockiff elseifSt . END PTCOMA
    (150) ifSt -> RIF exp blockiff elseifSt . RELSE blockiff END PTCOMA
    (151) ifSt -> RIF exp blockiff elseifSt . RELSE END PTCOMA
    (152) elseifSt -> elseifSt . conelseif
    (154) conelseif -> . RELSEIF exp blockiff
    (155) conelseif -> . RELSEIF exp

    END             shift and go to state 309
    RELSE           shift and go to state 310
    RELSEIF         shift and go to state 221

    conelseif                      shift and go to state 311

state 220

    (153) elseifSt -> conelseif .

    END             reduce using rule 153 (elseifSt -> conelseif .)
    RELSE           reduce using rule 153 (elseifSt -> conelseif .)
    RELSEIF         reduce using rule 153 (elseifSt -> conelseif .)


state 221

    (154) conelseif -> RELSEIF . exp blockiff
    (155) conelseif -> RELSEIF . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 312

state 222

    (186) exp -> exp MAS exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 186 (exp -> exp MAS exp .)
    MAS             reduce using rule 186 (exp -> exp MAS exp .)
    MENOS           reduce using rule 186 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 186 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 186 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 186 (exp -> exp MAS exp .)
    MENOR           reduce using rule 186 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 186 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 186 (exp -> exp MAS exp .)
    ANDD            reduce using rule 186 (exp -> exp MAS exp .)
    ORR             reduce using rule 186 (exp -> exp MAS exp .)
    PRINT           reduce using rule 186 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 186 (exp -> exp MAS exp .)
    ID              reduce using rule 186 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 186 (exp -> exp MAS exp .)
    LOCAL           reduce using rule 186 (exp -> exp MAS exp .)
    RIF             reduce using rule 186 (exp -> exp MAS exp .)
    RWHILE          reduce using rule 186 (exp -> exp MAS exp .)
    RFOR            reduce using rule 186 (exp -> exp MAS exp .)
    RRETURN         reduce using rule 186 (exp -> exp MAS exp .)
    RBREAK          reduce using rule 186 (exp -> exp MAS exp .)
    RCONTINUE       reduce using rule 186 (exp -> exp MAS exp .)
    RPUSH           reduce using rule 186 (exp -> exp MAS exp .)
    RPOP            reduce using rule 186 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 186 (exp -> exp MAS exp .)
    PARDER          reduce using rule 186 (exp -> exp MAS exp .)
    COMA            reduce using rule 186 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 186 (exp -> exp MAS exp .)
    CORDER          reduce using rule 186 (exp -> exp MAS exp .)
    RELSE           reduce using rule 186 (exp -> exp MAS exp .)
    RELSEIF         reduce using rule 186 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MULTIPLICACION  [ reduce using rule 186 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 186 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 186 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 186 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 223

    (187) exp -> exp MENOS exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 187 (exp -> exp MENOS exp .)
    MAS             reduce using rule 187 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 187 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 187 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 187 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 187 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 187 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 187 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 187 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 187 (exp -> exp MENOS exp .)
    ORR             reduce using rule 187 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 187 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 187 (exp -> exp MENOS exp .)
    ID              reduce using rule 187 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 187 (exp -> exp MENOS exp .)
    LOCAL           reduce using rule 187 (exp -> exp MENOS exp .)
    RIF             reduce using rule 187 (exp -> exp MENOS exp .)
    RWHILE          reduce using rule 187 (exp -> exp MENOS exp .)
    RFOR            reduce using rule 187 (exp -> exp MENOS exp .)
    RRETURN         reduce using rule 187 (exp -> exp MENOS exp .)
    RBREAK          reduce using rule 187 (exp -> exp MENOS exp .)
    RCONTINUE       reduce using rule 187 (exp -> exp MENOS exp .)
    RPUSH           reduce using rule 187 (exp -> exp MENOS exp .)
    RPOP            reduce using rule 187 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 187 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 187 (exp -> exp MENOS exp .)
    COMA            reduce using rule 187 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 187 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 187 (exp -> exp MENOS exp .)
    RELSE           reduce using rule 187 (exp -> exp MENOS exp .)
    RELSEIF         reduce using rule 187 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MULTIPLICACION  [ reduce using rule 187 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 187 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 187 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 187 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 224

    (188) exp -> exp MULTIPLICACION exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    PRINTLN         reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    ID              reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    GLOBAL          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    LOCAL           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RIF             reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RWHILE          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RFOR            reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RRETURN         reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RBREAK          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RCONTINUE       reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RPUSH           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RPOP            reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RELSE           reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    RELSEIF         reduce using rule 188 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 188 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULTIPLICACION  [ shift and go to state 107 ]
  ! DIVISION        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 225

    (189) exp -> exp DIVISION exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 189 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 189 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 189 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 189 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 189 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 189 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 189 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 189 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 189 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 189 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 189 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 189 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 189 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 189 (exp -> exp DIVISION exp .)
    PRINT           reduce using rule 189 (exp -> exp DIVISION exp .)
    PRINTLN         reduce using rule 189 (exp -> exp DIVISION exp .)
    ID              reduce using rule 189 (exp -> exp DIVISION exp .)
    GLOBAL          reduce using rule 189 (exp -> exp DIVISION exp .)
    LOCAL           reduce using rule 189 (exp -> exp DIVISION exp .)
    RIF             reduce using rule 189 (exp -> exp DIVISION exp .)
    RWHILE          reduce using rule 189 (exp -> exp DIVISION exp .)
    RFOR            reduce using rule 189 (exp -> exp DIVISION exp .)
    RRETURN         reduce using rule 189 (exp -> exp DIVISION exp .)
    RBREAK          reduce using rule 189 (exp -> exp DIVISION exp .)
    RCONTINUE       reduce using rule 189 (exp -> exp DIVISION exp .)
    RPUSH           reduce using rule 189 (exp -> exp DIVISION exp .)
    RPOP            reduce using rule 189 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 189 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 189 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 189 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 189 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 189 (exp -> exp DIVISION exp .)
    RELSE           reduce using rule 189 (exp -> exp DIVISION exp .)
    RELSEIF         reduce using rule 189 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 189 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULTIPLICACION  [ shift and go to state 107 ]
  ! DIVISION        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 226

    (190) exp -> exp POTENCIA exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 190 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 190 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 190 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 190 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 190 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 190 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 190 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 190 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 190 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 190 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 190 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 190 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 190 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 190 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 190 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 190 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 190 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 190 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 190 (exp -> exp POTENCIA exp .)
    LOCAL           reduce using rule 190 (exp -> exp POTENCIA exp .)
    RIF             reduce using rule 190 (exp -> exp POTENCIA exp .)
    RWHILE          reduce using rule 190 (exp -> exp POTENCIA exp .)
    RFOR            reduce using rule 190 (exp -> exp POTENCIA exp .)
    RRETURN         reduce using rule 190 (exp -> exp POTENCIA exp .)
    RBREAK          reduce using rule 190 (exp -> exp POTENCIA exp .)
    RCONTINUE       reduce using rule 190 (exp -> exp POTENCIA exp .)
    RPUSH           reduce using rule 190 (exp -> exp POTENCIA exp .)
    RPOP            reduce using rule 190 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 190 (exp -> exp POTENCIA exp .)
    PARDER          reduce using rule 190 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 190 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 190 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 190 (exp -> exp POTENCIA exp .)
    RELSE           reduce using rule 190 (exp -> exp POTENCIA exp .)
    RELSEIF         reduce using rule 190 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULTIPLICACION  [ shift and go to state 107 ]
  ! DIVISION        [ shift and go to state 108 ]
  ! POTENCIA        [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 227

    (191) exp -> exp MODULO exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 191 (exp -> exp MODULO exp .)
    MAS             reduce using rule 191 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 191 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 191 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 191 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 191 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 191 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 191 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 191 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 191 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 191 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 191 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 191 (exp -> exp MODULO exp .)
    ORR             reduce using rule 191 (exp -> exp MODULO exp .)
    PRINT           reduce using rule 191 (exp -> exp MODULO exp .)
    PRINTLN         reduce using rule 191 (exp -> exp MODULO exp .)
    ID              reduce using rule 191 (exp -> exp MODULO exp .)
    GLOBAL          reduce using rule 191 (exp -> exp MODULO exp .)
    LOCAL           reduce using rule 191 (exp -> exp MODULO exp .)
    RIF             reduce using rule 191 (exp -> exp MODULO exp .)
    RWHILE          reduce using rule 191 (exp -> exp MODULO exp .)
    RFOR            reduce using rule 191 (exp -> exp MODULO exp .)
    RRETURN         reduce using rule 191 (exp -> exp MODULO exp .)
    RBREAK          reduce using rule 191 (exp -> exp MODULO exp .)
    RCONTINUE       reduce using rule 191 (exp -> exp MODULO exp .)
    RPUSH           reduce using rule 191 (exp -> exp MODULO exp .)
    RPOP            reduce using rule 191 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 191 (exp -> exp MODULO exp .)
    PARDER          reduce using rule 191 (exp -> exp MODULO exp .)
    COMA            reduce using rule 191 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 191 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 191 (exp -> exp MODULO exp .)
    RELSE           reduce using rule 191 (exp -> exp MODULO exp .)
    RELSEIF         reduce using rule 191 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 109

  ! POTENCIA        [ reduce using rule 191 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! MULTIPLICACION  [ shift and go to state 107 ]
  ! DIVISION        [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 228

    (193) exp -> exp IGUALIGUAL exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    ANDD            reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    ORR             reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    PRINT           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    PRINTLN         reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    ID              reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    GLOBAL          reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    LOCAL           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RIF             reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RWHILE          reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RFOR            reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RRETURN         reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RBREAK          reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RCONTINUE       reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RPUSH           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RPOP            reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RELSE           reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    RELSEIF         reduce using rule 193 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 193 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 193 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 193 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 193 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 193 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 193 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 229

    (194) exp -> exp DISTINTO exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 194 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 194 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 194 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 194 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 194 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 194 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 194 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 194 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 194 (exp -> exp DISTINTO exp .)
    PRINT           reduce using rule 194 (exp -> exp DISTINTO exp .)
    PRINTLN         reduce using rule 194 (exp -> exp DISTINTO exp .)
    ID              reduce using rule 194 (exp -> exp DISTINTO exp .)
    GLOBAL          reduce using rule 194 (exp -> exp DISTINTO exp .)
    LOCAL           reduce using rule 194 (exp -> exp DISTINTO exp .)
    RIF             reduce using rule 194 (exp -> exp DISTINTO exp .)
    RWHILE          reduce using rule 194 (exp -> exp DISTINTO exp .)
    RFOR            reduce using rule 194 (exp -> exp DISTINTO exp .)
    RRETURN         reduce using rule 194 (exp -> exp DISTINTO exp .)
    RBREAK          reduce using rule 194 (exp -> exp DISTINTO exp .)
    RCONTINUE       reduce using rule 194 (exp -> exp DISTINTO exp .)
    RPUSH           reduce using rule 194 (exp -> exp DISTINTO exp .)
    RPOP            reduce using rule 194 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 194 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 194 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 194 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 194 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 194 (exp -> exp DISTINTO exp .)
    RELSE           reduce using rule 194 (exp -> exp DISTINTO exp .)
    RELSEIF         reduce using rule 194 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 194 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 194 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 194 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 194 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 194 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 194 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 230

    (195) exp -> exp MAYOR exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 195 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 195 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 195 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 195 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 195 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 195 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 195 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 195 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 195 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 195 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 195 (exp -> exp MAYOR exp .)
    ID              reduce using rule 195 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 195 (exp -> exp MAYOR exp .)
    LOCAL           reduce using rule 195 (exp -> exp MAYOR exp .)
    RIF             reduce using rule 195 (exp -> exp MAYOR exp .)
    RWHILE          reduce using rule 195 (exp -> exp MAYOR exp .)
    RFOR            reduce using rule 195 (exp -> exp MAYOR exp .)
    RRETURN         reduce using rule 195 (exp -> exp MAYOR exp .)
    RBREAK          reduce using rule 195 (exp -> exp MAYOR exp .)
    RCONTINUE       reduce using rule 195 (exp -> exp MAYOR exp .)
    RPUSH           reduce using rule 195 (exp -> exp MAYOR exp .)
    RPOP            reduce using rule 195 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 195 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 195 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 195 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 195 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 195 (exp -> exp MAYOR exp .)
    RELSE           reduce using rule 195 (exp -> exp MAYOR exp .)
    RELSEIF         reduce using rule 195 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 195 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 195 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 195 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 195 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 195 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 195 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 231

    (196) exp -> exp MENOR exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 196 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 196 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 196 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 196 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 196 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 196 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 196 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 196 (exp -> exp MENOR exp .)
    ORR             reduce using rule 196 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 196 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 196 (exp -> exp MENOR exp .)
    ID              reduce using rule 196 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 196 (exp -> exp MENOR exp .)
    LOCAL           reduce using rule 196 (exp -> exp MENOR exp .)
    RIF             reduce using rule 196 (exp -> exp MENOR exp .)
    RWHILE          reduce using rule 196 (exp -> exp MENOR exp .)
    RFOR            reduce using rule 196 (exp -> exp MENOR exp .)
    RRETURN         reduce using rule 196 (exp -> exp MENOR exp .)
    RBREAK          reduce using rule 196 (exp -> exp MENOR exp .)
    RCONTINUE       reduce using rule 196 (exp -> exp MENOR exp .)
    RPUSH           reduce using rule 196 (exp -> exp MENOR exp .)
    RPOP            reduce using rule 196 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 196 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 196 (exp -> exp MENOR exp .)
    COMA            reduce using rule 196 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 196 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 196 (exp -> exp MENOR exp .)
    RELSE           reduce using rule 196 (exp -> exp MENOR exp .)
    RELSEIF         reduce using rule 196 (exp -> exp MENOR exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 196 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 196 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 196 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 196 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 196 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 196 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 232

    (197) exp -> exp MAYORIGUAL exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    LOCAL           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RIF             reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RWHILE          reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RFOR            reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RRETURN         reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RBREAK          reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RCONTINUE       reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RPUSH           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RPOP            reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RELSE           reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    RELSEIF         reduce using rule 197 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 197 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 197 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 197 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 197 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 197 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 197 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 233

    (198) exp -> exp MENORIGUAL exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    LOCAL           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RIF             reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RWHILE          reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RFOR            reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RRETURN         reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RBREAK          reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RCONTINUE       reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RPUSH           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RPOP            reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RELSE           reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    RELSEIF         reduce using rule 198 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 198 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 198 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 198 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 198 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 198 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 198 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 111 ]
  ! DISTINTO        [ shift and go to state 112 ]
  ! MAYOR           [ shift and go to state 113 ]
  ! MENOR           [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 234

    (199) exp -> exp ANDD exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 199 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 199 (exp -> exp ANDD exp .)
    PRINT           reduce using rule 199 (exp -> exp ANDD exp .)
    PRINTLN         reduce using rule 199 (exp -> exp ANDD exp .)
    ID              reduce using rule 199 (exp -> exp ANDD exp .)
    GLOBAL          reduce using rule 199 (exp -> exp ANDD exp .)
    LOCAL           reduce using rule 199 (exp -> exp ANDD exp .)
    RIF             reduce using rule 199 (exp -> exp ANDD exp .)
    RWHILE          reduce using rule 199 (exp -> exp ANDD exp .)
    RFOR            reduce using rule 199 (exp -> exp ANDD exp .)
    RRETURN         reduce using rule 199 (exp -> exp ANDD exp .)
    RBREAK          reduce using rule 199 (exp -> exp ANDD exp .)
    RCONTINUE       reduce using rule 199 (exp -> exp ANDD exp .)
    RPUSH           reduce using rule 199 (exp -> exp ANDD exp .)
    RPOP            reduce using rule 199 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 199 (exp -> exp ANDD exp .)
    PARDER          reduce using rule 199 (exp -> exp ANDD exp .)
    COMA            reduce using rule 199 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 199 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 199 (exp -> exp ANDD exp .)
    RELSE           reduce using rule 199 (exp -> exp ANDD exp .)
    RELSEIF         reduce using rule 199 (exp -> exp ANDD exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ORR             shift and go to state 118

  ! MAS             [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 199 (exp -> exp ANDD exp .) ]
  ! ANDD            [ shift and go to state 117 ]


state 235

    (200) exp -> exp ORR exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    END             reduce using rule 200 (exp -> exp ORR exp .)
    ANDD            reduce using rule 200 (exp -> exp ORR exp .)
    ORR             reduce using rule 200 (exp -> exp ORR exp .)
    PRINT           reduce using rule 200 (exp -> exp ORR exp .)
    PRINTLN         reduce using rule 200 (exp -> exp ORR exp .)
    ID              reduce using rule 200 (exp -> exp ORR exp .)
    GLOBAL          reduce using rule 200 (exp -> exp ORR exp .)
    LOCAL           reduce using rule 200 (exp -> exp ORR exp .)
    RIF             reduce using rule 200 (exp -> exp ORR exp .)
    RWHILE          reduce using rule 200 (exp -> exp ORR exp .)
    RFOR            reduce using rule 200 (exp -> exp ORR exp .)
    RRETURN         reduce using rule 200 (exp -> exp ORR exp .)
    RBREAK          reduce using rule 200 (exp -> exp ORR exp .)
    RCONTINUE       reduce using rule 200 (exp -> exp ORR exp .)
    RPUSH           reduce using rule 200 (exp -> exp ORR exp .)
    RPOP            reduce using rule 200 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 200 (exp -> exp ORR exp .)
    PARDER          reduce using rule 200 (exp -> exp ORR exp .)
    COMA            reduce using rule 200 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 200 (exp -> exp ORR exp .)
    CORDER          reduce using rule 200 (exp -> exp ORR exp .)
    RELSE           reduce using rule 200 (exp -> exp ORR exp .)
    RELSEIF         reduce using rule 200 (exp -> exp ORR exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116

  ! MAS             [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 200 (exp -> exp ORR exp .) ]
  ! ANDD            [ shift and go to state 117 ]
  ! ORR             [ shift and go to state 118 ]


state 236

    (4) instructionsf -> instructionsf instructionf .

    PRINT           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    PRINTLN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    ID              reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    GLOBAL          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    LOCAL           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RIF             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RWHILE          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RFOR            reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RRETURN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RBREAK          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RCONTINUE       reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RPUSH           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RPOP            reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    END             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSE           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSEIF         reduce using rule 4 (instructionsf -> instructionsf instructionf .)


state 237

    (68) declarationf -> ID IGUAL . exp PTCOMA
    (69) declarationf -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (76) declarationf -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (77) declarationf -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 314
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 313

state 238

    (108) assignmentAf -> ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (114) assignmentAf -> ID listArray2 . IGUAL exp PTCOMA
    (115) assignmentAf -> ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 315
    CORIZQ          shift and go to state 90


state 239

    (70) declarationf -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> GLOBAL ID . IGUAL exp PTCOMA
    (72) declarationf -> GLOBAL ID . PTCOMA
    (78) declarationf -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (110) assignmentAf -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (116) assignmentAf -> GLOBAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> GLOBAL ID . listArray2 IGUAL exp PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 316
    PTCOMA          shift and go to state 317
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 318

state 240

    (73) declarationf -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> LOCAL ID . IGUAL exp PTCOMA
    (75) declarationf -> LOCAL ID . PTCOMA
    (80) declarationf -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAf -> LOCAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> LOCAL ID . listArray2 IGUAL exp PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 319
    PTCOMA          shift and go to state 320
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 321

state 241

    (182) listArray -> listArray CORIZQ . exp CORDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 322

state 242

    (183) listArray -> CORIZQ exp . CORDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    CORDER          shift and go to state 323
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 243

    (203) exp -> UPPERCASE PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 324
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 244

    (244) exp -> PARIZQ exp PARDER .

    END             reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    PRINT           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    ID              reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    LOCAL           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RIF             reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RWHILE          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RFOR            reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RRETURN         reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RBREAK          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RPUSH           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RPOP            reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    PARDER          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RELSE           reduce using rule 244 (exp -> PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 244 (exp -> PARIZQ exp PARDER .)


state 245

    (204) exp -> LOWERCASE PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 325
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 246

    (205) exp -> LOG PARIZQ exp . COMA exp PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    COMA            shift and go to state 326
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 247

    (206) exp -> LOG10 PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 327
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 248

    (207) exp -> SIN PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 328
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 249

    (208) exp -> COS PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 329
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 250

    (209) exp -> TAN PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 330
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 251

    (210) exp -> SQRT PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 331
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 252

    (211) exp -> PARSE PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 332


state 253

    (234) typeDef -> RINT .

    COMA            reduce using rule 234 (typeDef -> RINT .)
    RIN             reduce using rule 234 (typeDef -> RINT .)
    PTCOMA          reduce using rule 234 (typeDef -> RINT .)
    END             reduce using rule 234 (typeDef -> RINT .)
    PRINT           reduce using rule 234 (typeDef -> RINT .)
    PRINTLN         reduce using rule 234 (typeDef -> RINT .)
    ID              reduce using rule 234 (typeDef -> RINT .)
    GLOBAL          reduce using rule 234 (typeDef -> RINT .)
    LOCAL           reduce using rule 234 (typeDef -> RINT .)
    RIF             reduce using rule 234 (typeDef -> RINT .)
    RWHILE          reduce using rule 234 (typeDef -> RINT .)
    RFOR            reduce using rule 234 (typeDef -> RINT .)
    RRETURN         reduce using rule 234 (typeDef -> RINT .)
    RBREAK          reduce using rule 234 (typeDef -> RINT .)
    RCONTINUE       reduce using rule 234 (typeDef -> RINT .)
    RPUSH           reduce using rule 234 (typeDef -> RINT .)
    RPOP            reduce using rule 234 (typeDef -> RINT .)
    PARDER          reduce using rule 234 (typeDef -> RINT .)
    MAS             reduce using rule 234 (typeDef -> RINT .)
    MENOS           reduce using rule 234 (typeDef -> RINT .)
    MULTIPLICACION  reduce using rule 234 (typeDef -> RINT .)
    DIVISION        reduce using rule 234 (typeDef -> RINT .)
    POTENCIA        reduce using rule 234 (typeDef -> RINT .)
    MODULO          reduce using rule 234 (typeDef -> RINT .)
    IGUALIGUAL      reduce using rule 234 (typeDef -> RINT .)
    DISTINTO        reduce using rule 234 (typeDef -> RINT .)
    MAYOR           reduce using rule 234 (typeDef -> RINT .)
    MENOR           reduce using rule 234 (typeDef -> RINT .)
    MAYORIGUAL      reduce using rule 234 (typeDef -> RINT .)
    MENORIGUAL      reduce using rule 234 (typeDef -> RINT .)
    ANDD            reduce using rule 234 (typeDef -> RINT .)
    ORR             reduce using rule 234 (typeDef -> RINT .)
    DOSPT           reduce using rule 234 (typeDef -> RINT .)
    CORDER          reduce using rule 234 (typeDef -> RINT .)
    RELSE           reduce using rule 234 (typeDef -> RINT .)
    RELSEIF         reduce using rule 234 (typeDef -> RINT .)


state 254

    (235) typeDef -> RFLOAT .

    COMA            reduce using rule 235 (typeDef -> RFLOAT .)
    RIN             reduce using rule 235 (typeDef -> RFLOAT .)
    PTCOMA          reduce using rule 235 (typeDef -> RFLOAT .)
    END             reduce using rule 235 (typeDef -> RFLOAT .)
    PRINT           reduce using rule 235 (typeDef -> RFLOAT .)
    PRINTLN         reduce using rule 235 (typeDef -> RFLOAT .)
    ID              reduce using rule 235 (typeDef -> RFLOAT .)
    GLOBAL          reduce using rule 235 (typeDef -> RFLOAT .)
    LOCAL           reduce using rule 235 (typeDef -> RFLOAT .)
    RIF             reduce using rule 235 (typeDef -> RFLOAT .)
    RWHILE          reduce using rule 235 (typeDef -> RFLOAT .)
    RFOR            reduce using rule 235 (typeDef -> RFLOAT .)
    RRETURN         reduce using rule 235 (typeDef -> RFLOAT .)
    RBREAK          reduce using rule 235 (typeDef -> RFLOAT .)
    RCONTINUE       reduce using rule 235 (typeDef -> RFLOAT .)
    RPUSH           reduce using rule 235 (typeDef -> RFLOAT .)
    RPOP            reduce using rule 235 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 235 (typeDef -> RFLOAT .)
    MAS             reduce using rule 235 (typeDef -> RFLOAT .)
    MENOS           reduce using rule 235 (typeDef -> RFLOAT .)
    MULTIPLICACION  reduce using rule 235 (typeDef -> RFLOAT .)
    DIVISION        reduce using rule 235 (typeDef -> RFLOAT .)
    POTENCIA        reduce using rule 235 (typeDef -> RFLOAT .)
    MODULO          reduce using rule 235 (typeDef -> RFLOAT .)
    IGUALIGUAL      reduce using rule 235 (typeDef -> RFLOAT .)
    DISTINTO        reduce using rule 235 (typeDef -> RFLOAT .)
    MAYOR           reduce using rule 235 (typeDef -> RFLOAT .)
    MENOR           reduce using rule 235 (typeDef -> RFLOAT .)
    MAYORIGUAL      reduce using rule 235 (typeDef -> RFLOAT .)
    MENORIGUAL      reduce using rule 235 (typeDef -> RFLOAT .)
    ANDD            reduce using rule 235 (typeDef -> RFLOAT .)
    ORR             reduce using rule 235 (typeDef -> RFLOAT .)
    DOSPT           reduce using rule 235 (typeDef -> RFLOAT .)
    CORDER          reduce using rule 235 (typeDef -> RFLOAT .)
    RELSE           reduce using rule 235 (typeDef -> RFLOAT .)
    RELSEIF         reduce using rule 235 (typeDef -> RFLOAT .)


state 255

    (236) typeDef -> RSTRING .

    COMA            reduce using rule 236 (typeDef -> RSTRING .)
    RIN             reduce using rule 236 (typeDef -> RSTRING .)
    PTCOMA          reduce using rule 236 (typeDef -> RSTRING .)
    END             reduce using rule 236 (typeDef -> RSTRING .)
    PRINT           reduce using rule 236 (typeDef -> RSTRING .)
    PRINTLN         reduce using rule 236 (typeDef -> RSTRING .)
    ID              reduce using rule 236 (typeDef -> RSTRING .)
    GLOBAL          reduce using rule 236 (typeDef -> RSTRING .)
    LOCAL           reduce using rule 236 (typeDef -> RSTRING .)
    RIF             reduce using rule 236 (typeDef -> RSTRING .)
    RWHILE          reduce using rule 236 (typeDef -> RSTRING .)
    RFOR            reduce using rule 236 (typeDef -> RSTRING .)
    RRETURN         reduce using rule 236 (typeDef -> RSTRING .)
    RBREAK          reduce using rule 236 (typeDef -> RSTRING .)
    RCONTINUE       reduce using rule 236 (typeDef -> RSTRING .)
    RPUSH           reduce using rule 236 (typeDef -> RSTRING .)
    RPOP            reduce using rule 236 (typeDef -> RSTRING .)
    PARDER          reduce using rule 236 (typeDef -> RSTRING .)
    MAS             reduce using rule 236 (typeDef -> RSTRING .)
    MENOS           reduce using rule 236 (typeDef -> RSTRING .)
    MULTIPLICACION  reduce using rule 236 (typeDef -> RSTRING .)
    DIVISION        reduce using rule 236 (typeDef -> RSTRING .)
    POTENCIA        reduce using rule 236 (typeDef -> RSTRING .)
    MODULO          reduce using rule 236 (typeDef -> RSTRING .)
    IGUALIGUAL      reduce using rule 236 (typeDef -> RSTRING .)
    DISTINTO        reduce using rule 236 (typeDef -> RSTRING .)
    MAYOR           reduce using rule 236 (typeDef -> RSTRING .)
    MENOR           reduce using rule 236 (typeDef -> RSTRING .)
    MAYORIGUAL      reduce using rule 236 (typeDef -> RSTRING .)
    MENORIGUAL      reduce using rule 236 (typeDef -> RSTRING .)
    ANDD            reduce using rule 236 (typeDef -> RSTRING .)
    ORR             reduce using rule 236 (typeDef -> RSTRING .)
    DOSPT           reduce using rule 236 (typeDef -> RSTRING .)
    CORDER          reduce using rule 236 (typeDef -> RSTRING .)
    RELSE           reduce using rule 236 (typeDef -> RSTRING .)
    RELSEIF         reduce using rule 236 (typeDef -> RSTRING .)


state 256

    (237) typeDef -> RCHAR .

    COMA            reduce using rule 237 (typeDef -> RCHAR .)
    RIN             reduce using rule 237 (typeDef -> RCHAR .)
    PTCOMA          reduce using rule 237 (typeDef -> RCHAR .)
    END             reduce using rule 237 (typeDef -> RCHAR .)
    PRINT           reduce using rule 237 (typeDef -> RCHAR .)
    PRINTLN         reduce using rule 237 (typeDef -> RCHAR .)
    ID              reduce using rule 237 (typeDef -> RCHAR .)
    GLOBAL          reduce using rule 237 (typeDef -> RCHAR .)
    LOCAL           reduce using rule 237 (typeDef -> RCHAR .)
    RIF             reduce using rule 237 (typeDef -> RCHAR .)
    RWHILE          reduce using rule 237 (typeDef -> RCHAR .)
    RFOR            reduce using rule 237 (typeDef -> RCHAR .)
    RRETURN         reduce using rule 237 (typeDef -> RCHAR .)
    RBREAK          reduce using rule 237 (typeDef -> RCHAR .)
    RCONTINUE       reduce using rule 237 (typeDef -> RCHAR .)
    RPUSH           reduce using rule 237 (typeDef -> RCHAR .)
    RPOP            reduce using rule 237 (typeDef -> RCHAR .)
    PARDER          reduce using rule 237 (typeDef -> RCHAR .)
    MAS             reduce using rule 237 (typeDef -> RCHAR .)
    MENOS           reduce using rule 237 (typeDef -> RCHAR .)
    MULTIPLICACION  reduce using rule 237 (typeDef -> RCHAR .)
    DIVISION        reduce using rule 237 (typeDef -> RCHAR .)
    POTENCIA        reduce using rule 237 (typeDef -> RCHAR .)
    MODULO          reduce using rule 237 (typeDef -> RCHAR .)
    IGUALIGUAL      reduce using rule 237 (typeDef -> RCHAR .)
    DISTINTO        reduce using rule 237 (typeDef -> RCHAR .)
    MAYOR           reduce using rule 237 (typeDef -> RCHAR .)
    MENOR           reduce using rule 237 (typeDef -> RCHAR .)
    MAYORIGUAL      reduce using rule 237 (typeDef -> RCHAR .)
    MENORIGUAL      reduce using rule 237 (typeDef -> RCHAR .)
    ANDD            reduce using rule 237 (typeDef -> RCHAR .)
    ORR             reduce using rule 237 (typeDef -> RCHAR .)
    DOSPT           reduce using rule 237 (typeDef -> RCHAR .)
    CORDER          reduce using rule 237 (typeDef -> RCHAR .)
    RELSE           reduce using rule 237 (typeDef -> RCHAR .)
    RELSEIF         reduce using rule 237 (typeDef -> RCHAR .)


state 257

    (238) typeDef -> RBOOL .

    COMA            reduce using rule 238 (typeDef -> RBOOL .)
    RIN             reduce using rule 238 (typeDef -> RBOOL .)
    PTCOMA          reduce using rule 238 (typeDef -> RBOOL .)
    END             reduce using rule 238 (typeDef -> RBOOL .)
    PRINT           reduce using rule 238 (typeDef -> RBOOL .)
    PRINTLN         reduce using rule 238 (typeDef -> RBOOL .)
    ID              reduce using rule 238 (typeDef -> RBOOL .)
    GLOBAL          reduce using rule 238 (typeDef -> RBOOL .)
    LOCAL           reduce using rule 238 (typeDef -> RBOOL .)
    RIF             reduce using rule 238 (typeDef -> RBOOL .)
    RWHILE          reduce using rule 238 (typeDef -> RBOOL .)
    RFOR            reduce using rule 238 (typeDef -> RBOOL .)
    RRETURN         reduce using rule 238 (typeDef -> RBOOL .)
    RBREAK          reduce using rule 238 (typeDef -> RBOOL .)
    RCONTINUE       reduce using rule 238 (typeDef -> RBOOL .)
    RPUSH           reduce using rule 238 (typeDef -> RBOOL .)
    RPOP            reduce using rule 238 (typeDef -> RBOOL .)
    PARDER          reduce using rule 238 (typeDef -> RBOOL .)
    MAS             reduce using rule 238 (typeDef -> RBOOL .)
    MENOS           reduce using rule 238 (typeDef -> RBOOL .)
    MULTIPLICACION  reduce using rule 238 (typeDef -> RBOOL .)
    DIVISION        reduce using rule 238 (typeDef -> RBOOL .)
    POTENCIA        reduce using rule 238 (typeDef -> RBOOL .)
    MODULO          reduce using rule 238 (typeDef -> RBOOL .)
    IGUALIGUAL      reduce using rule 238 (typeDef -> RBOOL .)
    DISTINTO        reduce using rule 238 (typeDef -> RBOOL .)
    MAYOR           reduce using rule 238 (typeDef -> RBOOL .)
    MENOR           reduce using rule 238 (typeDef -> RBOOL .)
    MAYORIGUAL      reduce using rule 238 (typeDef -> RBOOL .)
    MENORIGUAL      reduce using rule 238 (typeDef -> RBOOL .)
    ANDD            reduce using rule 238 (typeDef -> RBOOL .)
    ORR             reduce using rule 238 (typeDef -> RBOOL .)
    DOSPT           reduce using rule 238 (typeDef -> RBOOL .)
    CORDER          reduce using rule 238 (typeDef -> RBOOL .)
    RELSE           reduce using rule 238 (typeDef -> RBOOL .)
    RELSEIF         reduce using rule 238 (typeDef -> RBOOL .)


state 258

    (239) typeDef -> RARRAY . LLAIZQ RINT LLADER
    (240) typeDef -> RARRAY . LLAIZQ RFLOAT LLADER
    (241) typeDef -> RARRAY . LLAIZQ RSTRING LLADER
    (242) typeDef -> RARRAY . LLAIZQ RCHAR LLADER
    (243) typeDef -> RARRAY . LLAIZQ RBOOL LLADER

    LLAIZQ          shift and go to state 333


state 259

    (212) exp -> TRUNC PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 334


state 260

    (213) exp -> TRUNC PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 335
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 261

    (214) exp -> MFLOAT PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 336
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 262

    (215) exp -> MSTRING PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 337
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 263

    (216) exp -> TYPEOF PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 338
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 264

    (217) exp -> RPUSH NOTT PARIZQ . ID COMA exp PARDER
    (218) exp -> RPUSH NOTT PARIZQ . ID COMA CORIZQ CORDER PARDER
    (219) exp -> RPUSH NOTT PARIZQ . ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> RPUSH NOTT PARIZQ . ID listArray2 COMA exp PARDER
    (221) exp -> RPUSH NOTT PARIZQ . ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> RPUSH NOTT PARIZQ . ID listArray2 COMA CORIZQ exps CORDER PARDER

    ID              shift and go to state 339


state 265

    (254) exp -> CORIZQ listValues CORDER .
    (255) exp -> CORIZQ listValues CORDER . DOSPT DOSPT typeDef

  ! shift/reduce conflict for DOSPT resolved as shift
    END             reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    PRINT           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    PRINTLN         reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    ID              reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    GLOBAL          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    LOCAL           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RIF             reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RWHILE          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RFOR            reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RRETURN         reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RBREAK          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RCONTINUE       reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RPUSH           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RPOP            reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    PARDER          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RELSE           reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    RELSEIF         reduce using rule 254 (exp -> CORIZQ listValues CORDER .)
    DOSPT           shift and go to state 340

  ! DOSPT           [ reduce using rule 254 (exp -> CORIZQ listValues CORDER .) ]


state 266

    (223) exp -> RPOP NOTT PARIZQ . ID PARDER
    (224) exp -> RPOP NOTT PARIZQ . ID listArray2 PARDER

    ID              shift and go to state 341


state 267

    (233) exp -> RLENGTH PARIZQ exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 342
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 268

    (174) blockc -> instructionsc END . PTCOMA

    PTCOMA          shift and go to state 343


state 269

    (6) instructionsc -> instructionsc instructionc .

    END             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINT           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINTLN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    ID              reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    LOCAL           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    GLOBAL          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RIF             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RWHILE          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RFOR            reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RRETURN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RBREAK          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RCONTINUE       reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RPUSH           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RPOP            reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSE           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSEIF         reduce using rule 6 (instructionsc -> instructionsc instructionc .)


state 270

    (175) blockc -> END PTCOMA .

    PRINT           reduce using rule 175 (blockc -> END PTCOMA .)
    PRINTLN         reduce using rule 175 (blockc -> END PTCOMA .)
    ID              reduce using rule 175 (blockc -> END PTCOMA .)
    GLOBAL          reduce using rule 175 (blockc -> END PTCOMA .)
    LOCAL           reduce using rule 175 (blockc -> END PTCOMA .)
    FUNCTION        reduce using rule 175 (blockc -> END PTCOMA .)
    RIF             reduce using rule 175 (blockc -> END PTCOMA .)
    RWHILE          reduce using rule 175 (blockc -> END PTCOMA .)
    RFOR            reduce using rule 175 (blockc -> END PTCOMA .)
    RRETURN         reduce using rule 175 (blockc -> END PTCOMA .)
    RBREAK          reduce using rule 175 (blockc -> END PTCOMA .)
    RCONTINUE       reduce using rule 175 (blockc -> END PTCOMA .)
    RPUSH           reduce using rule 175 (blockc -> END PTCOMA .)
    RPOP            reduce using rule 175 (blockc -> END PTCOMA .)
    $end            reduce using rule 175 (blockc -> END PTCOMA .)
    END             reduce using rule 175 (blockc -> END PTCOMA .)
    RELSE           reduce using rule 175 (blockc -> END PTCOMA .)
    RELSEIF         reduce using rule 175 (blockc -> END PTCOMA .)


state 271

    (82) declarationc -> ID IGUAL . exp PTCOMA
    (83) declarationc -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (90) declarationc -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (91) declarationc -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 345
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 344

state 272

    (120) assignmentAc -> ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (126) assignmentAc -> ID listArray2 . IGUAL exp PTCOMA
    (127) assignmentAc -> ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 346
    CORIZQ          shift and go to state 90


state 273

    (84) declarationc -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> LOCAL ID . IGUAL exp PTCOMA
    (86) declarationc -> LOCAL ID . PTCOMA
    (94) declarationc -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (130) assignmentAc -> LOCAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> LOCAL ID . listArray2 IGUAL exp PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 347
    PTCOMA          shift and go to state 348
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 349

state 274

    (87) declarationc -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> GLOBAL ID . IGUAL exp PTCOMA
    (89) declarationc -> GLOBAL ID . PTCOMA
    (92) declarationc -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA
    (122) assignmentAc -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID . listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (128) assignmentAc -> GLOBAL ID . listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> GLOBAL ID . listArray2 IGUAL exp PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    IGUAL           shift and go to state 350
    PTCOMA          shift and go to state 351
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 352

state 275

    (156) ifStc -> RIF exp . END PTCOMA
    (157) ifStc -> RIF exp . blockifc END PTCOMA
    (158) ifStc -> RIF exp . blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> RIF exp . blockifc RELSE END PTCOMA
    (160) ifStc -> RIF exp . blockifc elseifStc END PTCOMA
    (161) ifStc -> RIF exp . blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> RIF exp . blockifc elseifStc RELSE END PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (177) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 353
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockifc                       shift and go to state 354
    instructionsc                  shift and go to state 355
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 276

    (168) forSt -> RFOR parameterFor RIN exp . DOSPT exp blockc
    (169) forSt -> RFOR parameterFor RIN exp . blockc
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (174) blockc -> . instructionsc END PTCOMA
    (175) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    DOSPT           shift and go to state 356
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    END             shift and go to state 163
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockc                         shift and go to state 357
    instructionsc                  shift and go to state 162
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 277

    (170) parameterFor -> ID DOSPT DOSPT . typeDef
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 358

state 278

    (225) push -> RPUSH NOTT PARIZQ ID . COMA exp PARDER PTCOMA
    (226) push -> RPUSH NOTT PARIZQ ID . COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> RPUSH NOTT PARIZQ ID . COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> RPUSH NOTT PARIZQ ID . listArray2 COMA exp PARDER PTCOMA
    (229) push -> RPUSH NOTT PARIZQ ID . listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> RPUSH NOTT PARIZQ ID . listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    COMA            shift and go to state 359
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 360

state 279

    (231) pop -> RPOP NOTT PARIZQ ID . PARDER PTCOMA
    (232) pop -> RPOP NOTT PARIZQ ID . listArray2 PARDER PTCOMA
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    PARDER          shift and go to state 361
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 362

state 280

    (48) p_print -> PRINT PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RRETURN         reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RBREAK          reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RCONTINUE       reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RPUSH           reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RPOP            reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 48 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)


state 281

    (52) exps -> exps COMA exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          reduce using rule 52 (exps -> exps COMA exp .)
    COMA            reduce using rule 52 (exps -> exps COMA exp .)
    CORDER          reduce using rule 52 (exps -> exps COMA exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 282

    (50) p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RRETURN         reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RBREAK          reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RCONTINUE       reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RPUSH           reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RPOP            reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 50 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)


state 283

    (55) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 363

state 284

    (62) declaration -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (63) declaration -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 364
    DOSPT           shift and go to state 365


state 285

    (96) assignmentA -> ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (97) assignmentA -> ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 366
    COMA            shift and go to state 188


state 286

    (102) assignmentA -> ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)
    $end            reduce using rule 102 (assignmentA -> ID listArray2 IGUAL exp PTCOMA .)


state 287

    (103) assignmentA -> ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 367


state 288

    (184) listArray2 -> listArray2 CORIZQ exp CORDER .

    IGUAL           reduce using rule 184 (listArray2 -> listArray2 CORIZQ exp CORDER .)
    CORIZQ          reduce using rule 184 (listArray2 -> listArray2 CORIZQ exp CORDER .)
    COMA            reduce using rule 184 (listArray2 -> listArray2 CORIZQ exp CORDER .)
    PARDER          reduce using rule 184 (listArray2 -> listArray2 CORIZQ exp CORDER .)


state 289

    (143) listValues -> listValues COMA exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          reduce using rule 143 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 143 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 143 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 290

    (56) declaration -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 368


state 291

    (57) declaration -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 57 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)


state 292

    (64) declaration -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 369
    COMA            shift and go to state 188


state 293

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 370
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 294

    (104) assignmentA -> GLOBAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (105) assignmentA -> GLOBAL ID listArray2 IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 371
    PTCOMA          shift and go to state 372
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 295

    (59) declaration -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 373


state 296

    (60) declaration -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 60 (declaration -> LOCAL ID IGUAL exp PTCOMA .)


state 297

    (66) declaration -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 374
    COMA            shift and go to state 188


state 298

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 375
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 299

    (106) assignmentA -> LOCAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (107) assignmentA -> LOCAL ID listArray2 IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 376
    PTCOMA          shift and go to state 377
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 300

    (132) function -> FUNCTION ID parametersFunc DOSPT DOSPT . typeDef blockf
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 378

state 301

    (172) blockf -> instructionsf END . PTCOMA

    PTCOMA          shift and go to state 379


state 302

    (173) blockf -> END PTCOMA .

    PRINT           reduce using rule 173 (blockf -> END PTCOMA .)
    PRINTLN         reduce using rule 173 (blockf -> END PTCOMA .)
    ID              reduce using rule 173 (blockf -> END PTCOMA .)
    GLOBAL          reduce using rule 173 (blockf -> END PTCOMA .)
    LOCAL           reduce using rule 173 (blockf -> END PTCOMA .)
    FUNCTION        reduce using rule 173 (blockf -> END PTCOMA .)
    RIF             reduce using rule 173 (blockf -> END PTCOMA .)
    RWHILE          reduce using rule 173 (blockf -> END PTCOMA .)
    RFOR            reduce using rule 173 (blockf -> END PTCOMA .)
    RRETURN         reduce using rule 173 (blockf -> END PTCOMA .)
    RBREAK          reduce using rule 173 (blockf -> END PTCOMA .)
    RCONTINUE       reduce using rule 173 (blockf -> END PTCOMA .)
    RPUSH           reduce using rule 173 (blockf -> END PTCOMA .)
    RPOP            reduce using rule 173 (blockf -> END PTCOMA .)
    $end            reduce using rule 173 (blockf -> END PTCOMA .)


state 303

    (134) parametersFunc -> PARIZQ parameters PARDER .

    DOSPT           reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    END             reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    GLOBAL          reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    LOCAL           reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RFOR            reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RRETURN         reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RBREAK          reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RCONTINUE       reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RPUSH           reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)
    RPOP            reduce using rule 134 (parametersFunc -> PARIZQ parameters PARDER .)


state 304

    (136) parameters -> parameters COMA . parameter
    (138) parameter -> . ID DOSPT DOSPT typeDef
    (139) parameter -> . ID

    ID              shift and go to state 215

    parameter                      shift and go to state 380

state 305

    (138) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 381


state 306

    (146) ifSt -> RIF exp blockiff END PTCOMA .

    PRINT           reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    PRINTLN         reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    ID              reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    GLOBAL          reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    LOCAL           reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    FUNCTION        reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RIF             reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RWHILE          reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RFOR            reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RRETURN         reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RBREAK          reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RPUSH           reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RPOP            reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    $end            reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    END             reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSE           reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSEIF         reduce using rule 146 (ifSt -> RIF exp blockiff END PTCOMA .)


state 307

    (147) ifSt -> RIF exp blockiff RELSE blockiff . END PTCOMA

    END             shift and go to state 382


state 308

    (148) ifSt -> RIF exp blockiff RELSE END . PTCOMA

    PTCOMA          shift and go to state 383


state 309

    (149) ifSt -> RIF exp blockiff elseifSt END . PTCOMA

    PTCOMA          shift and go to state 384


state 310

    (150) ifSt -> RIF exp blockiff elseifSt RELSE . blockiff END PTCOMA
    (151) ifSt -> RIF exp blockiff elseifSt RELSE . END PTCOMA
    (176) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 386
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockiff                       shift and go to state 385
    instructionsf                  shift and go to state 119
    instructionf                   shift and go to state 120
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 311

    (152) elseifSt -> elseifSt conelseif .

    END             reduce using rule 152 (elseifSt -> elseifSt conelseif .)
    RELSE           reduce using rule 152 (elseifSt -> elseifSt conelseif .)
    RELSEIF         reduce using rule 152 (elseifSt -> elseifSt conelseif .)


state 312

    (154) conelseif -> RELSEIF exp . blockiff
    (155) conelseif -> RELSEIF exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (176) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             reduce using rule 155 (conelseif -> RELSEIF exp .)
    RELSE           reduce using rule 155 (conelseif -> RELSEIF exp .)
    RELSEIF         reduce using rule 155 (conelseif -> RELSEIF exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockiff                       shift and go to state 387
    instructionsf                  shift and go to state 119
    instructionf                   shift and go to state 120
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 313

    (68) declarationf -> ID IGUAL exp . PTCOMA
    (69) declarationf -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 388
    DOSPT           shift and go to state 389
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 314

    (76) declarationf -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (77) declarationf -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 390
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 315

    (108) assignmentAf -> ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (114) assignmentAf -> ID listArray2 IGUAL . exp PTCOMA
    (115) assignmentAf -> ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 391
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 392

state 316

    (70) declarationf -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> GLOBAL ID IGUAL . exp PTCOMA
    (78) declarationf -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 394
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 393

state 317

    (72) declarationf -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RPUSH           reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RPOP            reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    END             reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 72 (declarationf -> GLOBAL ID PTCOMA .)


state 318

    (110) assignmentAf -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (116) assignmentAf -> GLOBAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> GLOBAL ID listArray2 . IGUAL exp PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 395
    CORIZQ          shift and go to state 90


state 319

    (73) declarationf -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> LOCAL ID IGUAL . exp PTCOMA
    (80) declarationf -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 397
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 396

state 320

    (75) declarationf -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    ID              reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RPUSH           reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RPOP            reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    END             reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 75 (declarationf -> LOCAL ID PTCOMA .)


state 321

    (112) assignmentAf -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (118) assignmentAf -> LOCAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> LOCAL ID listArray2 . IGUAL exp PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 398
    CORIZQ          shift and go to state 90


state 322

    (182) listArray -> listArray CORIZQ exp . CORDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    CORDER          shift and go to state 399
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 323

    (183) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    END             reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    PRINT           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    ID              reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    LOCAL           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RIF             reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RWHILE          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RFOR            reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RRETURN         reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RBREAK          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RCONTINUE       reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RPUSH           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RPOP            reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RELSE           reduce using rule 183 (listArray -> CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 183 (listArray -> CORIZQ exp CORDER .)


state 324

    (203) exp -> UPPERCASE PARIZQ exp PARDER .

    END             reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RRETURN         reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RBREAK          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RPUSH           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RPOP            reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 203 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 325

    (204) exp -> LOWERCASE PARIZQ exp PARDER .

    END             reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RRETURN         reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RBREAK          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RPUSH           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RPOP            reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 204 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 326

    (205) exp -> LOG PARIZQ exp COMA . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 400

state 327

    (206) exp -> LOG10 PARIZQ exp PARDER .

    END             reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MAS             reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOS           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    DIVISION        reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MODULO          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYOR           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOR           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    ANDD            reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    ORR             reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINT           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    ID              reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    LOCAL           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RIF             reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RWHILE          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RFOR            reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RRETURN         reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RBREAK          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RPUSH           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RPOP            reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    PARDER          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    COMA            reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    DOSPT           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    CORDER          reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSE           reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 206 (exp -> LOG10 PARIZQ exp PARDER .)


state 328

    (207) exp -> SIN PARIZQ exp PARDER .

    END             reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MAS             reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MENOS           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MODULO          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MENOR           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    ANDD            reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    ORR             reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    PRINT           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    ID              reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RIF             reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RFOR            reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RRETURN         reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RBREAK          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RPUSH           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RPOP            reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    PARDER          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    COMA            reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    CORDER          reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RELSE           reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 207 (exp -> SIN PARIZQ exp PARDER .)


state 329

    (208) exp -> COS PARIZQ exp PARDER .

    END             reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MAS             reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MENOS           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    DIVISION        reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MODULO          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MAYOR           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MENOR           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    ANDD            reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    ORR             reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    PRINT           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    ID              reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    LOCAL           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RIF             reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RWHILE          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RFOR            reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RRETURN         reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RBREAK          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RPUSH           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RPOP            reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    PARDER          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    COMA            reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    DOSPT           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    CORDER          reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RELSE           reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 208 (exp -> COS PARIZQ exp PARDER .)


state 330

    (209) exp -> TAN PARIZQ exp PARDER .

    END             reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MAS             reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MENOS           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MODULO          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MENOR           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    ANDD            reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    ORR             reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    PRINT           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    ID              reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RIF             reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RFOR            reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RRETURN         reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RBREAK          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RPUSH           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RPOP            reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    PARDER          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    COMA            reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    CORDER          reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RELSE           reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 209 (exp -> TAN PARIZQ exp PARDER .)


state 331

    (210) exp -> SQRT PARIZQ exp PARDER .

    END             reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MAS             reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MENOS           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MODULO          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MENOR           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    ANDD            reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    ORR             reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    PRINT           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    ID              reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RIF             reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RFOR            reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RRETURN         reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RBREAK          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RPUSH           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RPOP            reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    PARDER          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    COMA            reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    CORDER          reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RELSE           reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 210 (exp -> SQRT PARIZQ exp PARDER .)


state 332

    (211) exp -> PARSE PARIZQ typeDef COMA . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 401

state 333

    (239) typeDef -> RARRAY LLAIZQ . RINT LLADER
    (240) typeDef -> RARRAY LLAIZQ . RFLOAT LLADER
    (241) typeDef -> RARRAY LLAIZQ . RSTRING LLADER
    (242) typeDef -> RARRAY LLAIZQ . RCHAR LLADER
    (243) typeDef -> RARRAY LLAIZQ . RBOOL LLADER

    RINT            shift and go to state 402
    RFLOAT          shift and go to state 403
    RSTRING         shift and go to state 404
    RCHAR           shift and go to state 405
    RBOOL           shift and go to state 406


state 334

    (212) exp -> TRUNC PARIZQ typeDef COMA . exp PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 407

state 335

    (213) exp -> TRUNC PARIZQ exp PARDER .

    END             reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MAS             reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MENOS           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    DIVISION        reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MODULO          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MAYOR           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MENOR           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    ANDD            reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    ORR             reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    PRINT           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    ID              reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    LOCAL           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RIF             reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RWHILE          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RFOR            reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RRETURN         reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RBREAK          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RPUSH           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RPOP            reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    PARDER          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    COMA            reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    DOSPT           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    CORDER          reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RELSE           reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 213 (exp -> TRUNC PARIZQ exp PARDER .)


state 336

    (214) exp -> MFLOAT PARIZQ exp PARDER .

    END             reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAS             reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOS           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MODULO          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOR           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    ANDD            reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    ORR             reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINT           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    ID              reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RIF             reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RFOR            reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RRETURN         reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RBREAK          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RPUSH           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RPOP            reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    PARDER          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    COMA            reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    CORDER          reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSE           reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 214 (exp -> MFLOAT PARIZQ exp PARDER .)


state 337

    (215) exp -> MSTRING PARIZQ exp PARDER .

    END             reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MAS             reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOS           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    DIVISION        reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MODULO          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYOR           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOR           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    ANDD            reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    ORR             reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINT           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    ID              reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    LOCAL           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RIF             reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RWHILE          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RFOR            reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RRETURN         reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RBREAK          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RPUSH           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RPOP            reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    PARDER          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    COMA            reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    DOSPT           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    CORDER          reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSE           reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 215 (exp -> MSTRING PARIZQ exp PARDER .)


state 338

    (216) exp -> TYPEOF PARIZQ exp PARDER .

    END             reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAS             reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOS           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    DIVISION        reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MODULO          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYOR           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOR           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    ANDD            reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    ORR             reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINT           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    ID              reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    LOCAL           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RIF             reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RWHILE          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RFOR            reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RRETURN         reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RBREAK          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RPUSH           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RPOP            reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    PARDER          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    COMA            reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    DOSPT           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    CORDER          reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSE           reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 216 (exp -> TYPEOF PARIZQ exp PARDER .)


state 339

    (217) exp -> RPUSH NOTT PARIZQ ID . COMA exp PARDER
    (218) exp -> RPUSH NOTT PARIZQ ID . COMA CORIZQ CORDER PARDER
    (219) exp -> RPUSH NOTT PARIZQ ID . COMA CORIZQ exps CORDER PARDER
    (220) exp -> RPUSH NOTT PARIZQ ID . listArray2 COMA exp PARDER
    (221) exp -> RPUSH NOTT PARIZQ ID . listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> RPUSH NOTT PARIZQ ID . listArray2 COMA CORIZQ exps CORDER PARDER
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    COMA            shift and go to state 408
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 409

state 340

    (255) exp -> CORIZQ listValues CORDER DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 410


state 341

    (223) exp -> RPOP NOTT PARIZQ ID . PARDER
    (224) exp -> RPOP NOTT PARIZQ ID . listArray2 PARDER
    (184) listArray2 -> . listArray2 CORIZQ exp CORDER
    (185) listArray2 -> . CORIZQ exp CORDER

    PARDER          shift and go to state 411
    CORIZQ          shift and go to state 36

    listArray2                     shift and go to state 412

state 342

    (233) exp -> RLENGTH PARIZQ exp PARDER .

    END             reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MAS             reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MENOS           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    DIVISION        reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MODULO          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MAYOR           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MENOR           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    ANDD            reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    ORR             reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    PRINT           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    ID              reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    LOCAL           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RIF             reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RWHILE          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RFOR            reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RRETURN         reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RBREAK          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RPUSH           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RPOP            reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    PARDER          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    COMA            reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    DOSPT           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    CORDER          reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RELSE           reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 233 (exp -> RLENGTH PARIZQ exp PARDER .)


state 343

    (174) blockc -> instructionsc END PTCOMA .

    PRINT           reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    PRINTLN         reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    ID              reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    GLOBAL          reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    LOCAL           reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    FUNCTION        reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RIF             reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RWHILE          reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RFOR            reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RRETURN         reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RBREAK          reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RCONTINUE       reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RPUSH           reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RPOP            reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    $end            reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    END             reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RELSE           reduce using rule 174 (blockc -> instructionsc END PTCOMA .)
    RELSEIF         reduce using rule 174 (blockc -> instructionsc END PTCOMA .)


state 344

    (82) declarationc -> ID IGUAL exp . PTCOMA
    (83) declarationc -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 413
    DOSPT           shift and go to state 414
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 345

    (90) declarationc -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (91) declarationc -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 415
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 346

    (120) assignmentAc -> ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (126) assignmentAc -> ID listArray2 IGUAL . exp PTCOMA
    (127) assignmentAc -> ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 416
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 417

state 347

    (84) declarationc -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> LOCAL ID IGUAL . exp PTCOMA
    (94) declarationc -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 419
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 418

state 348

    (86) declarationc -> LOCAL ID PTCOMA .

    END             reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    PRINT           reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    ID              reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RPUSH           reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RPOP            reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 86 (declarationc -> LOCAL ID PTCOMA .)


state 349

    (124) assignmentAc -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (130) assignmentAc -> LOCAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> LOCAL ID listArray2 . IGUAL exp PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 420
    CORIZQ          shift and go to state 90


state 350

    (87) declarationc -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> GLOBAL ID IGUAL . exp PTCOMA
    (92) declarationc -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 422
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 421

state 351

    (89) declarationc -> GLOBAL ID PTCOMA .

    END             reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    PRINT           reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RPUSH           reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RPOP            reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 89 (declarationc -> GLOBAL ID PTCOMA .)


state 352

    (122) assignmentAc -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 . IGUAL CORIZQ exps CORDER PTCOMA
    (128) assignmentAc -> GLOBAL ID listArray2 . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> GLOBAL ID listArray2 . IGUAL exp PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    IGUAL           shift and go to state 423
    CORIZQ          shift and go to state 90


state 353

    (156) ifStc -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 424


state 354

    (157) ifStc -> RIF exp blockifc . END PTCOMA
    (158) ifStc -> RIF exp blockifc . RELSE blockifc END PTCOMA
    (159) ifStc -> RIF exp blockifc . RELSE END PTCOMA
    (160) ifStc -> RIF exp blockifc . elseifStc END PTCOMA
    (161) ifStc -> RIF exp blockifc . elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> RIF exp blockifc . elseifStc RELSE END PTCOMA
    (163) elseifStc -> . elseifStc conelseifc
    (164) elseifStc -> . conelseifc
    (165) conelseifc -> . RELSEIF exp blockifc
    (166) conelseifc -> . RELSEIF exp

    END             shift and go to state 425
    RELSE           shift and go to state 426
    RELSEIF         shift and go to state 429

    elseifStc                      shift and go to state 427
    conelseifc                     shift and go to state 428

state 355

    (177) blockifc -> instructionsc .
    (6) instructionsc -> instructionsc . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             reduce using rule 177 (blockifc -> instructionsc .)
    RELSE           reduce using rule 177 (blockifc -> instructionsc .)
    RELSEIF         reduce using rule 177 (blockifc -> instructionsc .)
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    instructionc                   shift and go to state 269
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 356

    (168) forSt -> RFOR parameterFor RIN exp DOSPT . exp blockc
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 430

state 357

    (169) forSt -> RFOR parameterFor RIN exp blockc .

    PRINT           reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    PRINTLN         reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    ID              reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    GLOBAL          reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    LOCAL           reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    FUNCTION        reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RIF             reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RWHILE          reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RFOR            reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RRETURN         reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RBREAK          reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RCONTINUE       reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RPUSH           reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RPOP            reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    $end            reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    END             reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RELSE           reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)
    RELSEIF         reduce using rule 169 (forSt -> RFOR parameterFor RIN exp blockc .)


state 358

    (170) parameterFor -> ID DOSPT DOSPT typeDef .

    RIN             reduce using rule 170 (parameterFor -> ID DOSPT DOSPT typeDef .)


state 359

    (225) push -> RPUSH NOTT PARIZQ ID COMA . exp PARDER PTCOMA
    (226) push -> RPUSH NOTT PARIZQ ID COMA . CORIZQ CORDER PARDER PTCOMA
    (227) push -> RPUSH NOTT PARIZQ ID COMA . CORIZQ exps CORDER PARDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 432
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 431

state 360

    (228) push -> RPUSH NOTT PARIZQ ID listArray2 . COMA exp PARDER PTCOMA
    (229) push -> RPUSH NOTT PARIZQ ID listArray2 . COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> RPUSH NOTT PARIZQ ID listArray2 . COMA CORIZQ exps CORDER PARDER PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    COMA            shift and go to state 433
    CORIZQ          shift and go to state 90


state 361

    (231) pop -> RPOP NOTT PARIZQ ID PARDER . PTCOMA

    PTCOMA          shift and go to state 434


state 362

    (232) pop -> RPOP NOTT PARIZQ ID listArray2 . PARDER PTCOMA
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    PARDER          shift and go to state 435
    CORIZQ          shift and go to state 90


state 363

    (55) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 436


state 364

    (62) declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 62 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 365

    (63) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 437


state 366

    (96) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA
    (97) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 438
    DOSPT           shift and go to state 439


state 367

    (103) assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 440

state 368

    (56) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 441

state 369

    (64) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (65) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 442
    PTCOMA          shift and go to state 443


state 370

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 444
    COMA            shift and go to state 188


state 371

    (104) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 445


state 372

    (105) assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    $end            reduce using rule 105 (assignmentA -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)


state 373

    (59) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 446

state 374

    (66) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (67) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 447
    PTCOMA          shift and go to state 448


state 375

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 449
    COMA            shift and go to state 188


state 376

    (106) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 450


state 377

    (107) assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    $end            reduce using rule 107 (assignmentA -> LOCAL ID listArray2 IGUAL exp PTCOMA .)


state 378

    (132) function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef . blockf
    (172) blockf -> . instructionsf END PTCOMA
    (173) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (22) instructionf -> . p_print
    (23) instructionf -> . p_println
    (24) instructionf -> . declarationf
    (25) instructionf -> . assignmentAf
    (26) instructionf -> . callFuncSt
    (27) instructionf -> . ifSt
    (28) instructionf -> . whileSt
    (29) instructionf -> . forSt
    (30) instructionf -> . returnST
    (31) instructionf -> . breakST
    (32) instructionf -> . continueST
    (33) instructionf -> . push
    (34) instructionf -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (68) declarationf -> . ID IGUAL exp PTCOMA
    (69) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (72) declarationf -> . GLOBAL ID PTCOMA
    (73) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationf -> . LOCAL ID PTCOMA
    (76) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (77) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (78) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (108) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (109) assignmentAf -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (110) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (112) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (114) assignmentAf -> . ID listArray2 IGUAL exp PTCOMA
    (115) assignmentAf -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (116) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (118) assignmentAf -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (145) ifSt -> . RIF exp END PTCOMA
    (146) ifSt -> . RIF exp blockiff END PTCOMA
    (147) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (148) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (149) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (150) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (151) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 211
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 134
    GLOBAL          shift and go to state 135
    LOCAL           shift and go to state 136
    RIF             shift and go to state 24
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockf                         shift and go to state 451
    instructionsf                  shift and go to state 210
    instructionf                   shift and go to state 120
    p_print                        shift and go to state 121
    p_println                      shift and go to state 122
    declarationf                   shift and go to state 123
    assignmentAf                   shift and go to state 124
    callFuncSt                     shift and go to state 125
    ifSt                           shift and go to state 126
    whileSt                        shift and go to state 127
    forSt                          shift and go to state 128
    returnST                       shift and go to state 129
    breakST                        shift and go to state 130
    continueST                     shift and go to state 131
    push                           shift and go to state 132
    pop                            shift and go to state 133

state 379

    (172) blockf -> instructionsf END PTCOMA .

    PRINT           reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    PRINTLN         reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    ID              reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    GLOBAL          reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    LOCAL           reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    FUNCTION        reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RIF             reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RWHILE          reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RFOR            reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RRETURN         reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RBREAK          reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RCONTINUE       reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RPUSH           reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    RPOP            reduce using rule 172 (blockf -> instructionsf END PTCOMA .)
    $end            reduce using rule 172 (blockf -> instructionsf END PTCOMA .)


state 380

    (136) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 136 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 136 (parameters -> parameters COMA parameter .)


state 381

    (138) parameter -> ID DOSPT DOSPT . typeDef
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 452

state 382

    (147) ifSt -> RIF exp blockiff RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 453


state 383

    (148) ifSt -> RIF exp blockiff RELSE END PTCOMA .

    PRINT           reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    PRINTLN         reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    ID              reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    GLOBAL          reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    LOCAL           reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    FUNCTION        reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RIF             reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RWHILE          reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RFOR            reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RRETURN         reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RBREAK          reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RPUSH           reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RPOP            reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    $end            reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    END             reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSE           reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSEIF         reduce using rule 148 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)


state 384

    (149) ifSt -> RIF exp blockiff elseifSt END PTCOMA .

    PRINT           reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    PRINTLN         reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    ID              reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    GLOBAL          reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    LOCAL           reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    FUNCTION        reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RIF             reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RWHILE          reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RFOR            reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RRETURN         reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RBREAK          reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RCONTINUE       reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RPUSH           reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RPOP            reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    $end            reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    END             reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSE           reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSEIF         reduce using rule 149 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)


state 385

    (150) ifSt -> RIF exp blockiff elseifSt RELSE blockiff . END PTCOMA

    END             shift and go to state 454


state 386

    (151) ifSt -> RIF exp blockiff elseifSt RELSE END . PTCOMA

    PTCOMA          shift and go to state 455


state 387

    (154) conelseif -> RELSEIF exp blockiff .

    END             reduce using rule 154 (conelseif -> RELSEIF exp blockiff .)
    RELSE           reduce using rule 154 (conelseif -> RELSEIF exp blockiff .)
    RELSEIF         reduce using rule 154 (conelseif -> RELSEIF exp blockiff .)


state 388

    (68) declarationf -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 68 (declarationf -> ID IGUAL exp PTCOMA .)


state 389

    (69) declarationf -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 456


state 390

    (76) declarationf -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (77) declarationf -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 457
    COMA            shift and go to state 188


state 391

    (108) assignmentAf -> ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 458
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 392

    (114) assignmentAf -> ID listArray2 IGUAL exp . PTCOMA
    (115) assignmentAf -> ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 459
    DOSPT           shift and go to state 460
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 393

    (70) declarationf -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (71) declarationf -> GLOBAL ID IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 461
    PTCOMA          shift and go to state 462
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 394

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 463
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 395

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (116) assignmentAf -> GLOBAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> GLOBAL ID listArray2 IGUAL . exp PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 464
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 465

state 396

    (73) declarationf -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (74) declarationf -> LOCAL ID IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 466
    PTCOMA          shift and go to state 467
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 397

    (80) declarationf -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 468
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 398

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (118) assignmentAf -> LOCAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> LOCAL ID listArray2 IGUAL . exp PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 469
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 470

state 399

    (182) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    END             reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    PRINT           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    ID              reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    LOCAL           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RIF             reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RWHILE          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RFOR            reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RRETURN         reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RBREAK          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RCONTINUE       reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RPUSH           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RPOP            reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RELSE           reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 182 (listArray -> listArray CORIZQ exp CORDER .)


state 400

    (205) exp -> LOG PARIZQ exp COMA exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 471
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 401

    (211) exp -> PARSE PARIZQ typeDef COMA exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 472
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 402

    (239) typeDef -> RARRAY LLAIZQ RINT . LLADER

    LLADER          shift and go to state 473


state 403

    (240) typeDef -> RARRAY LLAIZQ RFLOAT . LLADER

    LLADER          shift and go to state 474


state 404

    (241) typeDef -> RARRAY LLAIZQ RSTRING . LLADER

    LLADER          shift and go to state 475


state 405

    (242) typeDef -> RARRAY LLAIZQ RCHAR . LLADER

    LLADER          shift and go to state 476


state 406

    (243) typeDef -> RARRAY LLAIZQ RBOOL . LLADER

    LLADER          shift and go to state 477


state 407

    (212) exp -> TRUNC PARIZQ typeDef COMA exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 478
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 408

    (217) exp -> RPUSH NOTT PARIZQ ID COMA . exp PARDER
    (218) exp -> RPUSH NOTT PARIZQ ID COMA . CORIZQ CORDER PARDER
    (219) exp -> RPUSH NOTT PARIZQ ID COMA . CORIZQ exps CORDER PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 480
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 479

state 409

    (220) exp -> RPUSH NOTT PARIZQ ID listArray2 . COMA exp PARDER
    (221) exp -> RPUSH NOTT PARIZQ ID listArray2 . COMA CORIZQ CORDER PARDER
    (222) exp -> RPUSH NOTT PARIZQ ID listArray2 . COMA CORIZQ exps CORDER PARDER
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    COMA            shift and go to state 481
    CORIZQ          shift and go to state 90


state 410

    (255) exp -> CORIZQ listValues CORDER DOSPT DOSPT . typeDef
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 482

state 411

    (223) exp -> RPOP NOTT PARIZQ ID PARDER .

    END             reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MAS             reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MENOS           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MULTIPLICACION  reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    DIVISION        reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    POTENCIA        reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MODULO          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    IGUALIGUAL      reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    DISTINTO        reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MAYOR           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MENOR           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MAYORIGUAL      reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    MENORIGUAL      reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    ANDD            reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    ORR             reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    PRINT           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    PRINTLN         reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    ID              reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    GLOBAL          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    LOCAL           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RIF             reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RWHILE          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RFOR            reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RRETURN         reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RBREAK          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RCONTINUE       reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RPUSH           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RPOP            reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    PTCOMA          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    PARDER          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    COMA            reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    DOSPT           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    CORDER          reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RELSE           reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)
    RELSEIF         reduce using rule 223 (exp -> RPOP NOTT PARIZQ ID PARDER .)


state 412

    (224) exp -> RPOP NOTT PARIZQ ID listArray2 . PARDER
    (184) listArray2 -> listArray2 . CORIZQ exp CORDER

    PARDER          shift and go to state 483
    CORIZQ          shift and go to state 90


state 413

    (82) declarationc -> ID IGUAL exp PTCOMA .

    END             reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 82 (declarationc -> ID IGUAL exp PTCOMA .)


state 414

    (83) declarationc -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 484


state 415

    (90) declarationc -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (91) declarationc -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 485
    COMA            shift and go to state 188


state 416

    (120) assignmentAc -> ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 486
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 417

    (126) assignmentAc -> ID listArray2 IGUAL exp . PTCOMA
    (127) assignmentAc -> ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PTCOMA          shift and go to state 487
    DOSPT           shift and go to state 488
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 418

    (84) declarationc -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> LOCAL ID IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 489
    PTCOMA          shift and go to state 490
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 419

    (94) declarationc -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 491
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 420

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (130) assignmentAc -> LOCAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> LOCAL ID listArray2 IGUAL . exp PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 492
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 493

state 421

    (87) declarationc -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> GLOBAL ID IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 494
    PTCOMA          shift and go to state 495
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 422

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 496
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 423

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL . CORIZQ exps CORDER PTCOMA
    (128) assignmentAc -> GLOBAL ID listArray2 IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> GLOBAL ID listArray2 IGUAL . exp PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 497
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 498

state 424

    (156) ifStc -> RIF exp END PTCOMA .

    END             reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    PRINT           reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    ID              reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RIF             reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RRETURN         reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RBREAK          reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RCONTINUE       reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RPUSH           reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RPOP            reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 156 (ifStc -> RIF exp END PTCOMA .)


state 425

    (157) ifStc -> RIF exp blockifc END . PTCOMA

    PTCOMA          shift and go to state 499


state 426

    (158) ifStc -> RIF exp blockifc RELSE . blockifc END PTCOMA
    (159) ifStc -> RIF exp blockifc RELSE . END PTCOMA
    (177) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 501
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockifc                       shift and go to state 500
    instructionsc                  shift and go to state 355
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 427

    (160) ifStc -> RIF exp blockifc elseifStc . END PTCOMA
    (161) ifStc -> RIF exp blockifc elseifStc . RELSE blockifc END PTCOMA
    (162) ifStc -> RIF exp blockifc elseifStc . RELSE END PTCOMA
    (163) elseifStc -> elseifStc . conelseifc
    (165) conelseifc -> . RELSEIF exp blockifc
    (166) conelseifc -> . RELSEIF exp

    END             shift and go to state 502
    RELSE           shift and go to state 503
    RELSEIF         shift and go to state 429

    conelseifc                     shift and go to state 504

state 428

    (164) elseifStc -> conelseifc .

    END             reduce using rule 164 (elseifStc -> conelseifc .)
    RELSE           reduce using rule 164 (elseifStc -> conelseifc .)
    RELSEIF         reduce using rule 164 (elseifStc -> conelseifc .)


state 429

    (165) conelseifc -> RELSEIF . exp blockifc
    (166) conelseifc -> RELSEIF . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exp                            shift and go to state 505

state 430

    (168) forSt -> RFOR parameterFor RIN exp DOSPT exp . blockc
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (174) blockc -> . instructionsc END PTCOMA
    (175) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    END             shift and go to state 163
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockc                         shift and go to state 506
    instructionsc                  shift and go to state 162
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 431

    (225) push -> RPUSH NOTT PARIZQ ID COMA exp . PARDER PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 507
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 432

    (226) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ . CORDER PARDER PTCOMA
    (227) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ . exps CORDER PARDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 508
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 509
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 433

    (228) push -> RPUSH NOTT PARIZQ ID listArray2 COMA . exp PARDER PTCOMA
    (229) push -> RPUSH NOTT PARIZQ ID listArray2 COMA . CORIZQ CORDER PARDER PTCOMA
    (230) push -> RPUSH NOTT PARIZQ ID listArray2 COMA . CORIZQ exps CORDER PARDER PTCOMA
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 511
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 510

state 434

    (231) pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .

    PRINT           reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    PRINTLN         reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    ID              reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    GLOBAL          reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    LOCAL           reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    FUNCTION        reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RIF             reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RWHILE          reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RFOR            reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RRETURN         reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RBREAK          reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RCONTINUE       reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RPUSH           reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RPOP            reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    $end            reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    END             reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RELSE           reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)
    RELSEIF         reduce using rule 231 (pop -> RPOP NOTT PARIZQ ID PARDER PTCOMA .)


state 435

    (232) pop -> RPOP NOTT PARIZQ ID listArray2 PARDER . PTCOMA

    PTCOMA          shift and go to state 512


state 436

    (55) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 55 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 437

    (63) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 513

state 438

    (96) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 96 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 439

    (97) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 514


state 440

    (103) assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 515


state 441

    (56) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 516


state 442

    (64) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 517


state 443

    (65) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 65 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 444

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (99) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 518
    PTCOMA          shift and go to state 519


state 445

    (104) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 520

state 446

    (59) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 521


state 447

    (66) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 522


state 448

    (67) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 67 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 449

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (101) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 523
    PTCOMA          shift and go to state 524


state 450

    (106) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 525

state 451

    (132) function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .

    PRINT           reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    PRINTLN         reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    ID              reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    GLOBAL          reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    LOCAL           reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    FUNCTION        reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RIF             reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RWHILE          reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RFOR            reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RRETURN         reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RBREAK          reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RCONTINUE       reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RPUSH           reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    RPOP            reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)
    $end            reduce using rule 132 (function -> FUNCTION ID parametersFunc DOSPT DOSPT typeDef blockf .)


state 452

    (138) parameter -> ID DOSPT DOSPT typeDef .

    PARDER          reduce using rule 138 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 138 (parameter -> ID DOSPT DOSPT typeDef .)


state 453

    (147) ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    ID              reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RRETURN         reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RBREAK          reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RPUSH           reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RPOP            reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    $end            reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    END             reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 147 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)


state 454

    (150) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 526


state 455

    (151) ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .

    PRINT           reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    PRINTLN         reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    ID              reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    GLOBAL          reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    LOCAL           reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    FUNCTION        reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RIF             reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RWHILE          reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RFOR            reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RRETURN         reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RBREAK          reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RPUSH           reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RPOP            reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    $end            reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    END             reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSE           reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSEIF         reduce using rule 151 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)


state 456

    (69) declarationf -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 527

state 457

    (76) declarationf -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (77) declarationf -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 528
    DOSPT           shift and go to state 529


state 458

    (108) assignmentAf -> ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 530
    COMA            shift and go to state 188


state 459

    (114) assignmentAf -> ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    END             reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 114 (assignmentAf -> ID listArray2 IGUAL exp PTCOMA .)


state 460

    (115) assignmentAf -> ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 531


state 461

    (70) declarationf -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 532


state 462

    (71) declarationf -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 71 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)


state 463

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 533
    COMA            shift and go to state 188


state 464

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 534
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 465

    (116) assignmentAf -> GLOBAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (117) assignmentAf -> GLOBAL ID listArray2 IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 535
    PTCOMA          shift and go to state 536
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 466

    (73) declarationf -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 537


state 467

    (74) declarationf -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 74 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)


state 468

    (80) declarationf -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 538
    COMA            shift and go to state 188


state 469

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 539
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 470

    (118) assignmentAf -> LOCAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (119) assignmentAf -> LOCAL ID listArray2 IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 540
    PTCOMA          shift and go to state 541
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 471

    (205) exp -> LOG PARIZQ exp COMA exp PARDER .

    END             reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    POTENCIA        reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MODULO          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ANDD            reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ORR             reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINT           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINTLN         reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ID              reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    GLOBAL          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    LOCAL           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RIF             reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RWHILE          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RFOR            reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RRETURN         reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RBREAK          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RCONTINUE       reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RPUSH           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RPOP            reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DOSPT           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    CORDER          reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSE           reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSEIF         reduce using rule 205 (exp -> LOG PARIZQ exp COMA exp PARDER .)


state 472

    (211) exp -> PARSE PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RRETURN         reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RBREAK          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RCONTINUE       reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RPUSH           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RPOP            reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 211 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)


state 473

    (239) typeDef -> RARRAY LLAIZQ RINT LLADER .

    COMA            reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RIN             reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PTCOMA          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    END             reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PRINT           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PRINTLN         reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ID              reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    GLOBAL          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    LOCAL           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RIF             reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RWHILE          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RFOR            reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RRETURN         reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RBREAK          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RCONTINUE       reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RPUSH           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RPOP            reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PARDER          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAS             reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENOS           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MULTIPLICACION  reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DIVISION        reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    POTENCIA        reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MODULO          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    IGUALIGUAL      reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DISTINTO        reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAYOR           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENOR           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAYORIGUAL      reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENORIGUAL      reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ANDD            reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ORR             reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DOSPT           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    CORDER          reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RELSE           reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RELSEIF         reduce using rule 239 (typeDef -> RARRAY LLAIZQ RINT LLADER .)


state 474

    (240) typeDef -> RARRAY LLAIZQ RFLOAT LLADER .

    COMA            reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RIN             reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PTCOMA          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    END             reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PRINT           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PRINTLN         reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ID              reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    GLOBAL          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    LOCAL           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RIF             reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RWHILE          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RFOR            reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RRETURN         reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RBREAK          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RCONTINUE       reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RPUSH           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RPOP            reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PARDER          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAS             reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENOS           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MULTIPLICACION  reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DIVISION        reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    POTENCIA        reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MODULO          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    IGUALIGUAL      reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DISTINTO        reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAYOR           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENOR           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAYORIGUAL      reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENORIGUAL      reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ANDD            reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ORR             reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DOSPT           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    CORDER          reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RELSE           reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RELSEIF         reduce using rule 240 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)


state 475

    (241) typeDef -> RARRAY LLAIZQ RSTRING LLADER .

    COMA            reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RIN             reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PTCOMA          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    END             reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PRINT           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PRINTLN         reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ID              reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    GLOBAL          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    LOCAL           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RIF             reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RWHILE          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RFOR            reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RRETURN         reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RBREAK          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RCONTINUE       reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RPUSH           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RPOP            reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PARDER          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAS             reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENOS           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MULTIPLICACION  reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DIVISION        reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    POTENCIA        reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MODULO          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    IGUALIGUAL      reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DISTINTO        reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAYOR           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENOR           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAYORIGUAL      reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENORIGUAL      reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ANDD            reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ORR             reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DOSPT           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    CORDER          reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RELSE           reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RELSEIF         reduce using rule 241 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)


state 476

    (242) typeDef -> RARRAY LLAIZQ RCHAR LLADER .

    COMA            reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RIN             reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PTCOMA          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    END             reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PRINT           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PRINTLN         reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ID              reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    GLOBAL          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    LOCAL           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RIF             reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RWHILE          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RFOR            reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RRETURN         reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RBREAK          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RCONTINUE       reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RPUSH           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RPOP            reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PARDER          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAS             reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENOS           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MULTIPLICACION  reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DIVISION        reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    POTENCIA        reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MODULO          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    IGUALIGUAL      reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DISTINTO        reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAYOR           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENOR           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAYORIGUAL      reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENORIGUAL      reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ANDD            reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ORR             reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DOSPT           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    CORDER          reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RELSE           reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RELSEIF         reduce using rule 242 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)


state 477

    (243) typeDef -> RARRAY LLAIZQ RBOOL LLADER .

    COMA            reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RIN             reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PTCOMA          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    END             reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PRINT           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PRINTLN         reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ID              reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    GLOBAL          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    LOCAL           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RIF             reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RWHILE          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RFOR            reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RRETURN         reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RBREAK          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RCONTINUE       reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RPUSH           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RPOP            reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PARDER          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAS             reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENOS           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MULTIPLICACION  reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DIVISION        reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    POTENCIA        reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MODULO          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    IGUALIGUAL      reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DISTINTO        reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAYOR           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENOR           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAYORIGUAL      reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENORIGUAL      reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ANDD            reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ORR             reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DOSPT           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    CORDER          reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RELSE           reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RELSEIF         reduce using rule 243 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)


state 478

    (212) exp -> TRUNC PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RRETURN         reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RBREAK          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RCONTINUE       reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RPUSH           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RPOP            reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 212 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)


state 479

    (217) exp -> RPUSH NOTT PARIZQ ID COMA exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 542
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 480

    (218) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ . CORDER PARDER
    (219) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ . exps CORDER PARDER
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 543
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 544
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 481

    (220) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA . exp PARDER
    (221) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA . CORIZQ CORDER PARDER
    (222) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA . CORIZQ exps CORDER PARDER
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 546
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71

    exp                            shift and go to state 545

state 482

    (255) exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .

    END             reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAS             reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENOS           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MULTIPLICACION  reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DIVISION        reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    POTENCIA        reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MODULO          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    IGUALIGUAL      reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DISTINTO        reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAYOR           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENOR           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAYORIGUAL      reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENORIGUAL      reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ANDD            reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ORR             reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PRINT           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PRINTLN         reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ID              reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    GLOBAL          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    LOCAL           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RIF             reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RWHILE          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RFOR            reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RRETURN         reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RBREAK          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RCONTINUE       reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RPUSH           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RPOP            reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PTCOMA          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PARDER          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    COMA            reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DOSPT           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    CORDER          reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RELSE           reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RELSEIF         reduce using rule 255 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)


state 483

    (224) exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .

    END             reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MAS             reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MENOS           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MULTIPLICACION  reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    DIVISION        reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    POTENCIA        reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MODULO          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    IGUALIGUAL      reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    DISTINTO        reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MAYOR           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MENOR           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MAYORIGUAL      reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    MENORIGUAL      reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    ANDD            reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    ORR             reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    PRINT           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    PRINTLN         reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    ID              reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    GLOBAL          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    LOCAL           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RIF             reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RWHILE          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RFOR            reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RRETURN         reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RBREAK          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RCONTINUE       reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RPUSH           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RPOP            reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    PTCOMA          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    PARDER          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    COMA            reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    DOSPT           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    CORDER          reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RELSE           reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)
    RELSEIF         reduce using rule 224 (exp -> RPOP NOTT PARIZQ ID listArray2 PARDER .)


state 484

    (83) declarationc -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 547

state 485

    (90) declarationc -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (91) declarationc -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 548
    DOSPT           shift and go to state 549


state 486

    (120) assignmentAc -> ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 550
    COMA            shift and go to state 188


state 487

    (126) assignmentAc -> ID listArray2 IGUAL exp PTCOMA .

    END             reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    PRINT           reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 126 (assignmentAc -> ID listArray2 IGUAL exp PTCOMA .)


state 488

    (127) assignmentAc -> ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 551


state 489

    (84) declarationc -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 552


state 490

    (85) declarationc -> LOCAL ID IGUAL exp PTCOMA .

    END             reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 85 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)


state 491

    (94) declarationc -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 553
    COMA            shift and go to state 188


state 492

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 554
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 493

    (130) assignmentAc -> LOCAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> LOCAL ID listArray2 IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 555
    PTCOMA          shift and go to state 556
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 494

    (87) declarationc -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 557


state 495

    (88) declarationc -> GLOBAL ID IGUAL exp PTCOMA .

    END             reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RPOP            reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 88 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)


state 496

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 558
    COMA            shift and go to state 188


state 497

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ . exps CORDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 158
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 559
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 498

    (128) assignmentAc -> GLOBAL ID listArray2 IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> GLOBAL ID listArray2 IGUAL exp . PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    DOSPT           shift and go to state 560
    PTCOMA          shift and go to state 561
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 499

    (157) ifStc -> RIF exp blockifc END PTCOMA .

    END             reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINT           reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINTLN         reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    ID              reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    LOCAL           reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    GLOBAL          reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RIF             reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RWHILE          reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RFOR            reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RRETURN         reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RBREAK          reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RPUSH           reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RPOP            reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSE           reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSEIF         reduce using rule 157 (ifStc -> RIF exp blockifc END PTCOMA .)


state 500

    (158) ifStc -> RIF exp blockifc RELSE blockifc . END PTCOMA

    END             shift and go to state 562


state 501

    (159) ifStc -> RIF exp blockifc RELSE END . PTCOMA

    PTCOMA          shift and go to state 563


state 502

    (160) ifStc -> RIF exp blockifc elseifStc END . PTCOMA

    PTCOMA          shift and go to state 564


state 503

    (161) ifStc -> RIF exp blockifc elseifStc RELSE . blockifc END PTCOMA
    (162) ifStc -> RIF exp blockifc elseifStc RELSE . END PTCOMA
    (177) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             shift and go to state 566
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockifc                       shift and go to state 565
    instructionsc                  shift and go to state 355
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 504

    (163) elseifStc -> elseifStc conelseifc .

    END             reduce using rule 163 (elseifStc -> elseifStc conelseifc .)
    RELSE           reduce using rule 163 (elseifStc -> elseifStc conelseifc .)
    RELSEIF         reduce using rule 163 (elseifStc -> elseifStc conelseifc .)


state 505

    (165) conelseifc -> RELSEIF exp . blockifc
    (166) conelseifc -> RELSEIF exp .
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp
    (177) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (35) instructionc -> . p_print
    (36) instructionc -> . p_println
    (37) instructionc -> . declarationc
    (38) instructionc -> . assignmentAc
    (39) instructionc -> . callFuncSt
    (40) instructionc -> . ifStc
    (41) instructionc -> . whileSt
    (42) instructionc -> . forSt
    (43) instructionc -> . returnST
    (44) instructionc -> . breakST
    (45) instructionc -> . continueST
    (46) instructionc -> . push
    (47) instructionc -> . pop
    (48) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (49) p_print -> . PRINT PARIZQ PARDER PTCOMA
    (50) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (51) p_println -> . PRINTLN PARIZQ PARDER PTCOMA
    (82) declarationc -> . ID IGUAL exp PTCOMA
    (83) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (85) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (86) declarationc -> . LOCAL ID PTCOMA
    (87) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (88) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (89) declarationc -> . GLOBAL ID PTCOMA
    (90) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (91) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (94) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (120) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (121) assignmentAc -> . ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (122) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> . GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (124) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> . LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA
    (126) assignmentAc -> . ID listArray2 IGUAL exp PTCOMA
    (127) assignmentAc -> . ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (128) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (129) assignmentAc -> . GLOBAL ID listArray2 IGUAL exp PTCOMA
    (130) assignmentAc -> . LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (131) assignmentAc -> . LOCAL ID listArray2 IGUAL exp PTCOMA
    (140) callFuncSt -> . ID parametersCallFunc PTCOMA
    (156) ifStc -> . RIF exp END PTCOMA
    (157) ifStc -> . RIF exp blockifc END PTCOMA
    (158) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (159) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (160) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (161) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (162) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (167) whileSt -> . RWHILE exp blockc
    (168) forSt -> . RFOR parameterFor RIN exp DOSPT exp blockc
    (169) forSt -> . RFOR parameterFor RIN exp blockc
    (178) returnST -> . RRETURN exp PTCOMA
    (179) returnST -> . RRETURN PTCOMA
    (180) breakST -> . RBREAK PTCOMA
    (181) continueST -> . RCONTINUE PTCOMA
    (225) push -> . RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA
    (226) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA
    (227) push -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA
    (228) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA
    (229) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA
    (230) push -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA
    (231) pop -> . RPOP NOTT PARIZQ ID PARDER PTCOMA
    (232) pop -> . RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA

    END             reduce using rule 166 (conelseifc -> RELSEIF exp .)
    RELSE           reduce using rule 166 (conelseifc -> RELSEIF exp .)
    RELSEIF         reduce using rule 166 (conelseifc -> RELSEIF exp .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118
    PRINT           shift and go to state 18
    PRINTLN         shift and go to state 19
    ID              shift and go to state 178
    LOCAL           shift and go to state 179
    GLOBAL          shift and go to state 180
    RIF             shift and go to state 181
    RWHILE          shift and go to state 25
    RFOR            shift and go to state 26
    RRETURN         shift and go to state 27
    RBREAK          shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31

    blockifc                       shift and go to state 567
    instructionsc                  shift and go to state 355
    instructionc                   shift and go to state 164
    p_print                        shift and go to state 165
    p_println                      shift and go to state 166
    declarationc                   shift and go to state 167
    assignmentAc                   shift and go to state 168
    callFuncSt                     shift and go to state 169
    ifStc                          shift and go to state 170
    whileSt                        shift and go to state 171
    forSt                          shift and go to state 172
    returnST                       shift and go to state 173
    breakST                        shift and go to state 174
    continueST                     shift and go to state 175
    push                           shift and go to state 176
    pop                            shift and go to state 177

state 506

    (168) forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .

    PRINT           reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    PRINTLN         reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    ID              reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    GLOBAL          reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    LOCAL           reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    FUNCTION        reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RIF             reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RWHILE          reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RFOR            reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RRETURN         reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RBREAK          reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RCONTINUE       reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RPUSH           reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RPOP            reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    $end            reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    END             reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RELSE           reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)
    RELSEIF         reduce using rule 168 (forSt -> RFOR parameterFor RIN exp DOSPT exp blockc .)


state 507

    (225) push -> RPUSH NOTT PARIZQ ID COMA exp PARDER . PTCOMA

    PTCOMA          shift and go to state 568


state 508

    (226) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER . PARDER PTCOMA
    (256) exp -> CORIZQ CORDER .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 569
    MAS             reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 256 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 256 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 256 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 256 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 256 (exp -> CORIZQ CORDER .)

  ! PARDER          [ reduce using rule 256 (exp -> CORIZQ CORDER .) ]


state 509

    (227) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps . CORDER PARDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 570
    COMA            shift and go to state 188


state 510

    (228) push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp . PARDER PTCOMA
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 571
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 511

    (229) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ . CORDER PARDER PTCOMA
    (230) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ . exps CORDER PARDER PTCOMA
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 572
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 573
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 512

    (232) pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .

    PRINT           reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    PRINTLN         reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    ID              reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    GLOBAL          reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    LOCAL           reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    FUNCTION        reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RIF             reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RWHILE          reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RFOR            reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RRETURN         reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RBREAK          reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RCONTINUE       reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RPUSH           reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RPOP            reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    $end            reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    END             reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RELSE           reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)
    RELSEIF         reduce using rule 232 (pop -> RPOP NOTT PARIZQ ID listArray2 PARDER PTCOMA .)


state 513

    (63) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 574


state 514

    (97) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 575

state 515

    (103) assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 103 (assignmentA -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 516

    (56) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 56 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 517

    (64) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 576

state 518

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 577


state 519

    (99) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 99 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 520

    (104) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 578


state 521

    (59) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 59 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 522

    (66) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 579

state 523

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 580


state 524

    (101) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 101 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 525

    (106) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 581


state 526

    (150) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    ID              reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RRETURN         reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RBREAK          reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RPUSH           reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RPOP            reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    $end            reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    END             reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 150 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)


state 527

    (69) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 582


state 528

    (76) declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 76 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 529

    (77) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 583


state 530

    (108) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA
    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 584
    DOSPT           shift and go to state 585


state 531

    (115) assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 586

state 532

    (70) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 587

state 533

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (79) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 588
    PTCOMA          shift and go to state 589


state 534

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 590
    COMA            shift and go to state 188


state 535

    (116) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 591


state 536

    (117) assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    END             reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 117 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)


state 537

    (73) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 592

state 538

    (80) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (81) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 593
    PTCOMA          shift and go to state 594


state 539

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 595
    COMA            shift and go to state 188


state 540

    (118) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 596


state 541

    (119) assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .

    PRINT           reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    END             reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 119 (assignmentAf -> LOCAL ID listArray2 IGUAL exp PTCOMA .)


state 542

    (217) exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .

    END             reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MAS             reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MENOS           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    DIVISION        reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    POTENCIA        reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MODULO          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    DISTINTO        reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MAYOR           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MENOR           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    MENORIGUAL      reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    ANDD            reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    ORR             reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    PRINT           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    PRINTLN         reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    ID              reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    GLOBAL          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    LOCAL           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RIF             reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RWHILE          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RFOR            reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RRETURN         reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RBREAK          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RCONTINUE       reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RPUSH           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RPOP            reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    PTCOMA          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    PARDER          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    COMA            reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    DOSPT           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    CORDER          reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RELSE           reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)
    RELSEIF         reduce using rule 217 (exp -> RPUSH NOTT PARIZQ ID COMA exp PARDER .)


state 543

    (218) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER . PARDER
    (256) exp -> CORIZQ CORDER .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 597
    MAS             reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 256 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 256 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 256 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 256 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 256 (exp -> CORIZQ CORDER .)

  ! PARDER          [ reduce using rule 256 (exp -> CORIZQ CORDER .) ]


state 544

    (219) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps . CORDER PARDER
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 598
    COMA            shift and go to state 188


state 545

    (220) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp . PARDER
    (186) exp -> exp . MAS exp
    (187) exp -> exp . MENOS exp
    (188) exp -> exp . MULTIPLICACION exp
    (189) exp -> exp . DIVISION exp
    (190) exp -> exp . POTENCIA exp
    (191) exp -> exp . MODULO exp
    (193) exp -> exp . IGUALIGUAL exp
    (194) exp -> exp . DISTINTO exp
    (195) exp -> exp . MAYOR exp
    (196) exp -> exp . MENOR exp
    (197) exp -> exp . MAYORIGUAL exp
    (198) exp -> exp . MENORIGUAL exp
    (199) exp -> exp . ANDD exp
    (200) exp -> exp . ORR exp

    PARDER          shift and go to state 599
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    MULTIPLICACION  shift and go to state 107
    DIVISION        shift and go to state 108
    POTENCIA        shift and go to state 109
    MODULO          shift and go to state 110
    IGUALIGUAL      shift and go to state 111
    DISTINTO        shift and go to state 112
    MAYOR           shift and go to state 113
    MENOR           shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    ANDD            shift and go to state 117
    ORR             shift and go to state 118


state 546

    (221) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ . CORDER PARDER
    (222) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ . exps CORDER PARDER
    (254) exp -> CORIZQ . listValues CORDER
    (255) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> CORIZQ . CORDER
    (52) exps -> . exps COMA exp
    (53) exps -> . exp
    (143) listValues -> . listValues COMA exp
    (144) listValues -> . exp
    (186) exp -> . exp MAS exp
    (187) exp -> . exp MENOS exp
    (188) exp -> . exp MULTIPLICACION exp
    (189) exp -> . exp DIVISION exp
    (190) exp -> . exp POTENCIA exp
    (191) exp -> . exp MODULO exp
    (192) exp -> . MENOS exp
    (193) exp -> . exp IGUALIGUAL exp
    (194) exp -> . exp DISTINTO exp
    (195) exp -> . exp MAYOR exp
    (196) exp -> . exp MENOR exp
    (197) exp -> . exp MAYORIGUAL exp
    (198) exp -> . exp MENORIGUAL exp
    (199) exp -> . exp ANDD exp
    (200) exp -> . exp ORR exp
    (201) exp -> . NOTT exp
    (202) exp -> . ID parametersCallFunc
    (203) exp -> . UPPERCASE PARIZQ exp PARDER
    (204) exp -> . LOWERCASE PARIZQ exp PARDER
    (205) exp -> . LOG PARIZQ exp COMA exp PARDER
    (206) exp -> . LOG10 PARIZQ exp PARDER
    (207) exp -> . SIN PARIZQ exp PARDER
    (208) exp -> . COS PARIZQ exp PARDER
    (209) exp -> . TAN PARIZQ exp PARDER
    (210) exp -> . SQRT PARIZQ exp PARDER
    (211) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (212) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (213) exp -> . TRUNC PARIZQ exp PARDER
    (214) exp -> . MFLOAT PARIZQ exp PARDER
    (215) exp -> . MSTRING PARIZQ exp PARDER
    (216) exp -> . TYPEOF PARIZQ exp PARDER
    (217) exp -> . RPUSH NOTT PARIZQ ID COMA exp PARDER
    (218) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER
    (219) exp -> . RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER
    (220) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER
    (221) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER
    (222) exp -> . RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER
    (223) exp -> . RPOP NOTT PARIZQ ID PARDER
    (224) exp -> . RPOP NOTT PARIZQ ID listArray2 PARDER
    (233) exp -> . RLENGTH PARIZQ exp PARDER
    (244) exp -> . PARIZQ exp PARDER
    (245) exp -> . ENTERO
    (246) exp -> . DECIMAL
    (247) exp -> . STRING
    (248) exp -> . CHAR
    (249) exp -> . VERDADERO
    (250) exp -> . FALSO
    (251) exp -> . NULO
    (252) exp -> . ID
    (253) exp -> . ID listArray
    (254) exp -> . CORIZQ listValues CORDER
    (255) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (256) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 600
    MENOS           shift and go to state 44
    NOTT            shift and go to state 45
    ID              shift and go to state 46
    UPPERCASE       shift and go to state 47
    LOWERCASE       shift and go to state 49
    LOG             shift and go to state 50
    LOG10           shift and go to state 51
    SIN             shift and go to state 52
    COS             shift and go to state 53
    TAN             shift and go to state 54
    SQRT            shift and go to state 55
    PARSE           shift and go to state 56
    TRUNC           shift and go to state 57
    MFLOAT          shift and go to state 58
    MSTRING         shift and go to state 59
    TYPEOF          shift and go to state 60
    RPUSH           shift and go to state 61
    RPOP            shift and go to state 63
    RLENGTH         shift and go to state 64
    PARIZQ          shift and go to state 48
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    VERDADERO       shift and go to state 69
    FALSO           shift and go to state 70
    NULO            shift and go to state 71
    CORIZQ          shift and go to state 62

    exps                           shift and go to state 601
    listValues                     shift and go to state 157
    exp                            shift and go to state 195

state 547

    (83) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 602


state 548

    (90) declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 90 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 549

    (91) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 603


state 550

    (120) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA
    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 604
    DOSPT           shift and go to state 605


state 551

    (127) assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 606

state 552

    (84) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 607

state 553

    (94) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (95) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 608
    PTCOMA          shift and go to state 609


state 554

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 610
    COMA            shift and go to state 188


state 555

    (130) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 611


state 556

    (131) assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .

    END             reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINT           reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 131 (assignmentAc -> LOCAL ID listArray2 IGUAL exp PTCOMA .)


state 557

    (87) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 612

state 558

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (93) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 613
    PTCOMA          shift and go to state 614


state 559

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps . CORDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 615
    COMA            shift and go to state 188


state 560

    (128) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 616


state 561

    (129) assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .

    END             reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINT           reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    ID              reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RIF             reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RFOR            reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RPUSH           reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RPOP            reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSE           reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 129 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp PTCOMA .)


state 562

    (158) ifStc -> RIF exp blockifc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 617


state 563

    (159) ifStc -> RIF exp blockifc RELSE END PTCOMA .

    END             reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINT           reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    ID              reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    LOCAL           reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RIF             reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RWHILE          reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RFOR            reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RRETURN         reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RBREAK          reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RPUSH           reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RPOP            reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSE           reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 159 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)


state 564

    (160) ifStc -> RIF exp blockifc elseifStc END PTCOMA .

    END             reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINT           reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINTLN         reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    ID              reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    LOCAL           reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    GLOBAL          reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RIF             reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RWHILE          reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RFOR            reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RRETURN         reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RBREAK          reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RCONTINUE       reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RPUSH           reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RPOP            reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSE           reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSEIF         reduce using rule 160 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)


state 565

    (161) ifStc -> RIF exp blockifc elseifStc RELSE blockifc . END PTCOMA

    END             shift and go to state 618


state 566

    (162) ifStc -> RIF exp blockifc elseifStc RELSE END . PTCOMA

    PTCOMA          shift and go to state 619


state 567

    (165) conelseifc -> RELSEIF exp blockifc .

    END             reduce using rule 165 (conelseifc -> RELSEIF exp blockifc .)
    RELSE           reduce using rule 165 (conelseifc -> RELSEIF exp blockifc .)
    RELSEIF         reduce using rule 165 (conelseifc -> RELSEIF exp blockifc .)


state 568

    (225) push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .

    PRINT           reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    PRINTLN         reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    ID              reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    GLOBAL          reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    LOCAL           reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    FUNCTION        reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RIF             reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RWHILE          reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RFOR            reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RRETURN         reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RBREAK          reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RCONTINUE       reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RPUSH           reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RPOP            reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    $end            reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    END             reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RELSE           reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)
    RELSEIF         reduce using rule 225 (push -> RPUSH NOTT PARIZQ ID COMA exp PARDER PTCOMA .)


state 569

    (226) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER . PTCOMA

    PTCOMA          shift and go to state 620


state 570

    (227) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER . PARDER PTCOMA

    PARDER          shift and go to state 621


state 571

    (228) push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER . PTCOMA

    PTCOMA          shift and go to state 622


state 572

    (229) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER . PARDER PTCOMA
    (256) exp -> CORIZQ CORDER .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 623
    MAS             reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 256 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 256 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 256 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 256 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 256 (exp -> CORIZQ CORDER .)

  ! PARDER          [ reduce using rule 256 (exp -> CORIZQ CORDER .) ]


state 573

    (230) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps . CORDER PARDER PTCOMA
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 624
    COMA            shift and go to state 188


state 574

    (63) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 63 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 575

    (97) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 625


state 576

    (64) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 626


state 577

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 627

state 578

    (104) assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 104 (assignmentA -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 579

    (66) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 628


state 580

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 629

state 581

    (106) assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 106 (assignmentA -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 582

    (69) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 69 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 583

    (77) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 630

state 584

    (108) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 108 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 585

    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 631


state 586

    (115) assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 632


state 587

    (70) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 633


state 588

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 634


state 589

    (79) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 79 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 590

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 635
    PTCOMA          shift and go to state 636


state 591

    (116) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 637

state 592

    (73) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 638


state 593

    (80) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 639


state 594

    (81) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 81 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 595

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (113) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 640
    PTCOMA          shift and go to state 641


state 596

    (118) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 642

state 597

    (218) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .

    END             reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MAS             reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MENOS           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MULTIPLICACION  reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    DIVISION        reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    POTENCIA        reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MODULO          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    IGUALIGUAL      reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    DISTINTO        reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MAYOR           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MENOR           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MAYORIGUAL      reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    MENORIGUAL      reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    ANDD            reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    ORR             reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    PRINT           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    PRINTLN         reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    ID              reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    GLOBAL          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    LOCAL           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RIF             reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RWHILE          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RFOR            reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RRETURN         reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RBREAK          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RCONTINUE       reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RPUSH           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RPOP            reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    PTCOMA          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    PARDER          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    COMA            reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    DOSPT           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    CORDER          reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RELSE           reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)
    RELSEIF         reduce using rule 218 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER .)


state 598

    (219) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER . PARDER

    PARDER          shift and go to state 643


state 599

    (220) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .

    END             reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MAS             reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MENOS           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    DIVISION        reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    POTENCIA        reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MODULO          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    DISTINTO        reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MAYOR           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MENOR           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    MENORIGUAL      reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    ANDD            reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    ORR             reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    PRINT           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    PRINTLN         reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    ID              reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    GLOBAL          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    LOCAL           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RIF             reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RWHILE          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RFOR            reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RRETURN         reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RBREAK          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RCONTINUE       reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RPUSH           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RPOP            reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    PTCOMA          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    PARDER          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    COMA            reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    DOSPT           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    CORDER          reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RELSE           reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)
    RELSEIF         reduce using rule 220 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER .)


state 600

    (221) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER . PARDER
    (256) exp -> CORIZQ CORDER .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 644
    MAS             reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 256 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 256 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 256 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 256 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 256 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 256 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 256 (exp -> CORIZQ CORDER .)

  ! PARDER          [ reduce using rule 256 (exp -> CORIZQ CORDER .) ]


state 601

    (222) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps . CORDER PARDER
    (52) exps -> exps . COMA exp

    CORDER          shift and go to state 645
    COMA            shift and go to state 188


state 602

    (83) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 83 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 603

    (91) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 646

state 604

    (120) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 120 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 605

    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 647


state 606

    (127) assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 648


state 607

    (84) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 649


state 608

    (94) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 650


state 609

    (95) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 95 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 610

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (125) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 651
    PTCOMA          shift and go to state 652


state 611

    (130) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 653

state 612

    (87) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 654


state 613

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 655


state 614

    (93) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 93 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 615

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 656
    PTCOMA          shift and go to state 657


state 616

    (128) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 658

state 617

    (158) ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .

    END             reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RRETURN         reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RBREAK          reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RPUSH           reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RPOP            reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 158 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)


state 618

    (161) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 659


state 619

    (162) ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .

    END             reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINT           reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    ID              reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    LOCAL           reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RIF             reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RWHILE          reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RFOR            reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RRETURN         reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RBREAK          reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RPUSH           reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RPOP            reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSE           reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 162 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)


state 620

    (226) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .

    PRINT           reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    PRINTLN         reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    ID              reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    GLOBAL          reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    LOCAL           reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    FUNCTION        reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RIF             reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RWHILE          reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RFOR            reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RRETURN         reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RBREAK          reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RCONTINUE       reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RPUSH           reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RPOP            reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    $end            reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    END             reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RELSE           reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)
    RELSEIF         reduce using rule 226 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ CORDER PARDER PTCOMA .)


state 621

    (227) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER . PTCOMA

    PTCOMA          shift and go to state 660


state 622

    (228) push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .

    PRINT           reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    PRINTLN         reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    ID              reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    GLOBAL          reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    LOCAL           reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    FUNCTION        reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RIF             reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RWHILE          reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RFOR            reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RRETURN         reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RBREAK          reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RCONTINUE       reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RPUSH           reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RPOP            reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    $end            reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    END             reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RELSE           reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)
    RELSEIF         reduce using rule 228 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA exp PARDER PTCOMA .)


state 623

    (229) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER . PTCOMA

    PTCOMA          shift and go to state 661


state 624

    (230) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER . PARDER PTCOMA

    PARDER          shift and go to state 662


state 625

    (97) assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 97 (assignmentA -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 626

    (64) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 64 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 627

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 663


state 628

    (66) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 66 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 629

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 664


state 630

    (77) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 665


state 631

    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 666

state 632

    (115) assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 115 (assignmentAf -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 633

    (70) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 70 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 634

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 667

state 635

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 668


state 636

    (111) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 111 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 637

    (116) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 669


state 638

    (73) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 73 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 639

    (80) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 670

state 640

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 671


state 641

    (113) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 113 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 642

    (118) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 672


state 643

    (219) exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .

    END             reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MAS             reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MENOS           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MULTIPLICACION  reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    DIVISION        reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    POTENCIA        reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MODULO          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    IGUALIGUAL      reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    DISTINTO        reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MAYOR           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MENOR           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MAYORIGUAL      reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    MENORIGUAL      reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    ANDD            reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    ORR             reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    PRINT           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    PRINTLN         reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    ID              reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    GLOBAL          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    LOCAL           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RIF             reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RWHILE          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RFOR            reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RRETURN         reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RBREAK          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RCONTINUE       reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RPUSH           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RPOP            reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    PTCOMA          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    PARDER          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    COMA            reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    DOSPT           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    CORDER          reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RELSE           reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)
    RELSEIF         reduce using rule 219 (exp -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER .)


state 644

    (221) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .

    END             reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MAS             reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MENOS           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MULTIPLICACION  reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    DIVISION        reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    POTENCIA        reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MODULO          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    IGUALIGUAL      reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    DISTINTO        reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MAYOR           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MENOR           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MAYORIGUAL      reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    MENORIGUAL      reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    ANDD            reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    ORR             reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    PRINT           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    PRINTLN         reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    ID              reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    GLOBAL          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    LOCAL           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RIF             reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RWHILE          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RFOR            reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RRETURN         reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RBREAK          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RCONTINUE       reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RPUSH           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RPOP            reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    PTCOMA          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    PARDER          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    COMA            reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    DOSPT           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    CORDER          reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RELSE           reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)
    RELSEIF         reduce using rule 221 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER .)


state 645

    (222) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER . PARDER

    PARDER          shift and go to state 673


state 646

    (91) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 674


state 647

    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 675

state 648

    (127) assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 127 (assignmentAc -> ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 649

    (84) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 84 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 650

    (94) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 676

state 651

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 677


state 652

    (125) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 125 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 653

    (130) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 678


state 654

    (87) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 87 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 655

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 679

state 656

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 680


state 657

    (123) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPUSH           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RPOP            reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 123 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER PTCOMA .)


state 658

    (128) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 681


state 659

    (161) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .

    END             reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RRETURN         reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RBREAK          reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RPUSH           reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RPOP            reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 161 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)


state 660

    (227) push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .

    PRINT           reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    PRINTLN         reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    ID              reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    GLOBAL          reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    LOCAL           reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    FUNCTION        reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RIF             reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RWHILE          reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RFOR            reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RRETURN         reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RBREAK          reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RCONTINUE       reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RPUSH           reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RPOP            reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    $end            reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    END             reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RELSE           reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RELSEIF         reduce using rule 227 (push -> RPUSH NOTT PARIZQ ID COMA CORIZQ exps CORDER PARDER PTCOMA .)


state 661

    (229) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .

    PRINT           reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    PRINTLN         reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    ID              reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    GLOBAL          reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    LOCAL           reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    FUNCTION        reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RIF             reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RWHILE          reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RFOR            reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RRETURN         reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RBREAK          reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RCONTINUE       reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RPUSH           reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RPOP            reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    $end            reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    END             reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RELSE           reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)
    RELSEIF         reduce using rule 229 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ CORDER PARDER PTCOMA .)


state 662

    (230) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER . PTCOMA

    PTCOMA          shift and go to state 682


state 663

    (98) assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 98 (assignmentA -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 664

    (100) assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 100 (assignmentA -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 665

    (77) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 77 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 666

    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 683


state 667

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 684


state 668

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 685

state 669

    (116) assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 116 (assignmentAf -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 670

    (80) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 686


state 671

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 687

state 672

    (118) assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 118 (assignmentAf -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 673

    (222) exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .

    END             reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MAS             reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MENOS           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MULTIPLICACION  reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    DIVISION        reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    POTENCIA        reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MODULO          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    IGUALIGUAL      reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    DISTINTO        reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MAYOR           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MENOR           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MAYORIGUAL      reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    MENORIGUAL      reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    ANDD            reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    ORR             reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    PRINT           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    PRINTLN         reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    ID              reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    GLOBAL          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    LOCAL           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RIF             reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RWHILE          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RFOR            reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RRETURN         reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RBREAK          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RCONTINUE       reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RPUSH           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RPOP            reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    PTCOMA          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    PARDER          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    COMA            reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    DOSPT           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    CORDER          reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RELSE           reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)
    RELSEIF         reduce using rule 222 (exp -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER .)


state 674

    (91) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 91 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 675

    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 688


state 676

    (94) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 689


state 677

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 690

state 678

    (130) assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 130 (assignmentAc -> LOCAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 679

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 691


state 680

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (234) typeDef -> . RINT
    (235) typeDef -> . RFLOAT
    (236) typeDef -> . RSTRING
    (237) typeDef -> . RCHAR
    (238) typeDef -> . RBOOL
    (239) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (240) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (241) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (242) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (243) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 253
    RFLOAT          shift and go to state 254
    RSTRING         shift and go to state 255
    RCHAR           shift and go to state 256
    RBOOL           shift and go to state 257
    RARRAY          shift and go to state 258

    typeDef                        shift and go to state 692

state 681

    (128) assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 128 (assignmentAc -> GLOBAL ID listArray2 IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 682

    (230) push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .

    PRINT           reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    PRINTLN         reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    ID              reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    GLOBAL          reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    LOCAL           reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    FUNCTION        reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RIF             reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RWHILE          reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RFOR            reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RRETURN         reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RBREAK          reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RCONTINUE       reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RPUSH           reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RPOP            reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    $end            reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    END             reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RELSE           reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)
    RELSEIF         reduce using rule 230 (push -> RPUSH NOTT PARIZQ ID listArray2 COMA CORIZQ exps CORDER PARDER PTCOMA .)


state 683

    (109) assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 109 (assignmentAf -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 684

    (78) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 78 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 685

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 693


state 686

    (80) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 80 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 687

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 694


state 688

    (121) assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 121 (assignmentAc -> ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 689

    (94) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 94 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 690

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 695


state 691

    (92) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 92 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 692

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 696


state 693

    (110) assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 110 (assignmentAf -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 694

    (112) assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 112 (assignmentAf -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 695

    (124) assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 124 (assignmentAc -> LOCAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 696

    (122) assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPUSH           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RPOP            reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 122 (assignmentAc -> GLOBAL ID listArray2 IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOSPT in state 265 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 508 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 543 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 572 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 600 resolved as shift
WARNING: reduce/reduce conflict in state 195 resolved using rule (exps -> exp)
WARNING: rejected rule (listValues -> exp) in state 195
