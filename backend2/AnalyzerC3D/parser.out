Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> Package
Rule 5     instruction -> Import
Rule 6     instruction -> Var
Rule 7     instruction -> HeapA
Rule 8     instruction -> HeapG
Rule 9     instruction -> StackA
Rule 10    instruction -> StackG
Rule 11    instruction -> Function
Rule 12    instruction -> Close
Rule 13    instruction -> assignment
Rule 14    instruction -> ifSt
Rule 15    instruction -> gotoSt
Rule 16    instruction -> labelSt
Rule 17    instruction -> Print
Rule 18    instruction -> FuncCall
Rule 19    assignment -> ID IGUAL exp PTCOMA
Rule 20    labelSt -> ID DOSPT
Rule 21    gotoSt -> RGOTO ID PTCOMA
Rule 22    ifSt -> RIF exp LLAIZQ gotoSt LLADER
Rule 23    HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
Rule 24    HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
Rule 25    StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
Rule 26    StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
Rule 27    Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA
Rule 28    Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA
Rule 29    FuncCall -> ID PARIZQ PARDER PTCOMA
Rule 30    Package -> RPACKAGE RMAIN PTCOMA
Rule 31    Import -> RIMPORT PARIZQ STRING PARDER PTCOMA
Rule 32    Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
Rule 33    Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
Rule 34    Var -> RVAR ids RFLOAT PTCOMA
Rule 35    ids -> ids COMA ID
Rule 36    ids -> ID
Rule 37    Function -> RFUNC ID PARIZQ PARDER LLAIZQ
Rule 38    Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ
Rule 39    Close -> LLADER
Rule 40    exp -> exp MAS exp
Rule 41    exp -> exp MENOS exp
Rule 42    exp -> exp MULTIPLICACION exp
Rule 43    exp -> exp DIVISION exp
Rule 44    exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
Rule 45    exp -> MENOS exp
Rule 46    exp -> exp IGUALIGUAL exp
Rule 47    exp -> exp DISTINTO exp
Rule 48    exp -> exp MAYOR exp
Rule 49    exp -> exp MENOR exp
Rule 50    exp -> exp MAYORIGUAL exp
Rule 51    exp -> exp MENORIGUAL exp
Rule 52    exp -> ID
Rule 53    exp -> RFLOAT PARIZQ ID PARDER
Rule 54    exp -> ENTERO
Rule 55    exp -> RFLOAT PARIZQ ENTERO PARDER
Rule 56    exp -> DECIMAL
Rule 57    exp -> STRING

Terminals, with rules where they appear

COMA                 : 27 28 35 44
CORDER               : 23 24 25 26 32 33
CORIZQ               : 23 24 25 26 32 33
DECIMAL              : 56
DISTINTO             : 47
DIVISION             : 43
DOSPT                : 20
ENTERO               : 32 33 54 55
ID                   : 19 20 21 24 26 29 35 36 37 52 53
IGUAL                : 19 23 24 25 26
IGUALIGUAL           : 46
LLADER               : 22 39
LLAIZQ               : 22 37 38
MAS                  : 40
MAYOR                : 48
MAYORIGUAL           : 50
MENOR                : 49
MENORIGUAL           : 51
MENOS                : 41 45
MULTIPLICACION       : 42
PARDER               : 23 24 25 26 27 28 28 29 31 37 38 44 53 55
PARIZQ               : 23 24 25 26 27 28 28 29 31 37 38 44 53 55
PTCOMA               : 19 21 23 24 25 26 27 28 29 30 31 32 33 34
PUNTO                : 27 28 44
RFLOAT               : 32 33 34 53 55
RFMT                 : 27 28
RFUNC                : 37 38
RGOTO                : 21
RHEAP                : 23 24 33
RIF                  : 22
RIMPORT              : 31
RINT                 : 23 24 25 26 28
RMAIN                : 30 38
RMATH                : 44
RMOD                 : 44
RPACKAGE             : 30
RPRINTF              : 27 28
RSTACK               : 25 26 32
RVAR                 : 32 33 34
STRING               : 27 28 31 57
error                : 

Nonterminals, with rules where they appear

Close                : 12
FuncCall             : 18
Function             : 11
HeapA                : 7
HeapG                : 8
Import               : 5
Package              : 4
Print                : 17
StackA               : 9
StackG               : 10
Var                  : 6
assignment           : 13
exp                  : 19 22 23 23 24 25 25 26 27 28 40 40 41 41 42 42 43 43 44 44 45 46 46 47 47 48 48 49 49 50 50 51 51
gotoSt               : 15 22
ids                  : 34 35
ifSt                 : 14
initial              : 0
instruction          : 2 3
instructions         : 1 2
labelSt              : 16

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . Package
    (5) instruction -> . Import
    (6) instruction -> . Var
    (7) instruction -> . HeapA
    (8) instruction -> . HeapG
    (9) instruction -> . StackA
    (10) instruction -> . StackG
    (11) instruction -> . Function
    (12) instruction -> . Close
    (13) instruction -> . assignment
    (14) instruction -> . ifSt
    (15) instruction -> . gotoSt
    (16) instruction -> . labelSt
    (17) instruction -> . Print
    (18) instruction -> . FuncCall
    (30) Package -> . RPACKAGE RMAIN PTCOMA
    (31) Import -> . RIMPORT PARIZQ STRING PARDER PTCOMA
    (32) Var -> . RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (33) Var -> . RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (34) Var -> . RVAR ids RFLOAT PTCOMA
    (23) HeapA -> . RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (24) HeapG -> . ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (25) StackA -> . RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (26) StackG -> . ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (37) Function -> . RFUNC ID PARIZQ PARDER LLAIZQ
    (38) Function -> . RFUNC RMAIN PARIZQ PARDER LLAIZQ
    (39) Close -> . LLADER
    (19) assignment -> . ID IGUAL exp PTCOMA
    (22) ifSt -> . RIF exp LLAIZQ gotoSt LLADER
    (21) gotoSt -> . RGOTO ID PTCOMA
    (20) labelSt -> . ID DOSPT
    (27) Print -> . RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA
    (28) Print -> . RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) FuncCall -> . ID PARIZQ PARDER PTCOMA

    RPACKAGE        shift and go to state 19
    RIMPORT         shift and go to state 20
    RVAR            shift and go to state 21
    RHEAP           shift and go to state 23
    ID              shift and go to state 24
    RSTACK          shift and go to state 22
    RFUNC           shift and go to state 25
    LLADER          shift and go to state 26
    RIF             shift and go to state 27
    RGOTO           shift and go to state 28
    RFMT            shift and go to state 29

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    Package                        shift and go to state 4
    Import                         shift and go to state 5
    Var                            shift and go to state 6
    HeapA                          shift and go to state 7
    HeapG                          shift and go to state 8
    StackA                         shift and go to state 9
    StackG                         shift and go to state 10
    Function                       shift and go to state 11
    Close                          shift and go to state 12
    assignment                     shift and go to state 13
    ifSt                           shift and go to state 14
    gotoSt                         shift and go to state 15
    labelSt                        shift and go to state 16
    Print                          shift and go to state 17
    FuncCall                       shift and go to state 18

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . Package
    (5) instruction -> . Import
    (6) instruction -> . Var
    (7) instruction -> . HeapA
    (8) instruction -> . HeapG
    (9) instruction -> . StackA
    (10) instruction -> . StackG
    (11) instruction -> . Function
    (12) instruction -> . Close
    (13) instruction -> . assignment
    (14) instruction -> . ifSt
    (15) instruction -> . gotoSt
    (16) instruction -> . labelSt
    (17) instruction -> . Print
    (18) instruction -> . FuncCall
    (30) Package -> . RPACKAGE RMAIN PTCOMA
    (31) Import -> . RIMPORT PARIZQ STRING PARDER PTCOMA
    (32) Var -> . RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (33) Var -> . RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (34) Var -> . RVAR ids RFLOAT PTCOMA
    (23) HeapA -> . RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (24) HeapG -> . ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (25) StackA -> . RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (26) StackG -> . ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (37) Function -> . RFUNC ID PARIZQ PARDER LLAIZQ
    (38) Function -> . RFUNC RMAIN PARIZQ PARDER LLAIZQ
    (39) Close -> . LLADER
    (19) assignment -> . ID IGUAL exp PTCOMA
    (22) ifSt -> . RIF exp LLAIZQ gotoSt LLADER
    (21) gotoSt -> . RGOTO ID PTCOMA
    (20) labelSt -> . ID DOSPT
    (27) Print -> . RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA
    (28) Print -> . RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) FuncCall -> . ID PARIZQ PARDER PTCOMA

    $end            reduce using rule 1 (initial -> instructions .)
    RPACKAGE        shift and go to state 19
    RIMPORT         shift and go to state 20
    RVAR            shift and go to state 21
    RHEAP           shift and go to state 23
    ID              shift and go to state 24
    RSTACK          shift and go to state 22
    RFUNC           shift and go to state 25
    LLADER          shift and go to state 26
    RIF             shift and go to state 27
    RGOTO           shift and go to state 28
    RFMT            shift and go to state 29

    instruction                    shift and go to state 30
    Package                        shift and go to state 4
    Import                         shift and go to state 5
    Var                            shift and go to state 6
    HeapA                          shift and go to state 7
    HeapG                          shift and go to state 8
    StackA                         shift and go to state 9
    StackG                         shift and go to state 10
    Function                       shift and go to state 11
    Close                          shift and go to state 12
    assignment                     shift and go to state 13
    ifSt                           shift and go to state 14
    gotoSt                         shift and go to state 15
    labelSt                        shift and go to state 16
    Print                          shift and go to state 17
    FuncCall                       shift and go to state 18

state 3

    (3) instructions -> instruction .

    RPACKAGE        reduce using rule 3 (instructions -> instruction .)
    RIMPORT         reduce using rule 3 (instructions -> instruction .)
    RVAR            reduce using rule 3 (instructions -> instruction .)
    RHEAP           reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    RSTACK          reduce using rule 3 (instructions -> instruction .)
    RFUNC           reduce using rule 3 (instructions -> instruction .)
    LLADER          reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RGOTO           reduce using rule 3 (instructions -> instruction .)
    RFMT            reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> Package .

    RPACKAGE        reduce using rule 4 (instruction -> Package .)
    RIMPORT         reduce using rule 4 (instruction -> Package .)
    RVAR            reduce using rule 4 (instruction -> Package .)
    RHEAP           reduce using rule 4 (instruction -> Package .)
    ID              reduce using rule 4 (instruction -> Package .)
    RSTACK          reduce using rule 4 (instruction -> Package .)
    RFUNC           reduce using rule 4 (instruction -> Package .)
    LLADER          reduce using rule 4 (instruction -> Package .)
    RIF             reduce using rule 4 (instruction -> Package .)
    RGOTO           reduce using rule 4 (instruction -> Package .)
    RFMT            reduce using rule 4 (instruction -> Package .)
    $end            reduce using rule 4 (instruction -> Package .)


state 5

    (5) instruction -> Import .

    RPACKAGE        reduce using rule 5 (instruction -> Import .)
    RIMPORT         reduce using rule 5 (instruction -> Import .)
    RVAR            reduce using rule 5 (instruction -> Import .)
    RHEAP           reduce using rule 5 (instruction -> Import .)
    ID              reduce using rule 5 (instruction -> Import .)
    RSTACK          reduce using rule 5 (instruction -> Import .)
    RFUNC           reduce using rule 5 (instruction -> Import .)
    LLADER          reduce using rule 5 (instruction -> Import .)
    RIF             reduce using rule 5 (instruction -> Import .)
    RGOTO           reduce using rule 5 (instruction -> Import .)
    RFMT            reduce using rule 5 (instruction -> Import .)
    $end            reduce using rule 5 (instruction -> Import .)


state 6

    (6) instruction -> Var .

    RPACKAGE        reduce using rule 6 (instruction -> Var .)
    RIMPORT         reduce using rule 6 (instruction -> Var .)
    RVAR            reduce using rule 6 (instruction -> Var .)
    RHEAP           reduce using rule 6 (instruction -> Var .)
    ID              reduce using rule 6 (instruction -> Var .)
    RSTACK          reduce using rule 6 (instruction -> Var .)
    RFUNC           reduce using rule 6 (instruction -> Var .)
    LLADER          reduce using rule 6 (instruction -> Var .)
    RIF             reduce using rule 6 (instruction -> Var .)
    RGOTO           reduce using rule 6 (instruction -> Var .)
    RFMT            reduce using rule 6 (instruction -> Var .)
    $end            reduce using rule 6 (instruction -> Var .)


state 7

    (7) instruction -> HeapA .

    RPACKAGE        reduce using rule 7 (instruction -> HeapA .)
    RIMPORT         reduce using rule 7 (instruction -> HeapA .)
    RVAR            reduce using rule 7 (instruction -> HeapA .)
    RHEAP           reduce using rule 7 (instruction -> HeapA .)
    ID              reduce using rule 7 (instruction -> HeapA .)
    RSTACK          reduce using rule 7 (instruction -> HeapA .)
    RFUNC           reduce using rule 7 (instruction -> HeapA .)
    LLADER          reduce using rule 7 (instruction -> HeapA .)
    RIF             reduce using rule 7 (instruction -> HeapA .)
    RGOTO           reduce using rule 7 (instruction -> HeapA .)
    RFMT            reduce using rule 7 (instruction -> HeapA .)
    $end            reduce using rule 7 (instruction -> HeapA .)


state 8

    (8) instruction -> HeapG .

    RPACKAGE        reduce using rule 8 (instruction -> HeapG .)
    RIMPORT         reduce using rule 8 (instruction -> HeapG .)
    RVAR            reduce using rule 8 (instruction -> HeapG .)
    RHEAP           reduce using rule 8 (instruction -> HeapG .)
    ID              reduce using rule 8 (instruction -> HeapG .)
    RSTACK          reduce using rule 8 (instruction -> HeapG .)
    RFUNC           reduce using rule 8 (instruction -> HeapG .)
    LLADER          reduce using rule 8 (instruction -> HeapG .)
    RIF             reduce using rule 8 (instruction -> HeapG .)
    RGOTO           reduce using rule 8 (instruction -> HeapG .)
    RFMT            reduce using rule 8 (instruction -> HeapG .)
    $end            reduce using rule 8 (instruction -> HeapG .)


state 9

    (9) instruction -> StackA .

    RPACKAGE        reduce using rule 9 (instruction -> StackA .)
    RIMPORT         reduce using rule 9 (instruction -> StackA .)
    RVAR            reduce using rule 9 (instruction -> StackA .)
    RHEAP           reduce using rule 9 (instruction -> StackA .)
    ID              reduce using rule 9 (instruction -> StackA .)
    RSTACK          reduce using rule 9 (instruction -> StackA .)
    RFUNC           reduce using rule 9 (instruction -> StackA .)
    LLADER          reduce using rule 9 (instruction -> StackA .)
    RIF             reduce using rule 9 (instruction -> StackA .)
    RGOTO           reduce using rule 9 (instruction -> StackA .)
    RFMT            reduce using rule 9 (instruction -> StackA .)
    $end            reduce using rule 9 (instruction -> StackA .)


state 10

    (10) instruction -> StackG .

    RPACKAGE        reduce using rule 10 (instruction -> StackG .)
    RIMPORT         reduce using rule 10 (instruction -> StackG .)
    RVAR            reduce using rule 10 (instruction -> StackG .)
    RHEAP           reduce using rule 10 (instruction -> StackG .)
    ID              reduce using rule 10 (instruction -> StackG .)
    RSTACK          reduce using rule 10 (instruction -> StackG .)
    RFUNC           reduce using rule 10 (instruction -> StackG .)
    LLADER          reduce using rule 10 (instruction -> StackG .)
    RIF             reduce using rule 10 (instruction -> StackG .)
    RGOTO           reduce using rule 10 (instruction -> StackG .)
    RFMT            reduce using rule 10 (instruction -> StackG .)
    $end            reduce using rule 10 (instruction -> StackG .)


state 11

    (11) instruction -> Function .

    RPACKAGE        reduce using rule 11 (instruction -> Function .)
    RIMPORT         reduce using rule 11 (instruction -> Function .)
    RVAR            reduce using rule 11 (instruction -> Function .)
    RHEAP           reduce using rule 11 (instruction -> Function .)
    ID              reduce using rule 11 (instruction -> Function .)
    RSTACK          reduce using rule 11 (instruction -> Function .)
    RFUNC           reduce using rule 11 (instruction -> Function .)
    LLADER          reduce using rule 11 (instruction -> Function .)
    RIF             reduce using rule 11 (instruction -> Function .)
    RGOTO           reduce using rule 11 (instruction -> Function .)
    RFMT            reduce using rule 11 (instruction -> Function .)
    $end            reduce using rule 11 (instruction -> Function .)


state 12

    (12) instruction -> Close .

    RPACKAGE        reduce using rule 12 (instruction -> Close .)
    RIMPORT         reduce using rule 12 (instruction -> Close .)
    RVAR            reduce using rule 12 (instruction -> Close .)
    RHEAP           reduce using rule 12 (instruction -> Close .)
    ID              reduce using rule 12 (instruction -> Close .)
    RSTACK          reduce using rule 12 (instruction -> Close .)
    RFUNC           reduce using rule 12 (instruction -> Close .)
    LLADER          reduce using rule 12 (instruction -> Close .)
    RIF             reduce using rule 12 (instruction -> Close .)
    RGOTO           reduce using rule 12 (instruction -> Close .)
    RFMT            reduce using rule 12 (instruction -> Close .)
    $end            reduce using rule 12 (instruction -> Close .)


state 13

    (13) instruction -> assignment .

    RPACKAGE        reduce using rule 13 (instruction -> assignment .)
    RIMPORT         reduce using rule 13 (instruction -> assignment .)
    RVAR            reduce using rule 13 (instruction -> assignment .)
    RHEAP           reduce using rule 13 (instruction -> assignment .)
    ID              reduce using rule 13 (instruction -> assignment .)
    RSTACK          reduce using rule 13 (instruction -> assignment .)
    RFUNC           reduce using rule 13 (instruction -> assignment .)
    LLADER          reduce using rule 13 (instruction -> assignment .)
    RIF             reduce using rule 13 (instruction -> assignment .)
    RGOTO           reduce using rule 13 (instruction -> assignment .)
    RFMT            reduce using rule 13 (instruction -> assignment .)
    $end            reduce using rule 13 (instruction -> assignment .)


state 14

    (14) instruction -> ifSt .

    RPACKAGE        reduce using rule 14 (instruction -> ifSt .)
    RIMPORT         reduce using rule 14 (instruction -> ifSt .)
    RVAR            reduce using rule 14 (instruction -> ifSt .)
    RHEAP           reduce using rule 14 (instruction -> ifSt .)
    ID              reduce using rule 14 (instruction -> ifSt .)
    RSTACK          reduce using rule 14 (instruction -> ifSt .)
    RFUNC           reduce using rule 14 (instruction -> ifSt .)
    LLADER          reduce using rule 14 (instruction -> ifSt .)
    RIF             reduce using rule 14 (instruction -> ifSt .)
    RGOTO           reduce using rule 14 (instruction -> ifSt .)
    RFMT            reduce using rule 14 (instruction -> ifSt .)
    $end            reduce using rule 14 (instruction -> ifSt .)


state 15

    (15) instruction -> gotoSt .

    RPACKAGE        reduce using rule 15 (instruction -> gotoSt .)
    RIMPORT         reduce using rule 15 (instruction -> gotoSt .)
    RVAR            reduce using rule 15 (instruction -> gotoSt .)
    RHEAP           reduce using rule 15 (instruction -> gotoSt .)
    ID              reduce using rule 15 (instruction -> gotoSt .)
    RSTACK          reduce using rule 15 (instruction -> gotoSt .)
    RFUNC           reduce using rule 15 (instruction -> gotoSt .)
    LLADER          reduce using rule 15 (instruction -> gotoSt .)
    RIF             reduce using rule 15 (instruction -> gotoSt .)
    RGOTO           reduce using rule 15 (instruction -> gotoSt .)
    RFMT            reduce using rule 15 (instruction -> gotoSt .)
    $end            reduce using rule 15 (instruction -> gotoSt .)


state 16

    (16) instruction -> labelSt .

    RPACKAGE        reduce using rule 16 (instruction -> labelSt .)
    RIMPORT         reduce using rule 16 (instruction -> labelSt .)
    RVAR            reduce using rule 16 (instruction -> labelSt .)
    RHEAP           reduce using rule 16 (instruction -> labelSt .)
    ID              reduce using rule 16 (instruction -> labelSt .)
    RSTACK          reduce using rule 16 (instruction -> labelSt .)
    RFUNC           reduce using rule 16 (instruction -> labelSt .)
    LLADER          reduce using rule 16 (instruction -> labelSt .)
    RIF             reduce using rule 16 (instruction -> labelSt .)
    RGOTO           reduce using rule 16 (instruction -> labelSt .)
    RFMT            reduce using rule 16 (instruction -> labelSt .)
    $end            reduce using rule 16 (instruction -> labelSt .)


state 17

    (17) instruction -> Print .

    RPACKAGE        reduce using rule 17 (instruction -> Print .)
    RIMPORT         reduce using rule 17 (instruction -> Print .)
    RVAR            reduce using rule 17 (instruction -> Print .)
    RHEAP           reduce using rule 17 (instruction -> Print .)
    ID              reduce using rule 17 (instruction -> Print .)
    RSTACK          reduce using rule 17 (instruction -> Print .)
    RFUNC           reduce using rule 17 (instruction -> Print .)
    LLADER          reduce using rule 17 (instruction -> Print .)
    RIF             reduce using rule 17 (instruction -> Print .)
    RGOTO           reduce using rule 17 (instruction -> Print .)
    RFMT            reduce using rule 17 (instruction -> Print .)
    $end            reduce using rule 17 (instruction -> Print .)


state 18

    (18) instruction -> FuncCall .

    RPACKAGE        reduce using rule 18 (instruction -> FuncCall .)
    RIMPORT         reduce using rule 18 (instruction -> FuncCall .)
    RVAR            reduce using rule 18 (instruction -> FuncCall .)
    RHEAP           reduce using rule 18 (instruction -> FuncCall .)
    ID              reduce using rule 18 (instruction -> FuncCall .)
    RSTACK          reduce using rule 18 (instruction -> FuncCall .)
    RFUNC           reduce using rule 18 (instruction -> FuncCall .)
    LLADER          reduce using rule 18 (instruction -> FuncCall .)
    RIF             reduce using rule 18 (instruction -> FuncCall .)
    RGOTO           reduce using rule 18 (instruction -> FuncCall .)
    RFMT            reduce using rule 18 (instruction -> FuncCall .)
    $end            reduce using rule 18 (instruction -> FuncCall .)


state 19

    (30) Package -> RPACKAGE . RMAIN PTCOMA

    RMAIN           shift and go to state 31


state 20

    (31) Import -> RIMPORT . PARIZQ STRING PARDER PTCOMA

    PARIZQ          shift and go to state 32


state 21

    (32) Var -> RVAR . RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (33) Var -> RVAR . RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (34) Var -> RVAR . ids RFLOAT PTCOMA
    (35) ids -> . ids COMA ID
    (36) ids -> . ID

    RSTACK          shift and go to state 33
    RHEAP           shift and go to state 34
    ID              shift and go to state 36

    ids                            shift and go to state 35

state 22

    (25) StackA -> RSTACK . CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    CORIZQ          shift and go to state 37


state 23

    (23) HeapA -> RHEAP . CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    CORIZQ          shift and go to state 38


state 24

    (24) HeapG -> ID . IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (26) StackG -> ID . IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (19) assignment -> ID . IGUAL exp PTCOMA
    (20) labelSt -> ID . DOSPT
    (29) FuncCall -> ID . PARIZQ PARDER PTCOMA

    IGUAL           shift and go to state 39
    DOSPT           shift and go to state 41
    PARIZQ          shift and go to state 40


state 25

    (37) Function -> RFUNC . ID PARIZQ PARDER LLAIZQ
    (38) Function -> RFUNC . RMAIN PARIZQ PARDER LLAIZQ

    ID              shift and go to state 42
    RMAIN           shift and go to state 43


state 26

    (39) Close -> LLADER .

    RPACKAGE        reduce using rule 39 (Close -> LLADER .)
    RIMPORT         reduce using rule 39 (Close -> LLADER .)
    RVAR            reduce using rule 39 (Close -> LLADER .)
    RHEAP           reduce using rule 39 (Close -> LLADER .)
    ID              reduce using rule 39 (Close -> LLADER .)
    RSTACK          reduce using rule 39 (Close -> LLADER .)
    RFUNC           reduce using rule 39 (Close -> LLADER .)
    LLADER          reduce using rule 39 (Close -> LLADER .)
    RIF             reduce using rule 39 (Close -> LLADER .)
    RGOTO           reduce using rule 39 (Close -> LLADER .)
    RFMT            reduce using rule 39 (Close -> LLADER .)
    $end            reduce using rule 39 (Close -> LLADER .)


state 27

    (22) ifSt -> RIF . exp LLAIZQ gotoSt LLADER
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 44

state 28

    (21) gotoSt -> RGOTO . ID PTCOMA

    ID              shift and go to state 52


state 29

    (27) Print -> RFMT . PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA
    (28) Print -> RFMT . PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    PUNTO           shift and go to state 53


state 30

    (2) instructions -> instructions instruction .

    RPACKAGE        reduce using rule 2 (instructions -> instructions instruction .)
    RIMPORT         reduce using rule 2 (instructions -> instructions instruction .)
    RVAR            reduce using rule 2 (instructions -> instructions instruction .)
    RHEAP           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    RSTACK          reduce using rule 2 (instructions -> instructions instruction .)
    RFUNC           reduce using rule 2 (instructions -> instructions instruction .)
    LLADER          reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RGOTO           reduce using rule 2 (instructions -> instructions instruction .)
    RFMT            reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 31

    (30) Package -> RPACKAGE RMAIN . PTCOMA

    PTCOMA          shift and go to state 54


state 32

    (31) Import -> RIMPORT PARIZQ . STRING PARDER PTCOMA

    STRING          shift and go to state 55


state 33

    (32) Var -> RVAR RSTACK . CORIZQ ENTERO CORDER RFLOAT PTCOMA

    CORIZQ          shift and go to state 56


state 34

    (33) Var -> RVAR RHEAP . CORIZQ ENTERO CORDER RFLOAT PTCOMA

    CORIZQ          shift and go to state 57


state 35

    (34) Var -> RVAR ids . RFLOAT PTCOMA
    (35) ids -> ids . COMA ID

    RFLOAT          shift and go to state 58
    COMA            shift and go to state 59


state 36

    (36) ids -> ID .

    RFLOAT          reduce using rule 36 (ids -> ID .)
    COMA            reduce using rule 36 (ids -> ID .)


state 37

    (25) StackA -> RSTACK CORIZQ . RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    RINT            shift and go to state 60


state 38

    (23) HeapA -> RHEAP CORIZQ . RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    RINT            shift and go to state 61


state 39

    (24) HeapG -> ID IGUAL . RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (26) StackG -> ID IGUAL . RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (19) assignment -> ID IGUAL . exp PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RHEAP           shift and go to state 62
    RSTACK          shift and go to state 64
    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 63

state 40

    (29) FuncCall -> ID PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 65


state 41

    (20) labelSt -> ID DOSPT .

    RPACKAGE        reduce using rule 20 (labelSt -> ID DOSPT .)
    RIMPORT         reduce using rule 20 (labelSt -> ID DOSPT .)
    RVAR            reduce using rule 20 (labelSt -> ID DOSPT .)
    RHEAP           reduce using rule 20 (labelSt -> ID DOSPT .)
    ID              reduce using rule 20 (labelSt -> ID DOSPT .)
    RSTACK          reduce using rule 20 (labelSt -> ID DOSPT .)
    RFUNC           reduce using rule 20 (labelSt -> ID DOSPT .)
    LLADER          reduce using rule 20 (labelSt -> ID DOSPT .)
    RIF             reduce using rule 20 (labelSt -> ID DOSPT .)
    RGOTO           reduce using rule 20 (labelSt -> ID DOSPT .)
    RFMT            reduce using rule 20 (labelSt -> ID DOSPT .)
    $end            reduce using rule 20 (labelSt -> ID DOSPT .)


state 42

    (37) Function -> RFUNC ID . PARIZQ PARDER LLAIZQ

    PARIZQ          shift and go to state 66


state 43

    (38) Function -> RFUNC RMAIN . PARIZQ PARDER LLAIZQ

    PARIZQ          shift and go to state 67


state 44

    (22) ifSt -> RIF exp . LLAIZQ gotoSt LLADER
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          shift and go to state 68
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 45

    (45) exp -> MENOS . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 79

state 46

    (44) exp -> RMATH . PUNTO RMOD PARIZQ exp COMA exp PARDER

    PUNTO           shift and go to state 80


state 47

    (52) exp -> ID .

    LLAIZQ          reduce using rule 52 (exp -> ID .)
    MAS             reduce using rule 52 (exp -> ID .)
    MENOS           reduce using rule 52 (exp -> ID .)
    MULTIPLICACION  reduce using rule 52 (exp -> ID .)
    DIVISION        reduce using rule 52 (exp -> ID .)
    IGUALIGUAL      reduce using rule 52 (exp -> ID .)
    DISTINTO        reduce using rule 52 (exp -> ID .)
    MAYOR           reduce using rule 52 (exp -> ID .)
    MENOR           reduce using rule 52 (exp -> ID .)
    MAYORIGUAL      reduce using rule 52 (exp -> ID .)
    MENORIGUAL      reduce using rule 52 (exp -> ID .)
    PTCOMA          reduce using rule 52 (exp -> ID .)
    PARDER          reduce using rule 52 (exp -> ID .)
    COMA            reduce using rule 52 (exp -> ID .)


state 48

    (53) exp -> RFLOAT . PARIZQ ID PARDER
    (55) exp -> RFLOAT . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 81


state 49

    (54) exp -> ENTERO .

    LLAIZQ          reduce using rule 54 (exp -> ENTERO .)
    MAS             reduce using rule 54 (exp -> ENTERO .)
    MENOS           reduce using rule 54 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 54 (exp -> ENTERO .)
    DIVISION        reduce using rule 54 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 54 (exp -> ENTERO .)
    DISTINTO        reduce using rule 54 (exp -> ENTERO .)
    MAYOR           reduce using rule 54 (exp -> ENTERO .)
    MENOR           reduce using rule 54 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 54 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 54 (exp -> ENTERO .)
    PTCOMA          reduce using rule 54 (exp -> ENTERO .)
    PARDER          reduce using rule 54 (exp -> ENTERO .)
    COMA            reduce using rule 54 (exp -> ENTERO .)


state 50

    (56) exp -> DECIMAL .

    LLAIZQ          reduce using rule 56 (exp -> DECIMAL .)
    MAS             reduce using rule 56 (exp -> DECIMAL .)
    MENOS           reduce using rule 56 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 56 (exp -> DECIMAL .)
    DIVISION        reduce using rule 56 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 56 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 56 (exp -> DECIMAL .)
    MAYOR           reduce using rule 56 (exp -> DECIMAL .)
    MENOR           reduce using rule 56 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 56 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 56 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 56 (exp -> DECIMAL .)
    PARDER          reduce using rule 56 (exp -> DECIMAL .)
    COMA            reduce using rule 56 (exp -> DECIMAL .)


state 51

    (57) exp -> STRING .

    LLAIZQ          reduce using rule 57 (exp -> STRING .)
    MAS             reduce using rule 57 (exp -> STRING .)
    MENOS           reduce using rule 57 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 57 (exp -> STRING .)
    DIVISION        reduce using rule 57 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 57 (exp -> STRING .)
    DISTINTO        reduce using rule 57 (exp -> STRING .)
    MAYOR           reduce using rule 57 (exp -> STRING .)
    MENOR           reduce using rule 57 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 57 (exp -> STRING .)
    MENORIGUAL      reduce using rule 57 (exp -> STRING .)
    PTCOMA          reduce using rule 57 (exp -> STRING .)
    PARDER          reduce using rule 57 (exp -> STRING .)
    COMA            reduce using rule 57 (exp -> STRING .)


state 52

    (21) gotoSt -> RGOTO ID . PTCOMA

    PTCOMA          shift and go to state 82


state 53

    (27) Print -> RFMT PUNTO . RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO . RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    RPRINTF         shift and go to state 83


state 54

    (30) Package -> RPACKAGE RMAIN PTCOMA .

    RPACKAGE        reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RIMPORT         reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RVAR            reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RHEAP           reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    ID              reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RSTACK          reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RFUNC           reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    LLADER          reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RIF             reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RGOTO           reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    RFMT            reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)
    $end            reduce using rule 30 (Package -> RPACKAGE RMAIN PTCOMA .)


state 55

    (31) Import -> RIMPORT PARIZQ STRING . PARDER PTCOMA

    PARDER          shift and go to state 84


state 56

    (32) Var -> RVAR RSTACK CORIZQ . ENTERO CORDER RFLOAT PTCOMA

    ENTERO          shift and go to state 85


state 57

    (33) Var -> RVAR RHEAP CORIZQ . ENTERO CORDER RFLOAT PTCOMA

    ENTERO          shift and go to state 86


state 58

    (34) Var -> RVAR ids RFLOAT . PTCOMA

    PTCOMA          shift and go to state 87


state 59

    (35) ids -> ids COMA . ID

    ID              shift and go to state 88


state 60

    (25) StackA -> RSTACK CORIZQ RINT . PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    PARIZQ          shift and go to state 89


state 61

    (23) HeapA -> RHEAP CORIZQ RINT . PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    PARIZQ          shift and go to state 90


state 62

    (24) HeapG -> ID IGUAL RHEAP . CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA

    CORIZQ          shift and go to state 91


state 63

    (19) assignment -> ID IGUAL exp . PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PTCOMA          shift and go to state 92
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 64

    (26) StackG -> ID IGUAL RSTACK . CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA

    CORIZQ          shift and go to state 93


state 65

    (29) FuncCall -> ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 94


state 66

    (37) Function -> RFUNC ID PARIZQ . PARDER LLAIZQ

    PARDER          shift and go to state 95


state 67

    (38) Function -> RFUNC RMAIN PARIZQ . PARDER LLAIZQ

    PARDER          shift and go to state 96


state 68

    (22) ifSt -> RIF exp LLAIZQ . gotoSt LLADER
    (21) gotoSt -> . RGOTO ID PTCOMA

    RGOTO           shift and go to state 28

    gotoSt                         shift and go to state 97

state 69

    (40) exp -> exp MAS . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 98

state 70

    (41) exp -> exp MENOS . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 99

state 71

    (42) exp -> exp MULTIPLICACION . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 100

state 72

    (43) exp -> exp DIVISION . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 101

state 73

    (46) exp -> exp IGUALIGUAL . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 102

state 74

    (47) exp -> exp DISTINTO . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 103

state 75

    (48) exp -> exp MAYOR . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 104

state 76

    (49) exp -> exp MENOR . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 105

state 77

    (50) exp -> exp MAYORIGUAL . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 106

state 78

    (51) exp -> exp MENORIGUAL . exp
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 107

state 79

    (45) exp -> MENOS exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 45 (exp -> MENOS exp .)
    MAS             reduce using rule 45 (exp -> MENOS exp .)
    MENOS           reduce using rule 45 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 45 (exp -> MENOS exp .)
    DIVISION        reduce using rule 45 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 45 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 45 (exp -> MENOS exp .)
    MAYOR           reduce using rule 45 (exp -> MENOS exp .)
    MENOR           reduce using rule 45 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 45 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 45 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 45 (exp -> MENOS exp .)
    PARDER          reduce using rule 45 (exp -> MENOS exp .)
    COMA            reduce using rule 45 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 80

    (44) exp -> RMATH PUNTO . RMOD PARIZQ exp COMA exp PARDER

    RMOD            shift and go to state 108


state 81

    (53) exp -> RFLOAT PARIZQ . ID PARDER
    (55) exp -> RFLOAT PARIZQ . ENTERO PARDER

    ID              shift and go to state 109
    ENTERO          shift and go to state 110


state 82

    (21) gotoSt -> RGOTO ID PTCOMA .

    RPACKAGE        reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RIMPORT         reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RVAR            reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RHEAP           reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    ID              reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RSTACK          reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RFUNC           reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    LLADER          reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RIF             reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RGOTO           reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    RFMT            reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)
    $end            reduce using rule 21 (gotoSt -> RGOTO ID PTCOMA .)


state 83

    (27) Print -> RFMT PUNTO RPRINTF . PARIZQ STRING COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF . PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 111


state 84

    (31) Import -> RIMPORT PARIZQ STRING PARDER . PTCOMA

    PTCOMA          shift and go to state 112


state 85

    (32) Var -> RVAR RSTACK CORIZQ ENTERO . CORDER RFLOAT PTCOMA

    CORDER          shift and go to state 113


state 86

    (33) Var -> RVAR RHEAP CORIZQ ENTERO . CORDER RFLOAT PTCOMA

    CORDER          shift and go to state 114


state 87

    (34) Var -> RVAR ids RFLOAT PTCOMA .

    RPACKAGE        reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RIMPORT         reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RVAR            reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RHEAP           reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    ID              reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RSTACK          reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RFUNC           reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    LLADER          reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RIF             reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RGOTO           reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    RFMT            reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)
    $end            reduce using rule 34 (Var -> RVAR ids RFLOAT PTCOMA .)


state 88

    (35) ids -> ids COMA ID .

    RFLOAT          reduce using rule 35 (ids -> ids COMA ID .)
    COMA            reduce using rule 35 (ids -> ids COMA ID .)


state 89

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ . exp PARDER CORDER IGUAL exp PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 115

state 90

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ . exp PARDER CORDER IGUAL exp PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 116

state 91

    (24) HeapG -> ID IGUAL RHEAP CORIZQ . RINT PARIZQ exp PARDER CORDER PTCOMA

    RINT            shift and go to state 117


state 92

    (19) assignment -> ID IGUAL exp PTCOMA .

    RPACKAGE        reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RIMPORT         reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RVAR            reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RHEAP           reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RSTACK          reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RFUNC           reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    LLADER          reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RGOTO           reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    RFMT            reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 19 (assignment -> ID IGUAL exp PTCOMA .)


state 93

    (26) StackG -> ID IGUAL RSTACK CORIZQ . RINT PARIZQ exp PARDER CORDER PTCOMA

    RINT            shift and go to state 118


state 94

    (29) FuncCall -> ID PARIZQ PARDER PTCOMA .

    RPACKAGE        reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RIMPORT         reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RVAR            reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RHEAP           reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RSTACK          reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RFUNC           reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    LLADER          reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RIF             reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RGOTO           reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RFMT            reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 29 (FuncCall -> ID PARIZQ PARDER PTCOMA .)


state 95

    (37) Function -> RFUNC ID PARIZQ PARDER . LLAIZQ

    LLAIZQ          shift and go to state 119


state 96

    (38) Function -> RFUNC RMAIN PARIZQ PARDER . LLAIZQ

    LLAIZQ          shift and go to state 120


state 97

    (22) ifSt -> RIF exp LLAIZQ gotoSt . LLADER

    LLADER          shift and go to state 121


state 98

    (40) exp -> exp MAS exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 40 (exp -> exp MAS exp .)
    MAS             reduce using rule 40 (exp -> exp MAS exp .)
    MENOS           reduce using rule 40 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 40 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 40 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 40 (exp -> exp MAS exp .)
    MENOR           reduce using rule 40 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 40 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 40 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 40 (exp -> exp MAS exp .)
    PARDER          reduce using rule 40 (exp -> exp MAS exp .)
    COMA            reduce using rule 40 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MULTIPLICACION  [ reduce using rule 40 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 40 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 99

    (41) exp -> exp MENOS exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 41 (exp -> exp MENOS exp .)
    MAS             reduce using rule 41 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 41 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 41 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 41 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 41 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 41 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 41 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 41 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 41 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 41 (exp -> exp MENOS exp .)
    COMA            reduce using rule 41 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MULTIPLICACION  [ reduce using rule 41 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 41 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 100

    (42) exp -> exp MULTIPLICACION exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 42 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 42 (exp -> exp MULTIPLICACION exp .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 101

    (43) exp -> exp DIVISION exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 43 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 43 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 43 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 43 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 43 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 43 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 43 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 43 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 43 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 43 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 43 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 43 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 43 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 43 (exp -> exp DIVISION exp .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 102

    (46) exp -> exp IGUALIGUAL exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 46 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MAS             [ reduce using rule 46 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 46 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 46 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 46 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 103

    (47) exp -> exp DISTINTO exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 47 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 47 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 47 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 47 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 47 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 47 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 47 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 47 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 47 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 47 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MAS             [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 104

    (48) exp -> exp MAYOR exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 48 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 48 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 48 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 48 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 48 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 48 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 48 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 48 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 48 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 48 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MAS             [ reduce using rule 48 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 48 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 48 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 48 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 105

    (49) exp -> exp MENOR exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 49 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 49 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 49 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 49 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 49 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 49 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 49 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 49 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 49 (exp -> exp MENOR exp .)
    COMA            reduce using rule 49 (exp -> exp MENOR exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MAS             [ reduce using rule 49 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 49 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 49 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 49 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 106

    (50) exp -> exp MAYORIGUAL exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 50 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MAS             [ reduce using rule 50 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 50 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 50 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 50 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 107

    (51) exp -> exp MENORIGUAL exp .
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 51 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MAS             [ reduce using rule 51 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 51 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 51 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 51 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 73 ]
  ! DISTINTO        [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! MAYORIGUAL      [ shift and go to state 77 ]
  ! MENORIGUAL      [ shift and go to state 78 ]


state 108

    (44) exp -> RMATH PUNTO RMOD . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 122


state 109

    (53) exp -> RFLOAT PARIZQ ID . PARDER

    PARDER          shift and go to state 123


state 110

    (55) exp -> RFLOAT PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 124


state 111

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ . STRING COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF PARIZQ . STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    STRING          shift and go to state 125


state 112

    (31) Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .

    RPACKAGE        reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RIMPORT         reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RVAR            reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RHEAP           reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    ID              reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RSTACK          reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RFUNC           reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    LLADER          reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RIF             reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RGOTO           reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RFMT            reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    $end            reduce using rule 31 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)


state 113

    (32) Var -> RVAR RSTACK CORIZQ ENTERO CORDER . RFLOAT PTCOMA

    RFLOAT          shift and go to state 126


state 114

    (33) Var -> RVAR RHEAP CORIZQ ENTERO CORDER . RFLOAT PTCOMA

    RFLOAT          shift and go to state 127


state 115

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ exp . PARDER CORDER IGUAL exp PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 128
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 116

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ exp . PARDER CORDER IGUAL exp PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 129
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 117

    (24) HeapG -> ID IGUAL RHEAP CORIZQ RINT . PARIZQ exp PARDER CORDER PTCOMA

    PARIZQ          shift and go to state 130


state 118

    (26) StackG -> ID IGUAL RSTACK CORIZQ RINT . PARIZQ exp PARDER CORDER PTCOMA

    PARIZQ          shift and go to state 131


state 119

    (37) Function -> RFUNC ID PARIZQ PARDER LLAIZQ .

    RPACKAGE        reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RIMPORT         reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RVAR            reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RHEAP           reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    ID              reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RSTACK          reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RFUNC           reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    LLADER          reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RIF             reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RGOTO           reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    RFMT            reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)
    $end            reduce using rule 37 (Function -> RFUNC ID PARIZQ PARDER LLAIZQ .)


state 120

    (38) Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .

    RPACKAGE        reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RIMPORT         reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RVAR            reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RHEAP           reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    ID              reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RSTACK          reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RFUNC           reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    LLADER          reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RIF             reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RGOTO           reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    RFMT            reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)
    $end            reduce using rule 38 (Function -> RFUNC RMAIN PARIZQ PARDER LLAIZQ .)


state 121

    (22) ifSt -> RIF exp LLAIZQ gotoSt LLADER .

    RPACKAGE        reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RIMPORT         reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RVAR            reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RHEAP           reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    ID              reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RSTACK          reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RFUNC           reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    LLADER          reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RIF             reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RGOTO           reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RFMT            reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    $end            reduce using rule 22 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)


state 122

    (44) exp -> RMATH PUNTO RMOD PARIZQ . exp COMA exp PARDER
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 132

state 123

    (53) exp -> RFLOAT PARIZQ ID PARDER .

    LLAIZQ          reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MAS             reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MENOS           reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MULTIPLICACION  reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    DIVISION        reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    IGUALIGUAL      reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    DISTINTO        reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MAYOR           reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MENOR           reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MAYORIGUAL      reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    MENORIGUAL      reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    PTCOMA          reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    PARDER          reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)
    COMA            reduce using rule 53 (exp -> RFLOAT PARIZQ ID PARDER .)


state 124

    (55) exp -> RFLOAT PARIZQ ENTERO PARDER .

    LLAIZQ          reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MAS             reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MENOS           reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MULTIPLICACION  reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    DIVISION        reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    IGUALIGUAL      reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    DISTINTO        reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MAYOR           reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MENOR           reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MAYORIGUAL      reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    MENORIGUAL      reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 55 (exp -> RFLOAT PARIZQ ENTERO PARDER .)


state 125

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ STRING . COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING . COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    COMA            shift and go to state 133


state 126

    (32) Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT . PTCOMA

    PTCOMA          shift and go to state 134


state 127

    (33) Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT . PTCOMA

    PTCOMA          shift and go to state 135


state 128

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER . CORDER IGUAL exp PTCOMA

    CORDER          shift and go to state 136


state 129

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER . CORDER IGUAL exp PTCOMA

    CORDER          shift and go to state 137


state 130

    (24) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ . exp PARDER CORDER PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 138

state 131

    (26) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ . exp PARDER CORDER PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 139

state 132

    (44) exp -> RMATH PUNTO RMOD PARIZQ exp . COMA exp PARDER
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    COMA            shift and go to state 140
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 133

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA . exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA . RINT PARIZQ exp PARDER PARDER PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RINT            shift and go to state 142
    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 141

state 134

    (32) Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .

    RPACKAGE        reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIMPORT         reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RVAR            reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RHEAP           reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    ID              reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RSTACK          reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RFUNC           reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    LLADER          reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIF             reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RGOTO           reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RFMT            reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    $end            reduce using rule 32 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)


state 135

    (33) Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .

    RPACKAGE        reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIMPORT         reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RVAR            reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RHEAP           reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    ID              reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RSTACK          reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RFUNC           reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    LLADER          reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIF             reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RGOTO           reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RFMT            reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    $end            reduce using rule 33 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)


state 136

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER . IGUAL exp PTCOMA

    IGUAL           shift and go to state 143


state 137

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER . IGUAL exp PTCOMA

    IGUAL           shift and go to state 144


state 138

    (24) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp . PARDER CORDER PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 145
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 139

    (26) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp . PARDER CORDER PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 146
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 140

    (44) exp -> RMATH PUNTO RMOD PARIZQ exp COMA . exp PARDER
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 147

state 141

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp . PARDER PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 148
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 142

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT . PARIZQ exp PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 149


state 143

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL . exp PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 150

state 144

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL . exp PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 151

state 145

    (24) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER . CORDER PTCOMA

    CORDER          shift and go to state 152


state 146

    (26) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER . CORDER PTCOMA

    CORDER          shift and go to state 153


state 147

    (44) exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp . PARDER
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 154
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 148

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER . PTCOMA

    PTCOMA          shift and go to state 155


state 149

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ . exp PARDER PARDER PTCOMA
    (40) exp -> . exp MAS exp
    (41) exp -> . exp MENOS exp
    (42) exp -> . exp MULTIPLICACION exp
    (43) exp -> . exp DIVISION exp
    (44) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (45) exp -> . MENOS exp
    (46) exp -> . exp IGUALIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp MAYOR exp
    (49) exp -> . exp MENOR exp
    (50) exp -> . exp MAYORIGUAL exp
    (51) exp -> . exp MENORIGUAL exp
    (52) exp -> . ID
    (53) exp -> . RFLOAT PARIZQ ID PARDER
    (54) exp -> . ENTERO
    (55) exp -> . RFLOAT PARIZQ ENTERO PARDER
    (56) exp -> . DECIMAL
    (57) exp -> . STRING

    RMATH           shift and go to state 46
    MENOS           shift and go to state 45
    ID              shift and go to state 47
    RFLOAT          shift and go to state 48
    ENTERO          shift and go to state 49
    DECIMAL         shift and go to state 50
    STRING          shift and go to state 51

    exp                            shift and go to state 156

state 150

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp . PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PTCOMA          shift and go to state 157
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 151

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp . PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PTCOMA          shift and go to state 158
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 152

    (24) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER . PTCOMA

    PTCOMA          shift and go to state 159


state 153

    (26) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER . PTCOMA

    PTCOMA          shift and go to state 160


state 154

    (44) exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .

    LLAIZQ          reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 44 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)


state 155

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .

    RPACKAGE        reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RIMPORT         reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RVAR            reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RHEAP           reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    ID              reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RSTACK          reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RFUNC           reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    LLADER          reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RIF             reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RGOTO           reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    RFMT            reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)
    $end            reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA exp PARDER PTCOMA .)


state 156

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp . PARDER PARDER PTCOMA
    (40) exp -> exp . MAS exp
    (41) exp -> exp . MENOS exp
    (42) exp -> exp . MULTIPLICACION exp
    (43) exp -> exp . DIVISION exp
    (46) exp -> exp . IGUALIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . MAYOR exp
    (49) exp -> exp . MENOR exp
    (50) exp -> exp . MAYORIGUAL exp
    (51) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 161
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    IGUALIGUAL      shift and go to state 73
    DISTINTO        shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 77
    MENORIGUAL      shift and go to state 78


state 157

    (25) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .

    RPACKAGE        reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIMPORT         reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RVAR            reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RHEAP           reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    ID              reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RSTACK          reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RFUNC           reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    LLADER          reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIF             reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RGOTO           reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RFMT            reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    $end            reduce using rule 25 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)


state 158

    (23) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .

    RPACKAGE        reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIMPORT         reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RVAR            reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RHEAP           reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    ID              reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RSTACK          reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RFUNC           reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    LLADER          reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIF             reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RGOTO           reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RFMT            reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    $end            reduce using rule 23 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)


state 159

    (24) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .

    RPACKAGE        reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIMPORT         reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RVAR            reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RHEAP           reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    ID              reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RSTACK          reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RFUNC           reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    LLADER          reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIF             reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RGOTO           reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RFMT            reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    $end            reduce using rule 24 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)


state 160

    (26) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .

    RPACKAGE        reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIMPORT         reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RVAR            reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RHEAP           reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    ID              reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RSTACK          reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RFUNC           reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    LLADER          reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIF             reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RGOTO           reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RFMT            reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    $end            reduce using rule 26 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)


state 161

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER . PARDER PTCOMA

    PARDER          shift and go to state 162


state 162

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER . PTCOMA

    PTCOMA          shift and go to state 163


state 163

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .

    RPACKAGE        reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIMPORT         reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RVAR            reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RHEAP           reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    ID              reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RSTACK          reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RFUNC           reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    LLADER          reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIF             reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RGOTO           reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RFMT            reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    $end            reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ STRING COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)

