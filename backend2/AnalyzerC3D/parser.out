Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RCLOSEA
    RFUNC
    ROPENA

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> assignment
Rule 5     instruction -> labelSt
Rule 6     instruction -> gotoSt
Rule 7     instruction -> ifSt
Rule 8     instruction -> HeapA
Rule 9     instruction -> HeapG
Rule 10    instruction -> StackA
Rule 11    instruction -> StackG
Rule 12    instruction -> Print
Rule 13    instruction -> FuncCall
Rule 14    instruction -> Package
Rule 15    instruction -> Import
Rule 16    instruction -> Var
Rule 17    assignment -> ID IGUAL exp PTCOMA
Rule 18    labelSt -> ID DOSPT
Rule 19    gotoSt -> RGOTO ID PTCOMA
Rule 20    ifSt -> RIF exp LLAIZQ gotoSt LLADER
Rule 21    HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
Rule 22    HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
Rule 23    StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
Rule 24    StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
Rule 25    Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA
Rule 26    Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA
Rule 27    Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA
Rule 28    Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
Rule 29    Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
Rule 30    Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA
Rule 31    FuncCall -> ID PARIZQ PARDER PTCOMA
Rule 32    Package -> RPACKAGE RMAIN PTCOMA
Rule 33    Import -> RIMPORT PARIZQ STRING PARDER PTCOMA
Rule 34    Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
Rule 35    Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
Rule 36    Var -> RVAR ids RFLOAT PTCOMA
Rule 37    ids -> ids COMA ID
Rule 38    ids -> ID
Rule 39    exp -> exp MAS exp
Rule 40    exp -> exp MENOS exp
Rule 41    exp -> exp MULTIPLICACION exp
Rule 42    exp -> exp DIVISION exp
Rule 43    exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
Rule 44    exp -> MENOS exp
Rule 45    exp -> exp IGUALIGUAL exp
Rule 46    exp -> exp DISTINTO exp
Rule 47    exp -> exp MAYOR exp
Rule 48    exp -> exp MENOR exp
Rule 49    exp -> exp MAYORIGUAL exp
Rule 50    exp -> exp MENORIGUAL exp
Rule 51    exp -> ID
Rule 52    exp -> ENTERO
Rule 53    exp -> DECIMAL

Terminals, with rules where they appear

COMA                 : 25 26 27 28 29 30 37 43
CORDER               : 21 22 23 24 34 35
CORIZQ               : 21 22 23 24 34 35
DECIMAL              : 53
DISTINTO             : 46
DIVISION             : 42
DOSPT                : 18
ENTERO               : 34 35 52
ID                   : 17 18 19 22 24 31 37 38 51
IGUAL                : 17 21 22 23 24
IGUALIGUAL           : 45
LLADER               : 20
LLAIZQ               : 20
MAS                  : 39
MAYOR                : 47
MAYORIGUAL           : 49
MENOR                : 48
MENORIGUAL           : 50
MENOS                : 40 44
MULTIPLICACION       : 41
PARDER               : 21 22 23 24 25 26 27 28 28 29 29 30 30 31 33 43
PARIZQ               : 21 22 23 24 25 26 27 28 28 29 29 30 30 31 33 43
PRCHAR               : 25 28
PRFLOAT              : 27 30
PRINTEGER            : 26 29
PTCOMA               : 17 19 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
PUNTO                : 25 26 27 28 29 30 43
RCLOSEA              : 
RFLOAT               : 34 35 36
RFMT                 : 25 26 27 28 29 30
RFUNC                : 
RGOTO                : 19
RHEAP                : 21 22 35
RIF                  : 20
RIMPORT              : 33
RINT                 : 21 22 23 24 28 29 30
RMAIN                : 32
RMATH                : 43
RMOD                 : 43
ROPENA               : 
RPACKAGE             : 32
RPRINTF              : 25 26 27 28 29 30
RSTACK               : 23 24 34
RVAR                 : 34 35 36
STRING               : 33
error                : 

Nonterminals, with rules where they appear

FuncCall             : 13
HeapA                : 8
HeapG                : 9
Import               : 15
Package              : 14
Print                : 12
StackA               : 10
StackG               : 11
Var                  : 16
assignment           : 4
exp                  : 17 20 21 21 22 23 23 24 25 26 27 28 29 30 39 39 40 40 41 41 42 42 43 43 44 45 45 46 46 47 47 48 48 49 49 50 50
gotoSt               : 6 20
ids                  : 36 37
ifSt                 : 7
initial              : 0
instruction          : 2 3
instructions         : 1 2
labelSt              : 5

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . assignment
    (5) instruction -> . labelSt
    (6) instruction -> . gotoSt
    (7) instruction -> . ifSt
    (8) instruction -> . HeapA
    (9) instruction -> . HeapG
    (10) instruction -> . StackA
    (11) instruction -> . StackG
    (12) instruction -> . Print
    (13) instruction -> . FuncCall
    (14) instruction -> . Package
    (15) instruction -> . Import
    (16) instruction -> . Var
    (17) assignment -> . ID IGUAL exp PTCOMA
    (18) labelSt -> . ID DOSPT
    (19) gotoSt -> . RGOTO ID PTCOMA
    (20) ifSt -> . RIF exp LLAIZQ gotoSt LLADER
    (21) HeapA -> . RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (22) HeapG -> . ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (23) StackA -> . RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (24) StackG -> . ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (25) Print -> . RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA
    (26) Print -> . RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA
    (27) Print -> . RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA
    (28) Print -> . RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) Print -> . RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (30) Print -> . RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (31) FuncCall -> . ID PARIZQ PARDER PTCOMA
    (32) Package -> . RPACKAGE RMAIN PTCOMA
    (33) Import -> . RIMPORT PARIZQ STRING PARDER PTCOMA
    (34) Var -> . RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (35) Var -> . RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (36) Var -> . RVAR ids RFLOAT PTCOMA

    ID              shift and go to state 17
    RGOTO           shift and go to state 18
    RIF             shift and go to state 19
    RHEAP           shift and go to state 20
    RSTACK          shift and go to state 21
    RFMT            shift and go to state 22
    RPACKAGE        shift and go to state 23
    RIMPORT         shift and go to state 24
    RVAR            shift and go to state 25

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    assignment                     shift and go to state 4
    labelSt                        shift and go to state 5
    gotoSt                         shift and go to state 6
    ifSt                           shift and go to state 7
    HeapA                          shift and go to state 8
    HeapG                          shift and go to state 9
    StackA                         shift and go to state 10
    StackG                         shift and go to state 11
    Print                          shift and go to state 12
    FuncCall                       shift and go to state 13
    Package                        shift and go to state 14
    Import                         shift and go to state 15
    Var                            shift and go to state 16

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . assignment
    (5) instruction -> . labelSt
    (6) instruction -> . gotoSt
    (7) instruction -> . ifSt
    (8) instruction -> . HeapA
    (9) instruction -> . HeapG
    (10) instruction -> . StackA
    (11) instruction -> . StackG
    (12) instruction -> . Print
    (13) instruction -> . FuncCall
    (14) instruction -> . Package
    (15) instruction -> . Import
    (16) instruction -> . Var
    (17) assignment -> . ID IGUAL exp PTCOMA
    (18) labelSt -> . ID DOSPT
    (19) gotoSt -> . RGOTO ID PTCOMA
    (20) ifSt -> . RIF exp LLAIZQ gotoSt LLADER
    (21) HeapA -> . RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (22) HeapG -> . ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (23) StackA -> . RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA
    (24) StackG -> . ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (25) Print -> . RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA
    (26) Print -> . RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA
    (27) Print -> . RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA
    (28) Print -> . RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) Print -> . RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (30) Print -> . RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (31) FuncCall -> . ID PARIZQ PARDER PTCOMA
    (32) Package -> . RPACKAGE RMAIN PTCOMA
    (33) Import -> . RIMPORT PARIZQ STRING PARDER PTCOMA
    (34) Var -> . RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (35) Var -> . RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (36) Var -> . RVAR ids RFLOAT PTCOMA

    $end            reduce using rule 1 (initial -> instructions .)
    ID              shift and go to state 17
    RGOTO           shift and go to state 18
    RIF             shift and go to state 19
    RHEAP           shift and go to state 20
    RSTACK          shift and go to state 21
    RFMT            shift and go to state 22
    RPACKAGE        shift and go to state 23
    RIMPORT         shift and go to state 24
    RVAR            shift and go to state 25

    instruction                    shift and go to state 26
    assignment                     shift and go to state 4
    labelSt                        shift and go to state 5
    gotoSt                         shift and go to state 6
    ifSt                           shift and go to state 7
    HeapA                          shift and go to state 8
    HeapG                          shift and go to state 9
    StackA                         shift and go to state 10
    StackG                         shift and go to state 11
    Print                          shift and go to state 12
    FuncCall                       shift and go to state 13
    Package                        shift and go to state 14
    Import                         shift and go to state 15
    Var                            shift and go to state 16

state 3

    (3) instructions -> instruction .

    ID              reduce using rule 3 (instructions -> instruction .)
    RGOTO           reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RHEAP           reduce using rule 3 (instructions -> instruction .)
    RSTACK          reduce using rule 3 (instructions -> instruction .)
    RFMT            reduce using rule 3 (instructions -> instruction .)
    RPACKAGE        reduce using rule 3 (instructions -> instruction .)
    RIMPORT         reduce using rule 3 (instructions -> instruction .)
    RVAR            reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> assignment .

    ID              reduce using rule 4 (instruction -> assignment .)
    RGOTO           reduce using rule 4 (instruction -> assignment .)
    RIF             reduce using rule 4 (instruction -> assignment .)
    RHEAP           reduce using rule 4 (instruction -> assignment .)
    RSTACK          reduce using rule 4 (instruction -> assignment .)
    RFMT            reduce using rule 4 (instruction -> assignment .)
    RPACKAGE        reduce using rule 4 (instruction -> assignment .)
    RIMPORT         reduce using rule 4 (instruction -> assignment .)
    RVAR            reduce using rule 4 (instruction -> assignment .)
    $end            reduce using rule 4 (instruction -> assignment .)


state 5

    (5) instruction -> labelSt .

    ID              reduce using rule 5 (instruction -> labelSt .)
    RGOTO           reduce using rule 5 (instruction -> labelSt .)
    RIF             reduce using rule 5 (instruction -> labelSt .)
    RHEAP           reduce using rule 5 (instruction -> labelSt .)
    RSTACK          reduce using rule 5 (instruction -> labelSt .)
    RFMT            reduce using rule 5 (instruction -> labelSt .)
    RPACKAGE        reduce using rule 5 (instruction -> labelSt .)
    RIMPORT         reduce using rule 5 (instruction -> labelSt .)
    RVAR            reduce using rule 5 (instruction -> labelSt .)
    $end            reduce using rule 5 (instruction -> labelSt .)


state 6

    (6) instruction -> gotoSt .

    ID              reduce using rule 6 (instruction -> gotoSt .)
    RGOTO           reduce using rule 6 (instruction -> gotoSt .)
    RIF             reduce using rule 6 (instruction -> gotoSt .)
    RHEAP           reduce using rule 6 (instruction -> gotoSt .)
    RSTACK          reduce using rule 6 (instruction -> gotoSt .)
    RFMT            reduce using rule 6 (instruction -> gotoSt .)
    RPACKAGE        reduce using rule 6 (instruction -> gotoSt .)
    RIMPORT         reduce using rule 6 (instruction -> gotoSt .)
    RVAR            reduce using rule 6 (instruction -> gotoSt .)
    $end            reduce using rule 6 (instruction -> gotoSt .)


state 7

    (7) instruction -> ifSt .

    ID              reduce using rule 7 (instruction -> ifSt .)
    RGOTO           reduce using rule 7 (instruction -> ifSt .)
    RIF             reduce using rule 7 (instruction -> ifSt .)
    RHEAP           reduce using rule 7 (instruction -> ifSt .)
    RSTACK          reduce using rule 7 (instruction -> ifSt .)
    RFMT            reduce using rule 7 (instruction -> ifSt .)
    RPACKAGE        reduce using rule 7 (instruction -> ifSt .)
    RIMPORT         reduce using rule 7 (instruction -> ifSt .)
    RVAR            reduce using rule 7 (instruction -> ifSt .)
    $end            reduce using rule 7 (instruction -> ifSt .)


state 8

    (8) instruction -> HeapA .

    ID              reduce using rule 8 (instruction -> HeapA .)
    RGOTO           reduce using rule 8 (instruction -> HeapA .)
    RIF             reduce using rule 8 (instruction -> HeapA .)
    RHEAP           reduce using rule 8 (instruction -> HeapA .)
    RSTACK          reduce using rule 8 (instruction -> HeapA .)
    RFMT            reduce using rule 8 (instruction -> HeapA .)
    RPACKAGE        reduce using rule 8 (instruction -> HeapA .)
    RIMPORT         reduce using rule 8 (instruction -> HeapA .)
    RVAR            reduce using rule 8 (instruction -> HeapA .)
    $end            reduce using rule 8 (instruction -> HeapA .)


state 9

    (9) instruction -> HeapG .

    ID              reduce using rule 9 (instruction -> HeapG .)
    RGOTO           reduce using rule 9 (instruction -> HeapG .)
    RIF             reduce using rule 9 (instruction -> HeapG .)
    RHEAP           reduce using rule 9 (instruction -> HeapG .)
    RSTACK          reduce using rule 9 (instruction -> HeapG .)
    RFMT            reduce using rule 9 (instruction -> HeapG .)
    RPACKAGE        reduce using rule 9 (instruction -> HeapG .)
    RIMPORT         reduce using rule 9 (instruction -> HeapG .)
    RVAR            reduce using rule 9 (instruction -> HeapG .)
    $end            reduce using rule 9 (instruction -> HeapG .)


state 10

    (10) instruction -> StackA .

    ID              reduce using rule 10 (instruction -> StackA .)
    RGOTO           reduce using rule 10 (instruction -> StackA .)
    RIF             reduce using rule 10 (instruction -> StackA .)
    RHEAP           reduce using rule 10 (instruction -> StackA .)
    RSTACK          reduce using rule 10 (instruction -> StackA .)
    RFMT            reduce using rule 10 (instruction -> StackA .)
    RPACKAGE        reduce using rule 10 (instruction -> StackA .)
    RIMPORT         reduce using rule 10 (instruction -> StackA .)
    RVAR            reduce using rule 10 (instruction -> StackA .)
    $end            reduce using rule 10 (instruction -> StackA .)


state 11

    (11) instruction -> StackG .

    ID              reduce using rule 11 (instruction -> StackG .)
    RGOTO           reduce using rule 11 (instruction -> StackG .)
    RIF             reduce using rule 11 (instruction -> StackG .)
    RHEAP           reduce using rule 11 (instruction -> StackG .)
    RSTACK          reduce using rule 11 (instruction -> StackG .)
    RFMT            reduce using rule 11 (instruction -> StackG .)
    RPACKAGE        reduce using rule 11 (instruction -> StackG .)
    RIMPORT         reduce using rule 11 (instruction -> StackG .)
    RVAR            reduce using rule 11 (instruction -> StackG .)
    $end            reduce using rule 11 (instruction -> StackG .)


state 12

    (12) instruction -> Print .

    ID              reduce using rule 12 (instruction -> Print .)
    RGOTO           reduce using rule 12 (instruction -> Print .)
    RIF             reduce using rule 12 (instruction -> Print .)
    RHEAP           reduce using rule 12 (instruction -> Print .)
    RSTACK          reduce using rule 12 (instruction -> Print .)
    RFMT            reduce using rule 12 (instruction -> Print .)
    RPACKAGE        reduce using rule 12 (instruction -> Print .)
    RIMPORT         reduce using rule 12 (instruction -> Print .)
    RVAR            reduce using rule 12 (instruction -> Print .)
    $end            reduce using rule 12 (instruction -> Print .)


state 13

    (13) instruction -> FuncCall .

    ID              reduce using rule 13 (instruction -> FuncCall .)
    RGOTO           reduce using rule 13 (instruction -> FuncCall .)
    RIF             reduce using rule 13 (instruction -> FuncCall .)
    RHEAP           reduce using rule 13 (instruction -> FuncCall .)
    RSTACK          reduce using rule 13 (instruction -> FuncCall .)
    RFMT            reduce using rule 13 (instruction -> FuncCall .)
    RPACKAGE        reduce using rule 13 (instruction -> FuncCall .)
    RIMPORT         reduce using rule 13 (instruction -> FuncCall .)
    RVAR            reduce using rule 13 (instruction -> FuncCall .)
    $end            reduce using rule 13 (instruction -> FuncCall .)


state 14

    (14) instruction -> Package .

    ID              reduce using rule 14 (instruction -> Package .)
    RGOTO           reduce using rule 14 (instruction -> Package .)
    RIF             reduce using rule 14 (instruction -> Package .)
    RHEAP           reduce using rule 14 (instruction -> Package .)
    RSTACK          reduce using rule 14 (instruction -> Package .)
    RFMT            reduce using rule 14 (instruction -> Package .)
    RPACKAGE        reduce using rule 14 (instruction -> Package .)
    RIMPORT         reduce using rule 14 (instruction -> Package .)
    RVAR            reduce using rule 14 (instruction -> Package .)
    $end            reduce using rule 14 (instruction -> Package .)


state 15

    (15) instruction -> Import .

    ID              reduce using rule 15 (instruction -> Import .)
    RGOTO           reduce using rule 15 (instruction -> Import .)
    RIF             reduce using rule 15 (instruction -> Import .)
    RHEAP           reduce using rule 15 (instruction -> Import .)
    RSTACK          reduce using rule 15 (instruction -> Import .)
    RFMT            reduce using rule 15 (instruction -> Import .)
    RPACKAGE        reduce using rule 15 (instruction -> Import .)
    RIMPORT         reduce using rule 15 (instruction -> Import .)
    RVAR            reduce using rule 15 (instruction -> Import .)
    $end            reduce using rule 15 (instruction -> Import .)


state 16

    (16) instruction -> Var .

    ID              reduce using rule 16 (instruction -> Var .)
    RGOTO           reduce using rule 16 (instruction -> Var .)
    RIF             reduce using rule 16 (instruction -> Var .)
    RHEAP           reduce using rule 16 (instruction -> Var .)
    RSTACK          reduce using rule 16 (instruction -> Var .)
    RFMT            reduce using rule 16 (instruction -> Var .)
    RPACKAGE        reduce using rule 16 (instruction -> Var .)
    RIMPORT         reduce using rule 16 (instruction -> Var .)
    RVAR            reduce using rule 16 (instruction -> Var .)
    $end            reduce using rule 16 (instruction -> Var .)


state 17

    (17) assignment -> ID . IGUAL exp PTCOMA
    (18) labelSt -> ID . DOSPT
    (22) HeapG -> ID . IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (24) StackG -> ID . IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (31) FuncCall -> ID . PARIZQ PARDER PTCOMA

    IGUAL           shift and go to state 27
    DOSPT           shift and go to state 28
    PARIZQ          shift and go to state 29


state 18

    (19) gotoSt -> RGOTO . ID PTCOMA

    ID              shift and go to state 30


state 19

    (20) ifSt -> RIF . exp LLAIZQ gotoSt LLADER
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 31

state 20

    (21) HeapA -> RHEAP . CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    CORIZQ          shift and go to state 37


state 21

    (23) StackA -> RSTACK . CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    CORIZQ          shift and go to state 38


state 22

    (25) Print -> RFMT . PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA
    (26) Print -> RFMT . PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA
    (27) Print -> RFMT . PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA
    (28) Print -> RFMT . PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) Print -> RFMT . PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (30) Print -> RFMT . PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    PUNTO           shift and go to state 39


state 23

    (32) Package -> RPACKAGE . RMAIN PTCOMA

    RMAIN           shift and go to state 40


state 24

    (33) Import -> RIMPORT . PARIZQ STRING PARDER PTCOMA

    PARIZQ          shift and go to state 41


state 25

    (34) Var -> RVAR . RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (35) Var -> RVAR . RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA
    (36) Var -> RVAR . ids RFLOAT PTCOMA
    (37) ids -> . ids COMA ID
    (38) ids -> . ID

    RSTACK          shift and go to state 42
    RHEAP           shift and go to state 43
    ID              shift and go to state 45

    ids                            shift and go to state 44

state 26

    (2) instructions -> instructions instruction .

    ID              reduce using rule 2 (instructions -> instructions instruction .)
    RGOTO           reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RHEAP           reduce using rule 2 (instructions -> instructions instruction .)
    RSTACK          reduce using rule 2 (instructions -> instructions instruction .)
    RFMT            reduce using rule 2 (instructions -> instructions instruction .)
    RPACKAGE        reduce using rule 2 (instructions -> instructions instruction .)
    RIMPORT         reduce using rule 2 (instructions -> instructions instruction .)
    RVAR            reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 27

    (17) assignment -> ID IGUAL . exp PTCOMA
    (22) HeapG -> ID IGUAL . RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (24) StackG -> ID IGUAL . RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RHEAP           shift and go to state 47
    RSTACK          shift and go to state 48
    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 46

state 28

    (18) labelSt -> ID DOSPT .

    ID              reduce using rule 18 (labelSt -> ID DOSPT .)
    RGOTO           reduce using rule 18 (labelSt -> ID DOSPT .)
    RIF             reduce using rule 18 (labelSt -> ID DOSPT .)
    RHEAP           reduce using rule 18 (labelSt -> ID DOSPT .)
    RSTACK          reduce using rule 18 (labelSt -> ID DOSPT .)
    RFMT            reduce using rule 18 (labelSt -> ID DOSPT .)
    RPACKAGE        reduce using rule 18 (labelSt -> ID DOSPT .)
    RIMPORT         reduce using rule 18 (labelSt -> ID DOSPT .)
    RVAR            reduce using rule 18 (labelSt -> ID DOSPT .)
    $end            reduce using rule 18 (labelSt -> ID DOSPT .)


state 29

    (31) FuncCall -> ID PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 49


state 30

    (19) gotoSt -> RGOTO ID . PTCOMA

    PTCOMA          shift and go to state 50


state 31

    (20) ifSt -> RIF exp . LLAIZQ gotoSt LLADER
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          shift and go to state 51
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 32

    (44) exp -> MENOS . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 62

state 33

    (43) exp -> RMATH . PUNTO RMOD PARIZQ exp COMA exp PARDER

    PUNTO           shift and go to state 63


state 34

    (51) exp -> ID .

    LLAIZQ          reduce using rule 51 (exp -> ID .)
    MAS             reduce using rule 51 (exp -> ID .)
    MENOS           reduce using rule 51 (exp -> ID .)
    MULTIPLICACION  reduce using rule 51 (exp -> ID .)
    DIVISION        reduce using rule 51 (exp -> ID .)
    IGUALIGUAL      reduce using rule 51 (exp -> ID .)
    DISTINTO        reduce using rule 51 (exp -> ID .)
    MAYOR           reduce using rule 51 (exp -> ID .)
    MENOR           reduce using rule 51 (exp -> ID .)
    MAYORIGUAL      reduce using rule 51 (exp -> ID .)
    MENORIGUAL      reduce using rule 51 (exp -> ID .)
    PTCOMA          reduce using rule 51 (exp -> ID .)
    PARDER          reduce using rule 51 (exp -> ID .)
    COMA            reduce using rule 51 (exp -> ID .)


state 35

    (52) exp -> ENTERO .

    LLAIZQ          reduce using rule 52 (exp -> ENTERO .)
    MAS             reduce using rule 52 (exp -> ENTERO .)
    MENOS           reduce using rule 52 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 52 (exp -> ENTERO .)
    DIVISION        reduce using rule 52 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 52 (exp -> ENTERO .)
    DISTINTO        reduce using rule 52 (exp -> ENTERO .)
    MAYOR           reduce using rule 52 (exp -> ENTERO .)
    MENOR           reduce using rule 52 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 52 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 52 (exp -> ENTERO .)
    PTCOMA          reduce using rule 52 (exp -> ENTERO .)
    PARDER          reduce using rule 52 (exp -> ENTERO .)
    COMA            reduce using rule 52 (exp -> ENTERO .)


state 36

    (53) exp -> DECIMAL .

    LLAIZQ          reduce using rule 53 (exp -> DECIMAL .)
    MAS             reduce using rule 53 (exp -> DECIMAL .)
    MENOS           reduce using rule 53 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 53 (exp -> DECIMAL .)
    DIVISION        reduce using rule 53 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 53 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 53 (exp -> DECIMAL .)
    MAYOR           reduce using rule 53 (exp -> DECIMAL .)
    MENOR           reduce using rule 53 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 53 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 53 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 53 (exp -> DECIMAL .)
    PARDER          reduce using rule 53 (exp -> DECIMAL .)
    COMA            reduce using rule 53 (exp -> DECIMAL .)


state 37

    (21) HeapA -> RHEAP CORIZQ . RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    RINT            shift and go to state 64


state 38

    (23) StackA -> RSTACK CORIZQ . RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    RINT            shift and go to state 65


state 39

    (25) Print -> RFMT PUNTO . RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA
    (26) Print -> RFMT PUNTO . RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA
    (27) Print -> RFMT PUNTO . RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO . RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) Print -> RFMT PUNTO . RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (30) Print -> RFMT PUNTO . RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    RPRINTF         shift and go to state 66


state 40

    (32) Package -> RPACKAGE RMAIN . PTCOMA

    PTCOMA          shift and go to state 67


state 41

    (33) Import -> RIMPORT PARIZQ . STRING PARDER PTCOMA

    STRING          shift and go to state 68


state 42

    (34) Var -> RVAR RSTACK . CORIZQ ENTERO CORDER RFLOAT PTCOMA

    CORIZQ          shift and go to state 69


state 43

    (35) Var -> RVAR RHEAP . CORIZQ ENTERO CORDER RFLOAT PTCOMA

    CORIZQ          shift and go to state 70


state 44

    (36) Var -> RVAR ids . RFLOAT PTCOMA
    (37) ids -> ids . COMA ID

    RFLOAT          shift and go to state 71
    COMA            shift and go to state 72


state 45

    (38) ids -> ID .

    RFLOAT          reduce using rule 38 (ids -> ID .)
    COMA            reduce using rule 38 (ids -> ID .)


state 46

    (17) assignment -> ID IGUAL exp . PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PTCOMA          shift and go to state 73
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 47

    (22) HeapG -> ID IGUAL RHEAP . CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA

    CORIZQ          shift and go to state 74


state 48

    (24) StackG -> ID IGUAL RSTACK . CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA

    CORIZQ          shift and go to state 75


state 49

    (31) FuncCall -> ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 76


state 50

    (19) gotoSt -> RGOTO ID PTCOMA .

    ID              reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RGOTO           reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RIF             reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RHEAP           reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RSTACK          reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RFMT            reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RPACKAGE        reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RIMPORT         reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    RVAR            reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    $end            reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)
    LLADER          reduce using rule 19 (gotoSt -> RGOTO ID PTCOMA .)


state 51

    (20) ifSt -> RIF exp LLAIZQ . gotoSt LLADER
    (19) gotoSt -> . RGOTO ID PTCOMA

    RGOTO           shift and go to state 18

    gotoSt                         shift and go to state 77

state 52

    (39) exp -> exp MAS . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 78

state 53

    (40) exp -> exp MENOS . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 79

state 54

    (41) exp -> exp MULTIPLICACION . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 80

state 55

    (42) exp -> exp DIVISION . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 81

state 56

    (45) exp -> exp IGUALIGUAL . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 82

state 57

    (46) exp -> exp DISTINTO . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 83

state 58

    (47) exp -> exp MAYOR . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 84

state 59

    (48) exp -> exp MENOR . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 85

state 60

    (49) exp -> exp MAYORIGUAL . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 86

state 61

    (50) exp -> exp MENORIGUAL . exp
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 87

state 62

    (44) exp -> MENOS exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 44 (exp -> MENOS exp .)
    MAS             reduce using rule 44 (exp -> MENOS exp .)
    MENOS           reduce using rule 44 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 44 (exp -> MENOS exp .)
    DIVISION        reduce using rule 44 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 44 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 44 (exp -> MENOS exp .)
    MAYOR           reduce using rule 44 (exp -> MENOS exp .)
    MENOR           reduce using rule 44 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 44 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 44 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 44 (exp -> MENOS exp .)
    PARDER          reduce using rule 44 (exp -> MENOS exp .)
    COMA            reduce using rule 44 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! MULTIPLICACION  [ shift and go to state 54 ]
  ! DIVISION        [ shift and go to state 55 ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 63

    (43) exp -> RMATH PUNTO . RMOD PARIZQ exp COMA exp PARDER

    RMOD            shift and go to state 88


state 64

    (21) HeapA -> RHEAP CORIZQ RINT . PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    PARIZQ          shift and go to state 89


state 65

    (23) StackA -> RSTACK CORIZQ RINT . PARIZQ exp PARDER CORDER IGUAL exp PTCOMA

    PARIZQ          shift and go to state 90


state 66

    (25) Print -> RFMT PUNTO RPRINTF . PARIZQ PRCHAR COMA exp PARDER PTCOMA
    (26) Print -> RFMT PUNTO RPRINTF . PARIZQ PRINTEGER COMA exp PARDER PTCOMA
    (27) Print -> RFMT PUNTO RPRINTF . PARIZQ PRFLOAT COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF . PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) Print -> RFMT PUNTO RPRINTF . PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (30) Print -> RFMT PUNTO RPRINTF . PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 91


state 67

    (32) Package -> RPACKAGE RMAIN PTCOMA .

    ID              reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RGOTO           reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RIF             reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RHEAP           reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RSTACK          reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RFMT            reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RPACKAGE        reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RIMPORT         reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    RVAR            reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)
    $end            reduce using rule 32 (Package -> RPACKAGE RMAIN PTCOMA .)


state 68

    (33) Import -> RIMPORT PARIZQ STRING . PARDER PTCOMA

    PARDER          shift and go to state 92


state 69

    (34) Var -> RVAR RSTACK CORIZQ . ENTERO CORDER RFLOAT PTCOMA

    ENTERO          shift and go to state 93


state 70

    (35) Var -> RVAR RHEAP CORIZQ . ENTERO CORDER RFLOAT PTCOMA

    ENTERO          shift and go to state 94


state 71

    (36) Var -> RVAR ids RFLOAT . PTCOMA

    PTCOMA          shift and go to state 95


state 72

    (37) ids -> ids COMA . ID

    ID              shift and go to state 96


state 73

    (17) assignment -> ID IGUAL exp PTCOMA .

    ID              reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RGOTO           reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RHEAP           reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RSTACK          reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RFMT            reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RPACKAGE        reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RIMPORT         reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    RVAR            reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 17 (assignment -> ID IGUAL exp PTCOMA .)


state 74

    (22) HeapG -> ID IGUAL RHEAP CORIZQ . RINT PARIZQ exp PARDER CORDER PTCOMA

    RINT            shift and go to state 97


state 75

    (24) StackG -> ID IGUAL RSTACK CORIZQ . RINT PARIZQ exp PARDER CORDER PTCOMA

    RINT            shift and go to state 98


state 76

    (31) FuncCall -> ID PARIZQ PARDER PTCOMA .

    ID              reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RGOTO           reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RIF             reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RHEAP           reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RSTACK          reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RFMT            reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RPACKAGE        reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RIMPORT         reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    RVAR            reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 31 (FuncCall -> ID PARIZQ PARDER PTCOMA .)


state 77

    (20) ifSt -> RIF exp LLAIZQ gotoSt . LLADER

    LLADER          shift and go to state 99


state 78

    (39) exp -> exp MAS exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 39 (exp -> exp MAS exp .)
    MAS             reduce using rule 39 (exp -> exp MAS exp .)
    MENOS           reduce using rule 39 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 39 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 39 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 39 (exp -> exp MAS exp .)
    MENOR           reduce using rule 39 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 39 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 39 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 39 (exp -> exp MAS exp .)
    PARDER          reduce using rule 39 (exp -> exp MAS exp .)
    COMA            reduce using rule 39 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MULTIPLICACION  [ reduce using rule 39 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 39 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 79

    (40) exp -> exp MENOS exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 40 (exp -> exp MENOS exp .)
    MAS             reduce using rule 40 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 40 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 40 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 40 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 40 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 40 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 40 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 40 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 40 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 40 (exp -> exp MENOS exp .)
    COMA            reduce using rule 40 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MULTIPLICACION  [ reduce using rule 40 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 40 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 80

    (41) exp -> exp MULTIPLICACION exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 41 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 41 (exp -> exp MULTIPLICACION exp .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! MULTIPLICACION  [ shift and go to state 54 ]
  ! DIVISION        [ shift and go to state 55 ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 81

    (42) exp -> exp DIVISION exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 42 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 42 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 42 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 42 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 42 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 42 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 42 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 42 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 42 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 42 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 42 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 42 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 42 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 42 (exp -> exp DIVISION exp .)

  ! MAS             [ shift and go to state 52 ]
  ! MENOS           [ shift and go to state 53 ]
  ! MULTIPLICACION  [ shift and go to state 54 ]
  ! DIVISION        [ shift and go to state 55 ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 82

    (45) exp -> exp IGUALIGUAL exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 45 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MAS             [ reduce using rule 45 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 45 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 45 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 45 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 83

    (46) exp -> exp DISTINTO exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 46 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 46 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 46 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 46 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 46 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 46 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 46 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 46 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 46 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 46 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MAS             [ reduce using rule 46 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 46 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 46 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 46 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 84

    (47) exp -> exp MAYOR exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 47 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 47 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 47 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 47 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 47 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 47 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 47 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 47 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 47 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 47 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MAS             [ reduce using rule 47 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 47 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 47 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 47 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 85

    (48) exp -> exp MENOR exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 48 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 48 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 48 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 48 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 48 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 48 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 48 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 48 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 48 (exp -> exp MENOR exp .)
    COMA            reduce using rule 48 (exp -> exp MENOR exp .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MAS             [ reduce using rule 48 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 48 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 48 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 48 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 86

    (49) exp -> exp MAYORIGUAL exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 49 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MAS             [ reduce using rule 49 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 49 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 49 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 49 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 87

    (50) exp -> exp MENORIGUAL exp .
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    LLAIZQ          reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 50 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55

  ! MAS             [ reduce using rule 50 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 50 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 50 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 50 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 56 ]
  ! DISTINTO        [ shift and go to state 57 ]
  ! MAYOR           [ shift and go to state 58 ]
  ! MENOR           [ shift and go to state 59 ]
  ! MAYORIGUAL      [ shift and go to state 60 ]
  ! MENORIGUAL      [ shift and go to state 61 ]


state 88

    (43) exp -> RMATH PUNTO RMOD . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 100


state 89

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ . exp PARDER CORDER IGUAL exp PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 101

state 90

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ . exp PARDER CORDER IGUAL exp PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 102

state 91

    (25) Print -> RFMT PUNTO RPRINTF PARIZQ . PRCHAR COMA exp PARDER PTCOMA
    (26) Print -> RFMT PUNTO RPRINTF PARIZQ . PRINTEGER COMA exp PARDER PTCOMA
    (27) Print -> RFMT PUNTO RPRINTF PARIZQ . PRFLOAT COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF PARIZQ . PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (29) Print -> RFMT PUNTO RPRINTF PARIZQ . PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA
    (30) Print -> RFMT PUNTO RPRINTF PARIZQ . PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    PRCHAR          shift and go to state 103
    PRINTEGER       shift and go to state 104
    PRFLOAT         shift and go to state 105


state 92

    (33) Import -> RIMPORT PARIZQ STRING PARDER . PTCOMA

    PTCOMA          shift and go to state 106


state 93

    (34) Var -> RVAR RSTACK CORIZQ ENTERO . CORDER RFLOAT PTCOMA

    CORDER          shift and go to state 107


state 94

    (35) Var -> RVAR RHEAP CORIZQ ENTERO . CORDER RFLOAT PTCOMA

    CORDER          shift and go to state 108


state 95

    (36) Var -> RVAR ids RFLOAT PTCOMA .

    ID              reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RGOTO           reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RIF             reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RHEAP           reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RSTACK          reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RFMT            reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RPACKAGE        reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RIMPORT         reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    RVAR            reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)
    $end            reduce using rule 36 (Var -> RVAR ids RFLOAT PTCOMA .)


state 96

    (37) ids -> ids COMA ID .

    RFLOAT          reduce using rule 37 (ids -> ids COMA ID .)
    COMA            reduce using rule 37 (ids -> ids COMA ID .)


state 97

    (22) HeapG -> ID IGUAL RHEAP CORIZQ RINT . PARIZQ exp PARDER CORDER PTCOMA

    PARIZQ          shift and go to state 109


state 98

    (24) StackG -> ID IGUAL RSTACK CORIZQ RINT . PARIZQ exp PARDER CORDER PTCOMA

    PARIZQ          shift and go to state 110


state 99

    (20) ifSt -> RIF exp LLAIZQ gotoSt LLADER .

    ID              reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RGOTO           reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RIF             reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RHEAP           reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RSTACK          reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RFMT            reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RPACKAGE        reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RIMPORT         reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    RVAR            reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)
    $end            reduce using rule 20 (ifSt -> RIF exp LLAIZQ gotoSt LLADER .)


state 100

    (43) exp -> RMATH PUNTO RMOD PARIZQ . exp COMA exp PARDER
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 111

state 101

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ exp . PARDER CORDER IGUAL exp PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 112
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 102

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ exp . PARDER CORDER IGUAL exp PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 113
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 103

    (25) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR . COMA exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR . COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    COMA            shift and go to state 114


state 104

    (26) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER . COMA exp PARDER PTCOMA
    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER . COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    COMA            shift and go to state 115


state 105

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT . COMA exp PARDER PTCOMA
    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT . COMA RINT PARIZQ exp PARDER PARDER PTCOMA

    COMA            shift and go to state 116


state 106

    (33) Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .

    ID              reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RGOTO           reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RIF             reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RHEAP           reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RSTACK          reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RFMT            reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RPACKAGE        reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RIMPORT         reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    RVAR            reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)
    $end            reduce using rule 33 (Import -> RIMPORT PARIZQ STRING PARDER PTCOMA .)


state 107

    (34) Var -> RVAR RSTACK CORIZQ ENTERO CORDER . RFLOAT PTCOMA

    RFLOAT          shift and go to state 117


state 108

    (35) Var -> RVAR RHEAP CORIZQ ENTERO CORDER . RFLOAT PTCOMA

    RFLOAT          shift and go to state 118


state 109

    (22) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ . exp PARDER CORDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 119

state 110

    (24) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ . exp PARDER CORDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 120

state 111

    (43) exp -> RMATH PUNTO RMOD PARIZQ exp . COMA exp PARDER
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    COMA            shift and go to state 121
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 112

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER . CORDER IGUAL exp PTCOMA

    CORDER          shift and go to state 122


state 113

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER . CORDER IGUAL exp PTCOMA

    CORDER          shift and go to state 123


state 114

    (25) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA . exp PARDER PTCOMA
    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA . RINT PARIZQ exp PARDER PARDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RINT            shift and go to state 125
    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 124

state 115

    (26) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA . exp PARDER PTCOMA
    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA . RINT PARIZQ exp PARDER PARDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RINT            shift and go to state 127
    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 126

state 116

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA . exp PARDER PTCOMA
    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA . RINT PARIZQ exp PARDER PARDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RINT            shift and go to state 129
    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 128

state 117

    (34) Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT . PTCOMA

    PTCOMA          shift and go to state 130


state 118

    (35) Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT . PTCOMA

    PTCOMA          shift and go to state 131


state 119

    (22) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp . PARDER CORDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 132
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 120

    (24) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp . PARDER CORDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 133
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 121

    (43) exp -> RMATH PUNTO RMOD PARIZQ exp COMA . exp PARDER
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 134

state 122

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER . IGUAL exp PTCOMA

    IGUAL           shift and go to state 135


state 123

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER . IGUAL exp PTCOMA

    IGUAL           shift and go to state 136


state 124

    (25) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp . PARDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 137
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 125

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT . PARIZQ exp PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 138


state 126

    (26) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp . PARDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 139
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 127

    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT . PARIZQ exp PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 140


state 128

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp . PARDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 141
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 129

    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT . PARIZQ exp PARDER PARDER PTCOMA

    PARIZQ          shift and go to state 142


state 130

    (34) Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .

    ID              reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RGOTO           reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIF             reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RHEAP           reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RSTACK          reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RFMT            reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RPACKAGE        reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIMPORT         reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RVAR            reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    $end            reduce using rule 34 (Var -> RVAR RSTACK CORIZQ ENTERO CORDER RFLOAT PTCOMA .)


state 131

    (35) Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .

    ID              reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RGOTO           reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIF             reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RHEAP           reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RSTACK          reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RFMT            reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RPACKAGE        reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RIMPORT         reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    RVAR            reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)
    $end            reduce using rule 35 (Var -> RVAR RHEAP CORIZQ ENTERO CORDER RFLOAT PTCOMA .)


state 132

    (22) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER . CORDER PTCOMA

    CORDER          shift and go to state 143


state 133

    (24) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER . CORDER PTCOMA

    CORDER          shift and go to state 144


state 134

    (43) exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp . PARDER
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 145
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 135

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL . exp PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 146

state 136

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL . exp PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 147

state 137

    (25) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER . PTCOMA

    PTCOMA          shift and go to state 148


state 138

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ . exp PARDER PARDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 149

state 139

    (26) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER . PTCOMA

    PTCOMA          shift and go to state 150


state 140

    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ . exp PARDER PARDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 151

state 141

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER . PTCOMA

    PTCOMA          shift and go to state 152


state 142

    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ . exp PARDER PARDER PTCOMA
    (39) exp -> . exp MAS exp
    (40) exp -> . exp MENOS exp
    (41) exp -> . exp MULTIPLICACION exp
    (42) exp -> . exp DIVISION exp
    (43) exp -> . RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER
    (44) exp -> . MENOS exp
    (45) exp -> . exp IGUALIGUAL exp
    (46) exp -> . exp DISTINTO exp
    (47) exp -> . exp MAYOR exp
    (48) exp -> . exp MENOR exp
    (49) exp -> . exp MAYORIGUAL exp
    (50) exp -> . exp MENORIGUAL exp
    (51) exp -> . ID
    (52) exp -> . ENTERO
    (53) exp -> . DECIMAL

    RMATH           shift and go to state 33
    MENOS           shift and go to state 32
    ID              shift and go to state 34
    ENTERO          shift and go to state 35
    DECIMAL         shift and go to state 36

    exp                            shift and go to state 153

state 143

    (22) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER . PTCOMA

    PTCOMA          shift and go to state 154


state 144

    (24) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER . PTCOMA

    PTCOMA          shift and go to state 155


state 145

    (43) exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .

    LLAIZQ          reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 43 (exp -> RMATH PUNTO RMOD PARIZQ exp COMA exp PARDER .)


state 146

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp . PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PTCOMA          shift and go to state 156
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 147

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp . PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PTCOMA          shift and go to state 157
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 148

    (25) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .

    ID              reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RGOTO           reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RIF             reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RHEAP           reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RSTACK          reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RFMT            reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RPACKAGE        reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RIMPORT         reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    RVAR            reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)
    $end            reduce using rule 25 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA exp PARDER PTCOMA .)


state 149

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp . PARDER PARDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 158
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 150

    (26) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .

    ID              reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RGOTO           reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RIF             reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RHEAP           reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RSTACK          reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RFMT            reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RPACKAGE        reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RIMPORT         reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    RVAR            reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)
    $end            reduce using rule 26 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA exp PARDER PTCOMA .)


state 151

    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp . PARDER PARDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 159
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 152

    (27) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .

    ID              reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RGOTO           reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RIF             reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RHEAP           reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RSTACK          reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RFMT            reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RPACKAGE        reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RIMPORT         reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    RVAR            reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)
    $end            reduce using rule 27 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA exp PARDER PTCOMA .)


state 153

    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp . PARDER PARDER PTCOMA
    (39) exp -> exp . MAS exp
    (40) exp -> exp . MENOS exp
    (41) exp -> exp . MULTIPLICACION exp
    (42) exp -> exp . DIVISION exp
    (45) exp -> exp . IGUALIGUAL exp
    (46) exp -> exp . DISTINTO exp
    (47) exp -> exp . MAYOR exp
    (48) exp -> exp . MENOR exp
    (49) exp -> exp . MAYORIGUAL exp
    (50) exp -> exp . MENORIGUAL exp

    PARDER          shift and go to state 160
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    DIVISION        shift and go to state 55
    IGUALIGUAL      shift and go to state 56
    DISTINTO        shift and go to state 57
    MAYOR           shift and go to state 58
    MENOR           shift and go to state 59
    MAYORIGUAL      shift and go to state 60
    MENORIGUAL      shift and go to state 61


state 154

    (22) HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .

    ID              reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RGOTO           reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIF             reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RHEAP           reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RSTACK          reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RFMT            reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RPACKAGE        reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIMPORT         reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RVAR            reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    $end            reduce using rule 22 (HeapG -> ID IGUAL RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)


state 155

    (24) StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .

    ID              reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RGOTO           reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIF             reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RHEAP           reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RSTACK          reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RFMT            reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RPACKAGE        reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RIMPORT         reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    RVAR            reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)
    $end            reduce using rule 24 (StackG -> ID IGUAL RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER PTCOMA .)


state 156

    (21) HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .

    ID              reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RGOTO           reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIF             reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RHEAP           reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RSTACK          reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RFMT            reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RPACKAGE        reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIMPORT         reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RVAR            reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    $end            reduce using rule 21 (HeapA -> RHEAP CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)


state 157

    (23) StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .

    ID              reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RGOTO           reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIF             reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RHEAP           reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RSTACK          reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RFMT            reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RPACKAGE        reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RIMPORT         reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    RVAR            reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)
    $end            reduce using rule 23 (StackA -> RSTACK CORIZQ RINT PARIZQ exp PARDER CORDER IGUAL exp PTCOMA .)


state 158

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER . PARDER PTCOMA

    PARDER          shift and go to state 161


state 159

    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER . PARDER PTCOMA

    PARDER          shift and go to state 162


state 160

    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER . PARDER PTCOMA

    PARDER          shift and go to state 163


state 161

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER . PTCOMA

    PTCOMA          shift and go to state 164


state 162

    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER . PTCOMA

    PTCOMA          shift and go to state 165


state 163

    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER . PTCOMA

    PTCOMA          shift and go to state 166


state 164

    (28) Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .

    ID              reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RGOTO           reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIF             reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RHEAP           reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RSTACK          reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RFMT            reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RPACKAGE        reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIMPORT         reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RVAR            reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    $end            reduce using rule 28 (Print -> RFMT PUNTO RPRINTF PARIZQ PRCHAR COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)


state 165

    (29) Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .

    ID              reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RGOTO           reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIF             reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RHEAP           reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RSTACK          reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RFMT            reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RPACKAGE        reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIMPORT         reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RVAR            reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    $end            reduce using rule 29 (Print -> RFMT PUNTO RPRINTF PARIZQ PRINTEGER COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)


state 166

    (30) Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .

    ID              reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RGOTO           reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIF             reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RHEAP           reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RSTACK          reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RFMT            reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RPACKAGE        reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RIMPORT         reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    RVAR            reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)
    $end            reduce using rule 30 (Print -> RFMT PUNTO RPRINTF PARIZQ PRFLOAT COMA RINT PARIZQ exp PARDER PARDER PTCOMA .)

