Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructionsf -> instructionsf instructionf
Rule 5     instructionsf -> instructionf
Rule 6     instructionsc -> instructionsc instructionc
Rule 7     instructionsc -> instructionc
Rule 8     instruction -> p_print
Rule 9     instruction -> p_println
Rule 10    instruction -> declaration
Rule 11    instruction -> function
Rule 12    instruction -> callFuncSt
Rule 13    instruction -> ifSt
Rule 14    instruction -> whileSt
Rule 15    instructionf -> p_print
Rule 16    instructionf -> p_println
Rule 17    instructionf -> declarationf
Rule 18    instructionf -> callFuncSt
Rule 19    instructionf -> ifSt
Rule 20    instructionf -> whileSt
Rule 21    instructionc -> p_print
Rule 22    instructionc -> p_println
Rule 23    instructionc -> declarationc
Rule 24    instructionc -> callFuncSt
Rule 25    instructionc -> ifStc
Rule 26    instructionc -> whileSt
Rule 27    empty -> <empty>
Rule 28    p_print -> PRINT PARIZQ exp PARDER PTCOMA
Rule 29    p_println -> PRINTLN PARIZQ exp PARDER PTCOMA
Rule 30    declaration -> ID IGUAL exp PTCOMA
Rule 31    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 32    declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 33    declaration -> GLOBAL ID IGUAL exp PTCOMA
Rule 34    declaration -> GLOBAL ID PTCOMA
Rule 35    declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 36    declaration -> LOCAL ID IGUAL exp PTCOMA
Rule 37    declaration -> LOCAL ID PTCOMA
Rule 38    declarationf -> ID IGUAL exp PTCOMA
Rule 39    declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 40    declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 41    declarationf -> GLOBAL ID IGUAL exp PTCOMA
Rule 42    declarationf -> GLOBAL ID PTCOMA
Rule 43    declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 44    declarationf -> LOCAL ID IGUAL exp PTCOMA
Rule 45    declarationf -> LOCAL ID PTCOMA
Rule 46    declarationc -> ID IGUAL exp PTCOMA
Rule 47    declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 48    declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 49    declarationc -> LOCAL ID IGUAL exp PTCOMA
Rule 50    declarationc -> LOCAL ID PTCOMA
Rule 51    declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 52    declarationc -> GLOBAL ID IGUAL exp PTCOMA
Rule 53    declarationc -> GLOBAL ID PTCOMA
Rule 54    function -> FUNCTION ID parametersFunc blockf
Rule 55    parametersFunc -> PARIZQ parameters PARDER
Rule 56    parametersFunc -> PARIZQ PARDER
Rule 57    parameters -> parameters COMA parameter
Rule 58    parameters -> parameter
Rule 59    parameter -> ID DOSPT DOSPT typeDef
Rule 60    parameter -> ID
Rule 61    callFuncSt -> ID parametersCallFunc PTCOMA
Rule 62    parametersCallFunc -> PARIZQ listValues PARDER
Rule 63    parametersCallFunc -> PARIZQ PARDER
Rule 64    listValues -> listValues COMA exp
Rule 65    listValues -> exp
Rule 66    ifSt -> RIF exp END PTCOMA
Rule 67    ifSt -> RIF exp blockiff END PTCOMA
Rule 68    ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA
Rule 69    ifSt -> RIF exp blockiff RELSE END PTCOMA
Rule 70    ifSt -> RIF exp blockiff elseifSt END PTCOMA
Rule 71    ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
Rule 72    ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA
Rule 73    elseifSt -> elseifSt conelseif
Rule 74    elseifSt -> conelseif
Rule 75    conelseif -> RELSEIF exp blockiff
Rule 76    conelseif -> RELSEIF exp
Rule 77    ifStc -> RIF exp END PTCOMA
Rule 78    ifStc -> RIF exp blockifc END PTCOMA
Rule 79    ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA
Rule 80    ifStc -> RIF exp blockifc RELSE END PTCOMA
Rule 81    ifStc -> RIF exp blockifc elseifStc END PTCOMA
Rule 82    ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
Rule 83    ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA
Rule 84    elseifStc -> elseifStc conelseifc
Rule 85    elseifStc -> conelseifc
Rule 86    conelseifc -> RELSEIF exp blockifc
Rule 87    conelseifc -> RELSEIF exp
Rule 88    whileSt -> RWHILE exp blockc
Rule 89    blockf -> instructionsf END PTCOMA
Rule 90    blockf -> END PTCOMA
Rule 91    blockc -> instructionsc END PTCOMA
Rule 92    blockc -> END PTCOMA
Rule 93    blockiff -> instructionsf
Rule 94    blockifc -> instructionsc
Rule 95    decArray -> CORIZQ CORDER
Rule 96    decArray -> empty
Rule 97    exp -> exp MAS exp
Rule 98    exp -> exp MENOS exp
Rule 99    exp -> exp MULTIPLICACION exp
Rule 100   exp -> exp DIVISION exp
Rule 101   exp -> exp POTENCIA exp
Rule 102   exp -> exp MODULO exp
Rule 103   exp -> exp MAYOR exp
Rule 104   exp -> exp MENOR exp
Rule 105   exp -> exp IGUALIGUAL exp
Rule 106   exp -> exp MAYORIGUAL exp
Rule 107   exp -> exp MENORIGUAL exp
Rule 108   exp -> exp DISTINTO exp
Rule 109   exp -> exp ANDD exp
Rule 110   exp -> exp ORR exp
Rule 111   exp -> NOTT exp
Rule 112   exp -> UPPERCASE PARIZQ exp PARDER
Rule 113   exp -> LOWERCASE PARIZQ exp PARDER
Rule 114   exp -> LOG PARIZQ exp COMA exp PARDER
Rule 115   exp -> LOG10 PARIZQ exp PARDER
Rule 116   exp -> SIN PARIZQ exp PARDER
Rule 117   exp -> COS PARIZQ exp PARDER
Rule 118   exp -> TAN PARIZQ exp PARDER
Rule 119   exp -> SQRT PARIZQ exp PARDER
Rule 120   exp -> PARSE PARIZQ typeDef COMA exp PARDER
Rule 121   exp -> TRUNC PARIZQ typeDef COMA exp PARDER
Rule 122   exp -> FLOAT PARIZQ exp PARDER
Rule 123   exp -> RSTRING PARIZQ exp PARDER
Rule 124   exp -> TYPEOF PARIZQ exp PARDER
Rule 125   typeDef -> RINT
Rule 126   typeDef -> RFLOAT
Rule 127   typeDef -> RSTRING
Rule 128   typeDef -> RCHAR
Rule 129   typeDef -> RBOOL
Rule 130   exp -> PARIZQ exp PARDER
Rule 131   exp -> ENTERO
Rule 132   exp -> DECIMAL
Rule 133   exp -> STRING
Rule 134   exp -> CHAR
Rule 135   exp -> VERDADERO
Rule 136   exp -> FALSO
Rule 137   exp -> NULO
Rule 138   exp -> ID
Rule 139   exp -> ID listArray
Rule 140   exp -> CORIZQ listValues CORDER
Rule 141   listArray -> listArray CORIZQ exp CORDER
Rule 142   listArray -> CORIZQ exp CORDER

Terminals, with rules where they appear

ANDD                 : 109
CHAR                 : 134
COMA                 : 57 64 114 120 121
CORDER               : 95 140 141 142
CORIZQ               : 95 140 141 142
COS                  : 117
DECIMAL              : 132
DISTINTO             : 108
DIVISION             : 100
DOSPT                : 31 31 32 32 35 35 39 39 40 40 43 43 47 47 48 48 51 51 59 59
END                  : 66 67 68 69 70 71 72 77 78 79 80 81 82 83 89 90 91 92
ENTERO               : 131
FALSO                : 136
FLOAT                : 122
FUNCTION             : 54
GLOBAL               : 32 33 34 40 41 42 51 52 53
ID                   : 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 59 60 61 138 139
IGUAL                : 30 31 32 33 35 36 38 39 40 41 43 44 46 47 48 49 51 52
IGUALIGUAL           : 105
LOCAL                : 35 36 37 43 44 45 48 49 50
LOG                  : 114
LOG10                : 115
LOWERCASE            : 113
MAS                  : 97
MAYOR                : 103
MAYORIGUAL           : 106
MENOR                : 104
MENORIGUAL           : 107
MENOS                : 98
MODULO               : 102
MULTIPLICACION       : 99
NOTT                 : 111
NULO                 : 137
ORR                  : 110
PARDER               : 28 29 55 56 62 63 112 113 114 115 116 117 118 119 120 121 122 123 124 130
PARIZQ               : 28 29 55 56 62 63 112 113 114 115 116 117 118 119 120 121 122 123 124 130
PARSE                : 120
POTENCIA             : 101
PRINT                : 28
PRINTLN              : 29
PTCOMA               : 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 61 66 67 68 69 70 71 72 77 78 79 80 81 82 83 89 90 91 92
RBOOL                : 129
RCHAR                : 128
RELSE                : 68 69 71 72 79 80 82 83
RELSEIF              : 75 76 86 87
RFLOAT               : 126
RIF                  : 66 67 68 69 70 71 72 77 78 79 80 81 82 83
RINT                 : 125
RSTRING              : 123 127
RWHILE               : 88
SIN                  : 116
SQRT                 : 119
STRING               : 133
TAN                  : 118
TRUNC                : 121
TYPEOF               : 124
UPPERCASE            : 112
VERDADERO            : 135
error                : 

Nonterminals, with rules where they appear

blockc               : 88
blockf               : 54
blockifc             : 78 79 79 80 81 82 82 83 86
blockiff             : 67 68 68 69 70 71 71 72 75
callFuncSt           : 12 18 24
conelseif            : 73 74
conelseifc           : 84 85
decArray             : 
declaration          : 10
declarationc         : 23
declarationf         : 17
elseifSt             : 70 71 72 73
elseifStc            : 81 82 83 84
empty                : 96
exp                  : 28 29 30 31 32 33 35 36 38 39 40 41 43 44 46 47 48 49 51 52 64 65 66 67 68 69 70 71 72 75 76 77 78 79 80 81 82 83 86 87 88 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 112 113 114 114 115 116 117 118 119 120 121 122 123 124 130 141 142
function             : 11
ifSt                 : 13 19
ifStc                : 25
initial              : 0
instruction          : 2 3
instructionc         : 6 7
instructionf         : 4 5
instructions         : 1 2
instructionsc        : 6 91 94
instructionsf        : 4 89 93
listArray            : 139 141
listValues           : 62 64 140
p_print              : 8 15 21
p_println            : 9 16 22
parameter            : 57 58
parameters           : 55 57
parametersCallFunc   : 61
parametersFunc       : 54
typeDef              : 31 32 35 39 40 43 47 48 51 59 120 121
whileSt              : 14 20 26

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (30) declaration -> . ID IGUAL exp PTCOMA
    (31) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (32) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (34) declaration -> . GLOBAL ID PTCOMA
    (35) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (37) declaration -> . LOCAL ID PTCOMA
    (54) function -> . FUNCTION ID parametersFunc blockf
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    GLOBAL          shift and go to state 14
    LOCAL           shift and go to state 15
    FUNCTION        shift and go to state 16
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (30) declaration -> . ID IGUAL exp PTCOMA
    (31) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (32) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (34) declaration -> . GLOBAL ID PTCOMA
    (35) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (37) declaration -> . LOCAL ID PTCOMA
    (54) function -> . FUNCTION ID parametersFunc blockf
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    GLOBAL          shift and go to state 14
    LOCAL           shift and go to state 15
    FUNCTION        shift and go to state 16
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    instruction                    shift and go to state 19
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    GLOBAL          reduce using rule 3 (instructions -> instruction .)
    LOCAL           reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (8) instruction -> p_print .

    PRINT           reduce using rule 8 (instruction -> p_print .)
    PRINTLN         reduce using rule 8 (instruction -> p_print .)
    ID              reduce using rule 8 (instruction -> p_print .)
    GLOBAL          reduce using rule 8 (instruction -> p_print .)
    LOCAL           reduce using rule 8 (instruction -> p_print .)
    FUNCTION        reduce using rule 8 (instruction -> p_print .)
    RIF             reduce using rule 8 (instruction -> p_print .)
    RWHILE          reduce using rule 8 (instruction -> p_print .)
    $end            reduce using rule 8 (instruction -> p_print .)


state 5

    (9) instruction -> p_println .

    PRINT           reduce using rule 9 (instruction -> p_println .)
    PRINTLN         reduce using rule 9 (instruction -> p_println .)
    ID              reduce using rule 9 (instruction -> p_println .)
    GLOBAL          reduce using rule 9 (instruction -> p_println .)
    LOCAL           reduce using rule 9 (instruction -> p_println .)
    FUNCTION        reduce using rule 9 (instruction -> p_println .)
    RIF             reduce using rule 9 (instruction -> p_println .)
    RWHILE          reduce using rule 9 (instruction -> p_println .)
    $end            reduce using rule 9 (instruction -> p_println .)


state 6

    (10) instruction -> declaration .

    PRINT           reduce using rule 10 (instruction -> declaration .)
    PRINTLN         reduce using rule 10 (instruction -> declaration .)
    ID              reduce using rule 10 (instruction -> declaration .)
    GLOBAL          reduce using rule 10 (instruction -> declaration .)
    LOCAL           reduce using rule 10 (instruction -> declaration .)
    FUNCTION        reduce using rule 10 (instruction -> declaration .)
    RIF             reduce using rule 10 (instruction -> declaration .)
    RWHILE          reduce using rule 10 (instruction -> declaration .)
    $end            reduce using rule 10 (instruction -> declaration .)


state 7

    (11) instruction -> function .

    PRINT           reduce using rule 11 (instruction -> function .)
    PRINTLN         reduce using rule 11 (instruction -> function .)
    ID              reduce using rule 11 (instruction -> function .)
    GLOBAL          reduce using rule 11 (instruction -> function .)
    LOCAL           reduce using rule 11 (instruction -> function .)
    FUNCTION        reduce using rule 11 (instruction -> function .)
    RIF             reduce using rule 11 (instruction -> function .)
    RWHILE          reduce using rule 11 (instruction -> function .)
    $end            reduce using rule 11 (instruction -> function .)


state 8

    (12) instruction -> callFuncSt .

    PRINT           reduce using rule 12 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 12 (instruction -> callFuncSt .)
    ID              reduce using rule 12 (instruction -> callFuncSt .)
    GLOBAL          reduce using rule 12 (instruction -> callFuncSt .)
    LOCAL           reduce using rule 12 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 12 (instruction -> callFuncSt .)
    RIF             reduce using rule 12 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 12 (instruction -> callFuncSt .)
    $end            reduce using rule 12 (instruction -> callFuncSt .)


state 9

    (13) instruction -> ifSt .

    PRINT           reduce using rule 13 (instruction -> ifSt .)
    PRINTLN         reduce using rule 13 (instruction -> ifSt .)
    ID              reduce using rule 13 (instruction -> ifSt .)
    GLOBAL          reduce using rule 13 (instruction -> ifSt .)
    LOCAL           reduce using rule 13 (instruction -> ifSt .)
    FUNCTION        reduce using rule 13 (instruction -> ifSt .)
    RIF             reduce using rule 13 (instruction -> ifSt .)
    RWHILE          reduce using rule 13 (instruction -> ifSt .)
    $end            reduce using rule 13 (instruction -> ifSt .)


state 10

    (14) instruction -> whileSt .

    PRINT           reduce using rule 14 (instruction -> whileSt .)
    PRINTLN         reduce using rule 14 (instruction -> whileSt .)
    ID              reduce using rule 14 (instruction -> whileSt .)
    GLOBAL          reduce using rule 14 (instruction -> whileSt .)
    LOCAL           reduce using rule 14 (instruction -> whileSt .)
    FUNCTION        reduce using rule 14 (instruction -> whileSt .)
    RIF             reduce using rule 14 (instruction -> whileSt .)
    RWHILE          reduce using rule 14 (instruction -> whileSt .)
    $end            reduce using rule 14 (instruction -> whileSt .)


state 11

    (28) p_print -> PRINT . PARIZQ exp PARDER PTCOMA

    PARIZQ          shift and go to state 20


state 12

    (29) p_println -> PRINTLN . PARIZQ exp PARDER PTCOMA

    PARIZQ          shift and go to state 21


state 13

    (30) declaration -> ID . IGUAL exp PTCOMA
    (31) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (61) callFuncSt -> ID . parametersCallFunc PTCOMA
    (62) parametersCallFunc -> . PARIZQ listValues PARDER
    (63) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 22
    PARIZQ          shift and go to state 24

    parametersCallFunc             shift and go to state 23

state 14

    (32) declaration -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> GLOBAL . ID IGUAL exp PTCOMA
    (34) declaration -> GLOBAL . ID PTCOMA

    ID              shift and go to state 25


state 15

    (35) declaration -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> LOCAL . ID IGUAL exp PTCOMA
    (37) declaration -> LOCAL . ID PTCOMA

    ID              shift and go to state 26


state 16

    (54) function -> FUNCTION . ID parametersFunc blockf

    ID              shift and go to state 27


state 17

    (66) ifSt -> RIF . exp END PTCOMA
    (67) ifSt -> RIF . exp blockiff END PTCOMA
    (68) ifSt -> RIF . exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> RIF . exp blockiff RELSE END PTCOMA
    (70) ifSt -> RIF . exp blockiff elseifSt END PTCOMA
    (71) ifSt -> RIF . exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> RIF . exp blockiff elseifSt RELSE END PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 28

state 18

    (88) whileSt -> RWHILE . exp blockc
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 53

state 19

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    GLOBAL          reduce using rule 2 (instructions -> instructions instruction .)
    LOCAL           reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 20

    (28) p_print -> PRINT PARIZQ . exp PARDER PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 54

state 21

    (29) p_println -> PRINTLN PARIZQ . exp PARDER PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 55

state 22

    (30) declaration -> ID IGUAL . exp PTCOMA
    (31) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 56

state 23

    (61) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 57


state 24

    (62) parametersCallFunc -> PARIZQ . listValues PARDER
    (63) parametersCallFunc -> PARIZQ . PARDER
    (64) listValues -> . listValues COMA exp
    (65) listValues -> . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    PARDER          shift and go to state 59
    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    listValues                     shift and go to state 58
    exp                            shift and go to state 60

state 25

    (32) declaration -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> GLOBAL ID . IGUAL exp PTCOMA
    (34) declaration -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 61
    PTCOMA          shift and go to state 62


state 26

    (35) declaration -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> LOCAL ID . IGUAL exp PTCOMA
    (37) declaration -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 63
    PTCOMA          shift and go to state 64


state 27

    (54) function -> FUNCTION ID . parametersFunc blockf
    (55) parametersFunc -> . PARIZQ parameters PARDER
    (56) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 66

    parametersFunc                 shift and go to state 65

state 28

    (66) ifSt -> RIF exp . END PTCOMA
    (67) ifSt -> RIF exp . blockiff END PTCOMA
    (68) ifSt -> RIF exp . blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> RIF exp . blockiff RELSE END PTCOMA
    (70) ifSt -> RIF exp . blockiff elseifSt END PTCOMA
    (71) ifSt -> RIF exp . blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> RIF exp . blockiff elseifSt RELSE END PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (93) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 67
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 68
    instructionsf                  shift and go to state 83
    instructionf                   shift and go to state 84
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 29

    (111) exp -> NOTT . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 94

state 30

    (112) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 95


state 31

    (130) exp -> PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 96

state 32

    (113) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 97


state 33

    (114) exp -> LOG . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 98


state 34

    (115) exp -> LOG10 . PARIZQ exp PARDER

    PARIZQ          shift and go to state 99


state 35

    (116) exp -> SIN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 100


state 36

    (117) exp -> COS . PARIZQ exp PARDER

    PARIZQ          shift and go to state 101


state 37

    (118) exp -> TAN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 102


state 38

    (119) exp -> SQRT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 103


state 39

    (120) exp -> PARSE . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 104


state 40

    (121) exp -> TRUNC . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 105


state 41

    (122) exp -> FLOAT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 106


state 42

    (123) exp -> RSTRING . PARIZQ exp PARDER

    PARIZQ          shift and go to state 107


state 43

    (124) exp -> TYPEOF . PARIZQ exp PARDER

    PARIZQ          shift and go to state 108


state 44

    (131) exp -> ENTERO .

    END             reduce using rule 131 (exp -> ENTERO .)
    MAS             reduce using rule 131 (exp -> ENTERO .)
    MENOS           reduce using rule 131 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 131 (exp -> ENTERO .)
    DIVISION        reduce using rule 131 (exp -> ENTERO .)
    POTENCIA        reduce using rule 131 (exp -> ENTERO .)
    MODULO          reduce using rule 131 (exp -> ENTERO .)
    MAYOR           reduce using rule 131 (exp -> ENTERO .)
    MENOR           reduce using rule 131 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 131 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 131 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 131 (exp -> ENTERO .)
    DISTINTO        reduce using rule 131 (exp -> ENTERO .)
    ANDD            reduce using rule 131 (exp -> ENTERO .)
    ORR             reduce using rule 131 (exp -> ENTERO .)
    PRINT           reduce using rule 131 (exp -> ENTERO .)
    PRINTLN         reduce using rule 131 (exp -> ENTERO .)
    ID              reduce using rule 131 (exp -> ENTERO .)
    GLOBAL          reduce using rule 131 (exp -> ENTERO .)
    LOCAL           reduce using rule 131 (exp -> ENTERO .)
    RIF             reduce using rule 131 (exp -> ENTERO .)
    RWHILE          reduce using rule 131 (exp -> ENTERO .)
    PARDER          reduce using rule 131 (exp -> ENTERO .)
    PTCOMA          reduce using rule 131 (exp -> ENTERO .)
    DOSPT           reduce using rule 131 (exp -> ENTERO .)
    COMA            reduce using rule 131 (exp -> ENTERO .)
    CORDER          reduce using rule 131 (exp -> ENTERO .)
    RELSE           reduce using rule 131 (exp -> ENTERO .)
    RELSEIF         reduce using rule 131 (exp -> ENTERO .)


state 45

    (132) exp -> DECIMAL .

    END             reduce using rule 132 (exp -> DECIMAL .)
    MAS             reduce using rule 132 (exp -> DECIMAL .)
    MENOS           reduce using rule 132 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 132 (exp -> DECIMAL .)
    DIVISION        reduce using rule 132 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 132 (exp -> DECIMAL .)
    MODULO          reduce using rule 132 (exp -> DECIMAL .)
    MAYOR           reduce using rule 132 (exp -> DECIMAL .)
    MENOR           reduce using rule 132 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 132 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 132 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 132 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 132 (exp -> DECIMAL .)
    ANDD            reduce using rule 132 (exp -> DECIMAL .)
    ORR             reduce using rule 132 (exp -> DECIMAL .)
    PRINT           reduce using rule 132 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 132 (exp -> DECIMAL .)
    ID              reduce using rule 132 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 132 (exp -> DECIMAL .)
    LOCAL           reduce using rule 132 (exp -> DECIMAL .)
    RIF             reduce using rule 132 (exp -> DECIMAL .)
    RWHILE          reduce using rule 132 (exp -> DECIMAL .)
    PARDER          reduce using rule 132 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 132 (exp -> DECIMAL .)
    DOSPT           reduce using rule 132 (exp -> DECIMAL .)
    COMA            reduce using rule 132 (exp -> DECIMAL .)
    CORDER          reduce using rule 132 (exp -> DECIMAL .)
    RELSE           reduce using rule 132 (exp -> DECIMAL .)
    RELSEIF         reduce using rule 132 (exp -> DECIMAL .)


state 46

    (133) exp -> STRING .

    END             reduce using rule 133 (exp -> STRING .)
    MAS             reduce using rule 133 (exp -> STRING .)
    MENOS           reduce using rule 133 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 133 (exp -> STRING .)
    DIVISION        reduce using rule 133 (exp -> STRING .)
    POTENCIA        reduce using rule 133 (exp -> STRING .)
    MODULO          reduce using rule 133 (exp -> STRING .)
    MAYOR           reduce using rule 133 (exp -> STRING .)
    MENOR           reduce using rule 133 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 133 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 133 (exp -> STRING .)
    MENORIGUAL      reduce using rule 133 (exp -> STRING .)
    DISTINTO        reduce using rule 133 (exp -> STRING .)
    ANDD            reduce using rule 133 (exp -> STRING .)
    ORR             reduce using rule 133 (exp -> STRING .)
    PRINT           reduce using rule 133 (exp -> STRING .)
    PRINTLN         reduce using rule 133 (exp -> STRING .)
    ID              reduce using rule 133 (exp -> STRING .)
    GLOBAL          reduce using rule 133 (exp -> STRING .)
    LOCAL           reduce using rule 133 (exp -> STRING .)
    RIF             reduce using rule 133 (exp -> STRING .)
    RWHILE          reduce using rule 133 (exp -> STRING .)
    PARDER          reduce using rule 133 (exp -> STRING .)
    PTCOMA          reduce using rule 133 (exp -> STRING .)
    DOSPT           reduce using rule 133 (exp -> STRING .)
    COMA            reduce using rule 133 (exp -> STRING .)
    CORDER          reduce using rule 133 (exp -> STRING .)
    RELSE           reduce using rule 133 (exp -> STRING .)
    RELSEIF         reduce using rule 133 (exp -> STRING .)


state 47

    (134) exp -> CHAR .

    END             reduce using rule 134 (exp -> CHAR .)
    MAS             reduce using rule 134 (exp -> CHAR .)
    MENOS           reduce using rule 134 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 134 (exp -> CHAR .)
    DIVISION        reduce using rule 134 (exp -> CHAR .)
    POTENCIA        reduce using rule 134 (exp -> CHAR .)
    MODULO          reduce using rule 134 (exp -> CHAR .)
    MAYOR           reduce using rule 134 (exp -> CHAR .)
    MENOR           reduce using rule 134 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 134 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 134 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 134 (exp -> CHAR .)
    DISTINTO        reduce using rule 134 (exp -> CHAR .)
    ANDD            reduce using rule 134 (exp -> CHAR .)
    ORR             reduce using rule 134 (exp -> CHAR .)
    PRINT           reduce using rule 134 (exp -> CHAR .)
    PRINTLN         reduce using rule 134 (exp -> CHAR .)
    ID              reduce using rule 134 (exp -> CHAR .)
    GLOBAL          reduce using rule 134 (exp -> CHAR .)
    LOCAL           reduce using rule 134 (exp -> CHAR .)
    RIF             reduce using rule 134 (exp -> CHAR .)
    RWHILE          reduce using rule 134 (exp -> CHAR .)
    PARDER          reduce using rule 134 (exp -> CHAR .)
    PTCOMA          reduce using rule 134 (exp -> CHAR .)
    DOSPT           reduce using rule 134 (exp -> CHAR .)
    COMA            reduce using rule 134 (exp -> CHAR .)
    CORDER          reduce using rule 134 (exp -> CHAR .)
    RELSE           reduce using rule 134 (exp -> CHAR .)
    RELSEIF         reduce using rule 134 (exp -> CHAR .)


state 48

    (135) exp -> VERDADERO .

    END             reduce using rule 135 (exp -> VERDADERO .)
    MAS             reduce using rule 135 (exp -> VERDADERO .)
    MENOS           reduce using rule 135 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 135 (exp -> VERDADERO .)
    DIVISION        reduce using rule 135 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 135 (exp -> VERDADERO .)
    MODULO          reduce using rule 135 (exp -> VERDADERO .)
    MAYOR           reduce using rule 135 (exp -> VERDADERO .)
    MENOR           reduce using rule 135 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 135 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 135 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 135 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 135 (exp -> VERDADERO .)
    ANDD            reduce using rule 135 (exp -> VERDADERO .)
    ORR             reduce using rule 135 (exp -> VERDADERO .)
    PRINT           reduce using rule 135 (exp -> VERDADERO .)
    PRINTLN         reduce using rule 135 (exp -> VERDADERO .)
    ID              reduce using rule 135 (exp -> VERDADERO .)
    GLOBAL          reduce using rule 135 (exp -> VERDADERO .)
    LOCAL           reduce using rule 135 (exp -> VERDADERO .)
    RIF             reduce using rule 135 (exp -> VERDADERO .)
    RWHILE          reduce using rule 135 (exp -> VERDADERO .)
    PARDER          reduce using rule 135 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 135 (exp -> VERDADERO .)
    DOSPT           reduce using rule 135 (exp -> VERDADERO .)
    COMA            reduce using rule 135 (exp -> VERDADERO .)
    CORDER          reduce using rule 135 (exp -> VERDADERO .)
    RELSE           reduce using rule 135 (exp -> VERDADERO .)
    RELSEIF         reduce using rule 135 (exp -> VERDADERO .)


state 49

    (136) exp -> FALSO .

    END             reduce using rule 136 (exp -> FALSO .)
    MAS             reduce using rule 136 (exp -> FALSO .)
    MENOS           reduce using rule 136 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 136 (exp -> FALSO .)
    DIVISION        reduce using rule 136 (exp -> FALSO .)
    POTENCIA        reduce using rule 136 (exp -> FALSO .)
    MODULO          reduce using rule 136 (exp -> FALSO .)
    MAYOR           reduce using rule 136 (exp -> FALSO .)
    MENOR           reduce using rule 136 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 136 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 136 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 136 (exp -> FALSO .)
    DISTINTO        reduce using rule 136 (exp -> FALSO .)
    ANDD            reduce using rule 136 (exp -> FALSO .)
    ORR             reduce using rule 136 (exp -> FALSO .)
    PRINT           reduce using rule 136 (exp -> FALSO .)
    PRINTLN         reduce using rule 136 (exp -> FALSO .)
    ID              reduce using rule 136 (exp -> FALSO .)
    GLOBAL          reduce using rule 136 (exp -> FALSO .)
    LOCAL           reduce using rule 136 (exp -> FALSO .)
    RIF             reduce using rule 136 (exp -> FALSO .)
    RWHILE          reduce using rule 136 (exp -> FALSO .)
    PARDER          reduce using rule 136 (exp -> FALSO .)
    PTCOMA          reduce using rule 136 (exp -> FALSO .)
    DOSPT           reduce using rule 136 (exp -> FALSO .)
    COMA            reduce using rule 136 (exp -> FALSO .)
    CORDER          reduce using rule 136 (exp -> FALSO .)
    RELSE           reduce using rule 136 (exp -> FALSO .)
    RELSEIF         reduce using rule 136 (exp -> FALSO .)


state 50

    (137) exp -> NULO .

    END             reduce using rule 137 (exp -> NULO .)
    MAS             reduce using rule 137 (exp -> NULO .)
    MENOS           reduce using rule 137 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 137 (exp -> NULO .)
    DIVISION        reduce using rule 137 (exp -> NULO .)
    POTENCIA        reduce using rule 137 (exp -> NULO .)
    MODULO          reduce using rule 137 (exp -> NULO .)
    MAYOR           reduce using rule 137 (exp -> NULO .)
    MENOR           reduce using rule 137 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 137 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 137 (exp -> NULO .)
    MENORIGUAL      reduce using rule 137 (exp -> NULO .)
    DISTINTO        reduce using rule 137 (exp -> NULO .)
    ANDD            reduce using rule 137 (exp -> NULO .)
    ORR             reduce using rule 137 (exp -> NULO .)
    PRINT           reduce using rule 137 (exp -> NULO .)
    PRINTLN         reduce using rule 137 (exp -> NULO .)
    ID              reduce using rule 137 (exp -> NULO .)
    GLOBAL          reduce using rule 137 (exp -> NULO .)
    LOCAL           reduce using rule 137 (exp -> NULO .)
    RIF             reduce using rule 137 (exp -> NULO .)
    RWHILE          reduce using rule 137 (exp -> NULO .)
    PARDER          reduce using rule 137 (exp -> NULO .)
    PTCOMA          reduce using rule 137 (exp -> NULO .)
    DOSPT           reduce using rule 137 (exp -> NULO .)
    COMA            reduce using rule 137 (exp -> NULO .)
    CORDER          reduce using rule 137 (exp -> NULO .)
    RELSE           reduce using rule 137 (exp -> NULO .)
    RELSEIF         reduce using rule 137 (exp -> NULO .)


state 51

    (138) exp -> ID .
    (139) exp -> ID . listArray
    (141) listArray -> . listArray CORIZQ exp CORDER
    (142) listArray -> . CORIZQ exp CORDER

    END             reduce using rule 138 (exp -> ID .)
    MAS             reduce using rule 138 (exp -> ID .)
    MENOS           reduce using rule 138 (exp -> ID .)
    MULTIPLICACION  reduce using rule 138 (exp -> ID .)
    DIVISION        reduce using rule 138 (exp -> ID .)
    POTENCIA        reduce using rule 138 (exp -> ID .)
    MODULO          reduce using rule 138 (exp -> ID .)
    MAYOR           reduce using rule 138 (exp -> ID .)
    MENOR           reduce using rule 138 (exp -> ID .)
    IGUALIGUAL      reduce using rule 138 (exp -> ID .)
    MAYORIGUAL      reduce using rule 138 (exp -> ID .)
    MENORIGUAL      reduce using rule 138 (exp -> ID .)
    DISTINTO        reduce using rule 138 (exp -> ID .)
    ANDD            reduce using rule 138 (exp -> ID .)
    ORR             reduce using rule 138 (exp -> ID .)
    PRINT           reduce using rule 138 (exp -> ID .)
    PRINTLN         reduce using rule 138 (exp -> ID .)
    ID              reduce using rule 138 (exp -> ID .)
    GLOBAL          reduce using rule 138 (exp -> ID .)
    LOCAL           reduce using rule 138 (exp -> ID .)
    RIF             reduce using rule 138 (exp -> ID .)
    RWHILE          reduce using rule 138 (exp -> ID .)
    PARDER          reduce using rule 138 (exp -> ID .)
    PTCOMA          reduce using rule 138 (exp -> ID .)
    DOSPT           reduce using rule 138 (exp -> ID .)
    COMA            reduce using rule 138 (exp -> ID .)
    CORDER          reduce using rule 138 (exp -> ID .)
    RELSE           reduce using rule 138 (exp -> ID .)
    RELSEIF         reduce using rule 138 (exp -> ID .)
    CORIZQ          shift and go to state 110

    listArray                      shift and go to state 109

state 52

    (140) exp -> CORIZQ . listValues CORDER
    (64) listValues -> . listValues COMA exp
    (65) listValues -> . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    listValues                     shift and go to state 111
    exp                            shift and go to state 60

state 53

    (88) whileSt -> RWHILE exp . blockc
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (91) blockc -> . instructionsc END PTCOMA
    (92) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82
    END             shift and go to state 114
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    blockc                         shift and go to state 112
    instructionsc                  shift and go to state 113
    instructionc                   shift and go to state 115
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 54

    (28) p_print -> PRINT PARIZQ exp . PARDER PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 126
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 55

    (29) p_println -> PRINTLN PARIZQ exp . PARDER PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 127
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 56

    (30) declaration -> ID IGUAL exp . PTCOMA
    (31) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PTCOMA          shift and go to state 128
    DOSPT           shift and go to state 129
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 57

    (61) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    GLOBAL          reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    LOCAL           reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSE           reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSEIF         reduce using rule 61 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 58

    (62) parametersCallFunc -> PARIZQ listValues . PARDER
    (64) listValues -> listValues . COMA exp

    PARDER          shift and go to state 130
    COMA            shift and go to state 131


state 59

    (63) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 63 (parametersCallFunc -> PARIZQ PARDER .)


state 60

    (65) listValues -> exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          reduce using rule 65 (listValues -> exp .)
    COMA            reduce using rule 65 (listValues -> exp .)
    CORDER          reduce using rule 65 (listValues -> exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 61

    (32) declaration -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> GLOBAL ID IGUAL . exp PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 132

state 62

    (34) declaration -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    FUNCTION        reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)
    $end            reduce using rule 34 (declaration -> GLOBAL ID PTCOMA .)


state 63

    (35) declaration -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> LOCAL ID IGUAL . exp PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 133

state 64

    (37) declaration -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    ID              reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    FUNCTION        reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)
    $end            reduce using rule 37 (declaration -> LOCAL ID PTCOMA .)


state 65

    (54) function -> FUNCTION ID parametersFunc . blockf
    (89) blockf -> . instructionsf END PTCOMA
    (90) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 136
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockf                         shift and go to state 134
    instructionsf                  shift and go to state 135
    instructionf                   shift and go to state 84
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 66

    (55) parametersFunc -> PARIZQ . parameters PARDER
    (56) parametersFunc -> PARIZQ . PARDER
    (57) parameters -> . parameters COMA parameter
    (58) parameters -> . parameter
    (59) parameter -> . ID DOSPT DOSPT typeDef
    (60) parameter -> . ID

    PARDER          shift and go to state 138
    ID              shift and go to state 140

    parameters                     shift and go to state 137
    parameter                      shift and go to state 139

state 67

    (66) ifSt -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 141


state 68

    (67) ifSt -> RIF exp blockiff . END PTCOMA
    (68) ifSt -> RIF exp blockiff . RELSE blockiff END PTCOMA
    (69) ifSt -> RIF exp blockiff . RELSE END PTCOMA
    (70) ifSt -> RIF exp blockiff . elseifSt END PTCOMA
    (71) ifSt -> RIF exp blockiff . elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> RIF exp blockiff . elseifSt RELSE END PTCOMA
    (73) elseifSt -> . elseifSt conelseif
    (74) elseifSt -> . conelseif
    (75) conelseif -> . RELSEIF exp blockiff
    (76) conelseif -> . RELSEIF exp

    END             shift and go to state 142
    RELSE           shift and go to state 143
    RELSEIF         shift and go to state 146

    elseifSt                       shift and go to state 144
    conelseif                      shift and go to state 145

state 69

    (97) exp -> exp MAS . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 147

state 70

    (98) exp -> exp MENOS . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 148

state 71

    (99) exp -> exp MULTIPLICACION . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 149

state 72

    (100) exp -> exp DIVISION . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 150

state 73

    (101) exp -> exp POTENCIA . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 151

state 74

    (102) exp -> exp MODULO . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 152

state 75

    (103) exp -> exp MAYOR . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 153

state 76

    (104) exp -> exp MENOR . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 154

state 77

    (105) exp -> exp IGUALIGUAL . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 155

state 78

    (106) exp -> exp MAYORIGUAL . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 156

state 79

    (107) exp -> exp MENORIGUAL . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 157

state 80

    (108) exp -> exp DISTINTO . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 158

state 81

    (109) exp -> exp ANDD . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 159

state 82

    (110) exp -> exp ORR . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 160

state 83

    (93) blockiff -> instructionsf .
    (4) instructionsf -> instructionsf . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             reduce using rule 93 (blockiff -> instructionsf .)
    RELSE           reduce using rule 93 (blockiff -> instructionsf .)
    RELSEIF         reduce using rule 93 (blockiff -> instructionsf .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    instructionf                   shift and go to state 161
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 84

    (5) instructionsf -> instructionf .

    PRINT           reduce using rule 5 (instructionsf -> instructionf .)
    PRINTLN         reduce using rule 5 (instructionsf -> instructionf .)
    ID              reduce using rule 5 (instructionsf -> instructionf .)
    GLOBAL          reduce using rule 5 (instructionsf -> instructionf .)
    LOCAL           reduce using rule 5 (instructionsf -> instructionf .)
    RIF             reduce using rule 5 (instructionsf -> instructionf .)
    RWHILE          reduce using rule 5 (instructionsf -> instructionf .)
    END             reduce using rule 5 (instructionsf -> instructionf .)
    RELSE           reduce using rule 5 (instructionsf -> instructionf .)
    RELSEIF         reduce using rule 5 (instructionsf -> instructionf .)


state 85

    (15) instructionf -> p_print .

    PRINT           reduce using rule 15 (instructionf -> p_print .)
    PRINTLN         reduce using rule 15 (instructionf -> p_print .)
    ID              reduce using rule 15 (instructionf -> p_print .)
    GLOBAL          reduce using rule 15 (instructionf -> p_print .)
    LOCAL           reduce using rule 15 (instructionf -> p_print .)
    RIF             reduce using rule 15 (instructionf -> p_print .)
    RWHILE          reduce using rule 15 (instructionf -> p_print .)
    END             reduce using rule 15 (instructionf -> p_print .)
    RELSE           reduce using rule 15 (instructionf -> p_print .)
    RELSEIF         reduce using rule 15 (instructionf -> p_print .)


state 86

    (16) instructionf -> p_println .

    PRINT           reduce using rule 16 (instructionf -> p_println .)
    PRINTLN         reduce using rule 16 (instructionf -> p_println .)
    ID              reduce using rule 16 (instructionf -> p_println .)
    GLOBAL          reduce using rule 16 (instructionf -> p_println .)
    LOCAL           reduce using rule 16 (instructionf -> p_println .)
    RIF             reduce using rule 16 (instructionf -> p_println .)
    RWHILE          reduce using rule 16 (instructionf -> p_println .)
    END             reduce using rule 16 (instructionf -> p_println .)
    RELSE           reduce using rule 16 (instructionf -> p_println .)
    RELSEIF         reduce using rule 16 (instructionf -> p_println .)


state 87

    (17) instructionf -> declarationf .

    PRINT           reduce using rule 17 (instructionf -> declarationf .)
    PRINTLN         reduce using rule 17 (instructionf -> declarationf .)
    ID              reduce using rule 17 (instructionf -> declarationf .)
    GLOBAL          reduce using rule 17 (instructionf -> declarationf .)
    LOCAL           reduce using rule 17 (instructionf -> declarationf .)
    RIF             reduce using rule 17 (instructionf -> declarationf .)
    RWHILE          reduce using rule 17 (instructionf -> declarationf .)
    END             reduce using rule 17 (instructionf -> declarationf .)
    RELSE           reduce using rule 17 (instructionf -> declarationf .)
    RELSEIF         reduce using rule 17 (instructionf -> declarationf .)


state 88

    (18) instructionf -> callFuncSt .

    PRINT           reduce using rule 18 (instructionf -> callFuncSt .)
    PRINTLN         reduce using rule 18 (instructionf -> callFuncSt .)
    ID              reduce using rule 18 (instructionf -> callFuncSt .)
    GLOBAL          reduce using rule 18 (instructionf -> callFuncSt .)
    LOCAL           reduce using rule 18 (instructionf -> callFuncSt .)
    RIF             reduce using rule 18 (instructionf -> callFuncSt .)
    RWHILE          reduce using rule 18 (instructionf -> callFuncSt .)
    END             reduce using rule 18 (instructionf -> callFuncSt .)
    RELSE           reduce using rule 18 (instructionf -> callFuncSt .)
    RELSEIF         reduce using rule 18 (instructionf -> callFuncSt .)


state 89

    (19) instructionf -> ifSt .

    PRINT           reduce using rule 19 (instructionf -> ifSt .)
    PRINTLN         reduce using rule 19 (instructionf -> ifSt .)
    ID              reduce using rule 19 (instructionf -> ifSt .)
    GLOBAL          reduce using rule 19 (instructionf -> ifSt .)
    LOCAL           reduce using rule 19 (instructionf -> ifSt .)
    RIF             reduce using rule 19 (instructionf -> ifSt .)
    RWHILE          reduce using rule 19 (instructionf -> ifSt .)
    END             reduce using rule 19 (instructionf -> ifSt .)
    RELSE           reduce using rule 19 (instructionf -> ifSt .)
    RELSEIF         reduce using rule 19 (instructionf -> ifSt .)


state 90

    (20) instructionf -> whileSt .

    PRINT           reduce using rule 20 (instructionf -> whileSt .)
    PRINTLN         reduce using rule 20 (instructionf -> whileSt .)
    ID              reduce using rule 20 (instructionf -> whileSt .)
    GLOBAL          reduce using rule 20 (instructionf -> whileSt .)
    LOCAL           reduce using rule 20 (instructionf -> whileSt .)
    RIF             reduce using rule 20 (instructionf -> whileSt .)
    RWHILE          reduce using rule 20 (instructionf -> whileSt .)
    END             reduce using rule 20 (instructionf -> whileSt .)
    RELSE           reduce using rule 20 (instructionf -> whileSt .)
    RELSEIF         reduce using rule 20 (instructionf -> whileSt .)


state 91

    (38) declarationf -> ID . IGUAL exp PTCOMA
    (39) declarationf -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (61) callFuncSt -> ID . parametersCallFunc PTCOMA
    (62) parametersCallFunc -> . PARIZQ listValues PARDER
    (63) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 162
    PARIZQ          shift and go to state 24

    parametersCallFunc             shift and go to state 23

state 92

    (40) declarationf -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> GLOBAL . ID IGUAL exp PTCOMA
    (42) declarationf -> GLOBAL . ID PTCOMA

    ID              shift and go to state 163


state 93

    (43) declarationf -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> LOCAL . ID IGUAL exp PTCOMA
    (45) declarationf -> LOCAL . ID PTCOMA

    ID              shift and go to state 164


state 94

    (111) exp -> NOTT exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 111 (exp -> NOTT exp .)
    IGUALIGUAL      reduce using rule 111 (exp -> NOTT exp .)
    ANDD            reduce using rule 111 (exp -> NOTT exp .)
    ORR             reduce using rule 111 (exp -> NOTT exp .)
    PRINT           reduce using rule 111 (exp -> NOTT exp .)
    PRINTLN         reduce using rule 111 (exp -> NOTT exp .)
    ID              reduce using rule 111 (exp -> NOTT exp .)
    GLOBAL          reduce using rule 111 (exp -> NOTT exp .)
    LOCAL           reduce using rule 111 (exp -> NOTT exp .)
    RIF             reduce using rule 111 (exp -> NOTT exp .)
    RWHILE          reduce using rule 111 (exp -> NOTT exp .)
    PARDER          reduce using rule 111 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 111 (exp -> NOTT exp .)
    DOSPT           reduce using rule 111 (exp -> NOTT exp .)
    COMA            reduce using rule 111 (exp -> NOTT exp .)
    CORDER          reduce using rule 111 (exp -> NOTT exp .)
    RELSE           reduce using rule 111 (exp -> NOTT exp .)
    RELSEIF         reduce using rule 111 (exp -> NOTT exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80

  ! MAS             [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 95

    (112) exp -> UPPERCASE PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 165

state 96

    (130) exp -> PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 166
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 97

    (113) exp -> LOWERCASE PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 167

state 98

    (114) exp -> LOG PARIZQ . exp COMA exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 168

state 99

    (115) exp -> LOG10 PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 169

state 100

    (116) exp -> SIN PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 170

state 101

    (117) exp -> COS PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 171

state 102

    (118) exp -> TAN PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 172

state 103

    (119) exp -> SQRT PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 173

state 104

    (120) exp -> PARSE PARIZQ . typeDef COMA exp PARDER
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 174

state 105

    (121) exp -> TRUNC PARIZQ . typeDef COMA exp PARDER
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 180

state 106

    (122) exp -> FLOAT PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 181

state 107

    (123) exp -> RSTRING PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 182

state 108

    (124) exp -> TYPEOF PARIZQ . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 183

state 109

    (139) exp -> ID listArray .
    (141) listArray -> listArray . CORIZQ exp CORDER

    END             reduce using rule 139 (exp -> ID listArray .)
    MAS             reduce using rule 139 (exp -> ID listArray .)
    MENOS           reduce using rule 139 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 139 (exp -> ID listArray .)
    DIVISION        reduce using rule 139 (exp -> ID listArray .)
    POTENCIA        reduce using rule 139 (exp -> ID listArray .)
    MODULO          reduce using rule 139 (exp -> ID listArray .)
    MAYOR           reduce using rule 139 (exp -> ID listArray .)
    MENOR           reduce using rule 139 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 139 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 139 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 139 (exp -> ID listArray .)
    DISTINTO        reduce using rule 139 (exp -> ID listArray .)
    ANDD            reduce using rule 139 (exp -> ID listArray .)
    ORR             reduce using rule 139 (exp -> ID listArray .)
    PRINT           reduce using rule 139 (exp -> ID listArray .)
    PRINTLN         reduce using rule 139 (exp -> ID listArray .)
    ID              reduce using rule 139 (exp -> ID listArray .)
    GLOBAL          reduce using rule 139 (exp -> ID listArray .)
    LOCAL           reduce using rule 139 (exp -> ID listArray .)
    RIF             reduce using rule 139 (exp -> ID listArray .)
    RWHILE          reduce using rule 139 (exp -> ID listArray .)
    PARDER          reduce using rule 139 (exp -> ID listArray .)
    PTCOMA          reduce using rule 139 (exp -> ID listArray .)
    DOSPT           reduce using rule 139 (exp -> ID listArray .)
    COMA            reduce using rule 139 (exp -> ID listArray .)
    CORDER          reduce using rule 139 (exp -> ID listArray .)
    RELSE           reduce using rule 139 (exp -> ID listArray .)
    RELSEIF         reduce using rule 139 (exp -> ID listArray .)
    CORIZQ          shift and go to state 184


state 110

    (142) listArray -> CORIZQ . exp CORDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 185

state 111

    (140) exp -> CORIZQ listValues . CORDER
    (64) listValues -> listValues . COMA exp

    CORDER          shift and go to state 186
    COMA            shift and go to state 131


state 112

    (88) whileSt -> RWHILE exp blockc .

    PRINT           reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    PRINTLN         reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    ID              reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    GLOBAL          reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    LOCAL           reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    FUNCTION        reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    RIF             reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    RWHILE          reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    $end            reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    END             reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    RELSE           reduce using rule 88 (whileSt -> RWHILE exp blockc .)
    RELSEIF         reduce using rule 88 (whileSt -> RWHILE exp blockc .)


state 113

    (91) blockc -> instructionsc . END PTCOMA
    (6) instructionsc -> instructionsc . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 187
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    instructionc                   shift and go to state 188
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 114

    (92) blockc -> END . PTCOMA

    PTCOMA          shift and go to state 189


state 115

    (7) instructionsc -> instructionc .

    END             reduce using rule 7 (instructionsc -> instructionc .)
    PRINT           reduce using rule 7 (instructionsc -> instructionc .)
    PRINTLN         reduce using rule 7 (instructionsc -> instructionc .)
    ID              reduce using rule 7 (instructionsc -> instructionc .)
    LOCAL           reduce using rule 7 (instructionsc -> instructionc .)
    GLOBAL          reduce using rule 7 (instructionsc -> instructionc .)
    RIF             reduce using rule 7 (instructionsc -> instructionc .)
    RWHILE          reduce using rule 7 (instructionsc -> instructionc .)
    RELSE           reduce using rule 7 (instructionsc -> instructionc .)
    RELSEIF         reduce using rule 7 (instructionsc -> instructionc .)


state 116

    (21) instructionc -> p_print .

    END             reduce using rule 21 (instructionc -> p_print .)
    PRINT           reduce using rule 21 (instructionc -> p_print .)
    PRINTLN         reduce using rule 21 (instructionc -> p_print .)
    ID              reduce using rule 21 (instructionc -> p_print .)
    LOCAL           reduce using rule 21 (instructionc -> p_print .)
    GLOBAL          reduce using rule 21 (instructionc -> p_print .)
    RIF             reduce using rule 21 (instructionc -> p_print .)
    RWHILE          reduce using rule 21 (instructionc -> p_print .)
    RELSE           reduce using rule 21 (instructionc -> p_print .)
    RELSEIF         reduce using rule 21 (instructionc -> p_print .)


state 117

    (22) instructionc -> p_println .

    END             reduce using rule 22 (instructionc -> p_println .)
    PRINT           reduce using rule 22 (instructionc -> p_println .)
    PRINTLN         reduce using rule 22 (instructionc -> p_println .)
    ID              reduce using rule 22 (instructionc -> p_println .)
    LOCAL           reduce using rule 22 (instructionc -> p_println .)
    GLOBAL          reduce using rule 22 (instructionc -> p_println .)
    RIF             reduce using rule 22 (instructionc -> p_println .)
    RWHILE          reduce using rule 22 (instructionc -> p_println .)
    RELSE           reduce using rule 22 (instructionc -> p_println .)
    RELSEIF         reduce using rule 22 (instructionc -> p_println .)


state 118

    (23) instructionc -> declarationc .

    END             reduce using rule 23 (instructionc -> declarationc .)
    PRINT           reduce using rule 23 (instructionc -> declarationc .)
    PRINTLN         reduce using rule 23 (instructionc -> declarationc .)
    ID              reduce using rule 23 (instructionc -> declarationc .)
    LOCAL           reduce using rule 23 (instructionc -> declarationc .)
    GLOBAL          reduce using rule 23 (instructionc -> declarationc .)
    RIF             reduce using rule 23 (instructionc -> declarationc .)
    RWHILE          reduce using rule 23 (instructionc -> declarationc .)
    RELSE           reduce using rule 23 (instructionc -> declarationc .)
    RELSEIF         reduce using rule 23 (instructionc -> declarationc .)


state 119

    (24) instructionc -> callFuncSt .

    END             reduce using rule 24 (instructionc -> callFuncSt .)
    PRINT           reduce using rule 24 (instructionc -> callFuncSt .)
    PRINTLN         reduce using rule 24 (instructionc -> callFuncSt .)
    ID              reduce using rule 24 (instructionc -> callFuncSt .)
    LOCAL           reduce using rule 24 (instructionc -> callFuncSt .)
    GLOBAL          reduce using rule 24 (instructionc -> callFuncSt .)
    RIF             reduce using rule 24 (instructionc -> callFuncSt .)
    RWHILE          reduce using rule 24 (instructionc -> callFuncSt .)
    RELSE           reduce using rule 24 (instructionc -> callFuncSt .)
    RELSEIF         reduce using rule 24 (instructionc -> callFuncSt .)


state 120

    (25) instructionc -> ifStc .

    END             reduce using rule 25 (instructionc -> ifStc .)
    PRINT           reduce using rule 25 (instructionc -> ifStc .)
    PRINTLN         reduce using rule 25 (instructionc -> ifStc .)
    ID              reduce using rule 25 (instructionc -> ifStc .)
    LOCAL           reduce using rule 25 (instructionc -> ifStc .)
    GLOBAL          reduce using rule 25 (instructionc -> ifStc .)
    RIF             reduce using rule 25 (instructionc -> ifStc .)
    RWHILE          reduce using rule 25 (instructionc -> ifStc .)
    RELSE           reduce using rule 25 (instructionc -> ifStc .)
    RELSEIF         reduce using rule 25 (instructionc -> ifStc .)


state 121

    (26) instructionc -> whileSt .

    END             reduce using rule 26 (instructionc -> whileSt .)
    PRINT           reduce using rule 26 (instructionc -> whileSt .)
    PRINTLN         reduce using rule 26 (instructionc -> whileSt .)
    ID              reduce using rule 26 (instructionc -> whileSt .)
    LOCAL           reduce using rule 26 (instructionc -> whileSt .)
    GLOBAL          reduce using rule 26 (instructionc -> whileSt .)
    RIF             reduce using rule 26 (instructionc -> whileSt .)
    RWHILE          reduce using rule 26 (instructionc -> whileSt .)
    RELSE           reduce using rule 26 (instructionc -> whileSt .)
    RELSEIF         reduce using rule 26 (instructionc -> whileSt .)


state 122

    (46) declarationc -> ID . IGUAL exp PTCOMA
    (47) declarationc -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (61) callFuncSt -> ID . parametersCallFunc PTCOMA
    (62) parametersCallFunc -> . PARIZQ listValues PARDER
    (63) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 190
    PARIZQ          shift and go to state 24

    parametersCallFunc             shift and go to state 23

state 123

    (48) declarationc -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> LOCAL . ID IGUAL exp PTCOMA
    (50) declarationc -> LOCAL . ID PTCOMA

    ID              shift and go to state 191


state 124

    (51) declarationc -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> GLOBAL . ID IGUAL exp PTCOMA
    (53) declarationc -> GLOBAL . ID PTCOMA

    ID              shift and go to state 192


state 125

    (77) ifStc -> RIF . exp END PTCOMA
    (78) ifStc -> RIF . exp blockifc END PTCOMA
    (79) ifStc -> RIF . exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> RIF . exp blockifc RELSE END PTCOMA
    (81) ifStc -> RIF . exp blockifc elseifStc END PTCOMA
    (82) ifStc -> RIF . exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> RIF . exp blockifc elseifStc RELSE END PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 193

state 126

    (28) p_print -> PRINT PARIZQ exp PARDER . PTCOMA

    PTCOMA          shift and go to state 194


state 127

    (29) p_println -> PRINTLN PARIZQ exp PARDER . PTCOMA

    PTCOMA          shift and go to state 195


state 128

    (30) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 30 (declaration -> ID IGUAL exp PTCOMA .)


state 129

    (31) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 196


state 130

    (62) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 62 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 131

    (64) listValues -> listValues COMA . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 197

state 132

    (32) declaration -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> GLOBAL ID IGUAL exp . PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 198
    PTCOMA          shift and go to state 199
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 133

    (35) declaration -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> LOCAL ID IGUAL exp . PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 200
    PTCOMA          shift and go to state 201
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 134

    (54) function -> FUNCTION ID parametersFunc blockf .

    PRINT           reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    PRINTLN         reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    ID              reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    GLOBAL          reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    LOCAL           reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    FUNCTION        reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    RIF             reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    RWHILE          reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)
    $end            reduce using rule 54 (function -> FUNCTION ID parametersFunc blockf .)


state 135

    (89) blockf -> instructionsf . END PTCOMA
    (4) instructionsf -> instructionsf . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 202
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    instructionf                   shift and go to state 161
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 136

    (90) blockf -> END . PTCOMA

    PTCOMA          shift and go to state 203


state 137

    (55) parametersFunc -> PARIZQ parameters . PARDER
    (57) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 204
    COMA            shift and go to state 205


state 138

    (56) parametersFunc -> PARIZQ PARDER .

    END             reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 56 (parametersFunc -> PARIZQ PARDER .)


state 139

    (58) parameters -> parameter .

    PARDER          reduce using rule 58 (parameters -> parameter .)
    COMA            reduce using rule 58 (parameters -> parameter .)


state 140

    (59) parameter -> ID . DOSPT DOSPT typeDef
    (60) parameter -> ID .

    DOSPT           shift and go to state 206
    PARDER          reduce using rule 60 (parameter -> ID .)
    COMA            reduce using rule 60 (parameter -> ID .)


state 141

    (66) ifSt -> RIF exp END PTCOMA .

    PRINT           reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    ID              reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    FUNCTION        reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    RIF             reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    $end            reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    END             reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 66 (ifSt -> RIF exp END PTCOMA .)


state 142

    (67) ifSt -> RIF exp blockiff END . PTCOMA

    PTCOMA          shift and go to state 207


state 143

    (68) ifSt -> RIF exp blockiff RELSE . blockiff END PTCOMA
    (69) ifSt -> RIF exp blockiff RELSE . END PTCOMA
    (93) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 209
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 208
    instructionsf                  shift and go to state 83
    instructionf                   shift and go to state 84
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 144

    (70) ifSt -> RIF exp blockiff elseifSt . END PTCOMA
    (71) ifSt -> RIF exp blockiff elseifSt . RELSE blockiff END PTCOMA
    (72) ifSt -> RIF exp blockiff elseifSt . RELSE END PTCOMA
    (73) elseifSt -> elseifSt . conelseif
    (75) conelseif -> . RELSEIF exp blockiff
    (76) conelseif -> . RELSEIF exp

    END             shift and go to state 210
    RELSE           shift and go to state 211
    RELSEIF         shift and go to state 146

    conelseif                      shift and go to state 212

state 145

    (74) elseifSt -> conelseif .

    END             reduce using rule 74 (elseifSt -> conelseif .)
    RELSE           reduce using rule 74 (elseifSt -> conelseif .)
    RELSEIF         reduce using rule 74 (elseifSt -> conelseif .)


state 146

    (75) conelseif -> RELSEIF . exp blockiff
    (76) conelseif -> RELSEIF . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 213

state 147

    (97) exp -> exp MAS exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 97 (exp -> exp MAS exp .)
    MAS             reduce using rule 97 (exp -> exp MAS exp .)
    MENOS           reduce using rule 97 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 97 (exp -> exp MAS exp .)
    MENOR           reduce using rule 97 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 97 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 97 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 97 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 97 (exp -> exp MAS exp .)
    ANDD            reduce using rule 97 (exp -> exp MAS exp .)
    ORR             reduce using rule 97 (exp -> exp MAS exp .)
    PRINT           reduce using rule 97 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 97 (exp -> exp MAS exp .)
    ID              reduce using rule 97 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 97 (exp -> exp MAS exp .)
    LOCAL           reduce using rule 97 (exp -> exp MAS exp .)
    RIF             reduce using rule 97 (exp -> exp MAS exp .)
    RWHILE          reduce using rule 97 (exp -> exp MAS exp .)
    PARDER          reduce using rule 97 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 97 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 97 (exp -> exp MAS exp .)
    COMA            reduce using rule 97 (exp -> exp MAS exp .)
    CORDER          reduce using rule 97 (exp -> exp MAS exp .)
    RELSE           reduce using rule 97 (exp -> exp MAS exp .)
    RELSEIF         reduce using rule 97 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74

  ! MULTIPLICACION  [ reduce using rule 97 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 97 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 97 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 97 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 148

    (98) exp -> exp MENOS exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 98 (exp -> exp MENOS exp .)
    MAS             reduce using rule 98 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 98 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 98 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 98 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 98 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 98 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 98 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 98 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 98 (exp -> exp MENOS exp .)
    ORR             reduce using rule 98 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 98 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 98 (exp -> exp MENOS exp .)
    ID              reduce using rule 98 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 98 (exp -> exp MENOS exp .)
    LOCAL           reduce using rule 98 (exp -> exp MENOS exp .)
    RIF             reduce using rule 98 (exp -> exp MENOS exp .)
    RWHILE          reduce using rule 98 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 98 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 98 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 98 (exp -> exp MENOS exp .)
    COMA            reduce using rule 98 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 98 (exp -> exp MENOS exp .)
    RELSE           reduce using rule 98 (exp -> exp MENOS exp .)
    RELSEIF         reduce using rule 98 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74

  ! MULTIPLICACION  [ reduce using rule 98 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 98 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 98 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 98 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 149

    (99) exp -> exp MULTIPLICACION exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    PRINTLN         reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    ID              reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    GLOBAL          reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    LOCAL           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    RIF             reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    RWHILE          reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    RELSE           reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    RELSEIF         reduce using rule 99 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 73

  ! POTENCIA        [ reduce using rule 99 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 150

    (100) exp -> exp DIVISION exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 100 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 100 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 100 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 100 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 100 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 100 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 100 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 100 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 100 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 100 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 100 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 100 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 100 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 100 (exp -> exp DIVISION exp .)
    PRINT           reduce using rule 100 (exp -> exp DIVISION exp .)
    PRINTLN         reduce using rule 100 (exp -> exp DIVISION exp .)
    ID              reduce using rule 100 (exp -> exp DIVISION exp .)
    GLOBAL          reduce using rule 100 (exp -> exp DIVISION exp .)
    LOCAL           reduce using rule 100 (exp -> exp DIVISION exp .)
    RIF             reduce using rule 100 (exp -> exp DIVISION exp .)
    RWHILE          reduce using rule 100 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 100 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 100 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 100 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 100 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 100 (exp -> exp DIVISION exp .)
    RELSE           reduce using rule 100 (exp -> exp DIVISION exp .)
    RELSEIF         reduce using rule 100 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 73

  ! POTENCIA        [ reduce using rule 100 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 151

    (101) exp -> exp POTENCIA exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 101 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 101 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 101 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 101 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 101 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 101 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 101 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 101 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 101 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 101 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 101 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 101 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 101 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 101 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 101 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 101 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 101 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 101 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 101 (exp -> exp POTENCIA exp .)
    LOCAL           reduce using rule 101 (exp -> exp POTENCIA exp .)
    RIF             reduce using rule 101 (exp -> exp POTENCIA exp .)
    RWHILE          reduce using rule 101 (exp -> exp POTENCIA exp .)
    PARDER          reduce using rule 101 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 101 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 101 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 101 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 101 (exp -> exp POTENCIA exp .)
    RELSE           reduce using rule 101 (exp -> exp POTENCIA exp .)
    RELSEIF         reduce using rule 101 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! POTENCIA        [ shift and go to state 73 ]
  ! MODULO          [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 152

    (102) exp -> exp MODULO exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 102 (exp -> exp MODULO exp .)
    MAS             reduce using rule 102 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 102 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 102 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 102 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 102 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 102 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 102 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 102 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 102 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 102 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 102 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 102 (exp -> exp MODULO exp .)
    ORR             reduce using rule 102 (exp -> exp MODULO exp .)
    PRINT           reduce using rule 102 (exp -> exp MODULO exp .)
    PRINTLN         reduce using rule 102 (exp -> exp MODULO exp .)
    ID              reduce using rule 102 (exp -> exp MODULO exp .)
    GLOBAL          reduce using rule 102 (exp -> exp MODULO exp .)
    LOCAL           reduce using rule 102 (exp -> exp MODULO exp .)
    RIF             reduce using rule 102 (exp -> exp MODULO exp .)
    RWHILE          reduce using rule 102 (exp -> exp MODULO exp .)
    PARDER          reduce using rule 102 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 102 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 102 (exp -> exp MODULO exp .)
    COMA            reduce using rule 102 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 102 (exp -> exp MODULO exp .)
    RELSE           reduce using rule 102 (exp -> exp MODULO exp .)
    RELSEIF         reduce using rule 102 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 73

  ! POTENCIA        [ reduce using rule 102 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 69 ]
  ! MENOS           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 74 ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 153

    (103) exp -> exp MAYOR exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 103 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 103 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 103 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 103 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 103 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 103 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 103 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 103 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 103 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 103 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 103 (exp -> exp MAYOR exp .)
    ID              reduce using rule 103 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 103 (exp -> exp MAYOR exp .)
    LOCAL           reduce using rule 103 (exp -> exp MAYOR exp .)
    RIF             reduce using rule 103 (exp -> exp MAYOR exp .)
    RWHILE          reduce using rule 103 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 103 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 103 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 103 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 103 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 103 (exp -> exp MAYOR exp .)
    RELSE           reduce using rule 103 (exp -> exp MAYOR exp .)
    RELSEIF         reduce using rule 103 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74

  ! MAS             [ reduce using rule 103 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 103 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 103 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 103 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 103 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 103 (exp -> exp MAYOR exp .) ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 154

    (104) exp -> exp MENOR exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 104 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 104 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 104 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 104 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 104 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 104 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 104 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 104 (exp -> exp MENOR exp .)
    ORR             reduce using rule 104 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 104 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 104 (exp -> exp MENOR exp .)
    ID              reduce using rule 104 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 104 (exp -> exp MENOR exp .)
    LOCAL           reduce using rule 104 (exp -> exp MENOR exp .)
    RIF             reduce using rule 104 (exp -> exp MENOR exp .)
    RWHILE          reduce using rule 104 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 104 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 104 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 104 (exp -> exp MENOR exp .)
    COMA            reduce using rule 104 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 104 (exp -> exp MENOR exp .)
    RELSE           reduce using rule 104 (exp -> exp MENOR exp .)
    RELSEIF         reduce using rule 104 (exp -> exp MENOR exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74

  ! MAS             [ reduce using rule 104 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 104 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 104 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 104 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 104 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 104 (exp -> exp MENOR exp .) ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 155

    (105) exp -> exp IGUALIGUAL exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for ANDD resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
    END             reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    PRINT           reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    PRINTLN         reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    ID              reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    GLOBAL          reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    LOCAL           reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    RIF             reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    RWHILE          reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    RELSE           reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    RELSEIF         reduce using rule 105 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82

  ! MAS             [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MAYOR           [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOR           [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MAYORIGUAL      [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! MENORIGUAL      [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! DISTINTO        [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! ANDD            [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]
  ! ORR             [ reduce using rule 105 (exp -> exp IGUALIGUAL exp .) ]


state 156

    (106) exp -> exp MAYORIGUAL exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    LOCAL           reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    RIF             reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    RWHILE          reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    RELSE           reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    RELSEIF         reduce using rule 106 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74

  ! MAS             [ reduce using rule 106 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 106 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 106 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 106 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 106 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 106 (exp -> exp MAYORIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 157

    (107) exp -> exp MENORIGUAL exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    LOCAL           reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    RIF             reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    RWHILE          reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    RELSE           reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    RELSEIF         reduce using rule 107 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74

  ! MAS             [ reduce using rule 107 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 107 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 107 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 107 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 107 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 107 (exp -> exp MENORIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 75 ]
  ! MENOR           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! MAYORIGUAL      [ shift and go to state 78 ]
  ! MENORIGUAL      [ shift and go to state 79 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 158

    (108) exp -> exp DISTINTO exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 108 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 108 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 108 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 108 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 108 (exp -> exp DISTINTO exp .)
    PRINT           reduce using rule 108 (exp -> exp DISTINTO exp .)
    PRINTLN         reduce using rule 108 (exp -> exp DISTINTO exp .)
    ID              reduce using rule 108 (exp -> exp DISTINTO exp .)
    GLOBAL          reduce using rule 108 (exp -> exp DISTINTO exp .)
    LOCAL           reduce using rule 108 (exp -> exp DISTINTO exp .)
    RIF             reduce using rule 108 (exp -> exp DISTINTO exp .)
    RWHILE          reduce using rule 108 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 108 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 108 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 108 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 108 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 108 (exp -> exp DISTINTO exp .)
    RELSE           reduce using rule 108 (exp -> exp DISTINTO exp .)
    RELSEIF         reduce using rule 108 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79

  ! MAS             [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MAYOR           [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MENOR           [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MAYORIGUAL      [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! MENORIGUAL      [ reduce using rule 108 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 80 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 159

    (109) exp -> exp ANDD exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 109 (exp -> exp ANDD exp .)
    IGUALIGUAL      reduce using rule 109 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 109 (exp -> exp ANDD exp .)
    PRINT           reduce using rule 109 (exp -> exp ANDD exp .)
    PRINTLN         reduce using rule 109 (exp -> exp ANDD exp .)
    ID              reduce using rule 109 (exp -> exp ANDD exp .)
    GLOBAL          reduce using rule 109 (exp -> exp ANDD exp .)
    LOCAL           reduce using rule 109 (exp -> exp ANDD exp .)
    RIF             reduce using rule 109 (exp -> exp ANDD exp .)
    RWHILE          reduce using rule 109 (exp -> exp ANDD exp .)
    PARDER          reduce using rule 109 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 109 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 109 (exp -> exp ANDD exp .)
    COMA            reduce using rule 109 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 109 (exp -> exp ANDD exp .)
    RELSE           reduce using rule 109 (exp -> exp ANDD exp .)
    RELSEIF         reduce using rule 109 (exp -> exp ANDD exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ORR             shift and go to state 82

  ! MAS             [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! ANDD            [ shift and go to state 81 ]


state 160

    (110) exp -> exp ORR exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 110 (exp -> exp ORR exp .)
    IGUALIGUAL      reduce using rule 110 (exp -> exp ORR exp .)
    ANDD            reduce using rule 110 (exp -> exp ORR exp .)
    ORR             reduce using rule 110 (exp -> exp ORR exp .)
    PRINT           reduce using rule 110 (exp -> exp ORR exp .)
    PRINTLN         reduce using rule 110 (exp -> exp ORR exp .)
    ID              reduce using rule 110 (exp -> exp ORR exp .)
    GLOBAL          reduce using rule 110 (exp -> exp ORR exp .)
    LOCAL           reduce using rule 110 (exp -> exp ORR exp .)
    RIF             reduce using rule 110 (exp -> exp ORR exp .)
    RWHILE          reduce using rule 110 (exp -> exp ORR exp .)
    PARDER          reduce using rule 110 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 110 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 110 (exp -> exp ORR exp .)
    COMA            reduce using rule 110 (exp -> exp ORR exp .)
    CORDER          reduce using rule 110 (exp -> exp ORR exp .)
    RELSE           reduce using rule 110 (exp -> exp ORR exp .)
    RELSEIF         reduce using rule 110 (exp -> exp ORR exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80

  ! MAS             [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! ANDD            [ shift and go to state 81 ]
  ! ORR             [ shift and go to state 82 ]


state 161

    (4) instructionsf -> instructionsf instructionf .

    PRINT           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    PRINTLN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    ID              reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    GLOBAL          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    LOCAL           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RIF             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RWHILE          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    END             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSE           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSEIF         reduce using rule 4 (instructionsf -> instructionsf instructionf .)


state 162

    (38) declarationf -> ID IGUAL . exp PTCOMA
    (39) declarationf -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 214

state 163

    (40) declarationf -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> GLOBAL ID . IGUAL exp PTCOMA
    (42) declarationf -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 215
    PTCOMA          shift and go to state 216


state 164

    (43) declarationf -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> LOCAL ID . IGUAL exp PTCOMA
    (45) declarationf -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 217
    PTCOMA          shift and go to state 218


state 165

    (112) exp -> UPPERCASE PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 219
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 166

    (130) exp -> PARIZQ exp PARDER .

    END             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PRINT           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    ID              reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    LOCAL           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RIF             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RWHILE          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PARDER          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RELSE           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 130 (exp -> PARIZQ exp PARDER .)


state 167

    (113) exp -> LOWERCASE PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 220
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 168

    (114) exp -> LOG PARIZQ exp . COMA exp PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    COMA            shift and go to state 221
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 169

    (115) exp -> LOG10 PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 222
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 170

    (116) exp -> SIN PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 223
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 171

    (117) exp -> COS PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 224
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 172

    (118) exp -> TAN PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 225
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 173

    (119) exp -> SQRT PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 226
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 174

    (120) exp -> PARSE PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 227


state 175

    (125) typeDef -> RINT .

    COMA            reduce using rule 125 (typeDef -> RINT .)
    PTCOMA          reduce using rule 125 (typeDef -> RINT .)
    PARDER          reduce using rule 125 (typeDef -> RINT .)


state 176

    (126) typeDef -> RFLOAT .

    COMA            reduce using rule 126 (typeDef -> RFLOAT .)
    PTCOMA          reduce using rule 126 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 126 (typeDef -> RFLOAT .)


state 177

    (127) typeDef -> RSTRING .

    COMA            reduce using rule 127 (typeDef -> RSTRING .)
    PTCOMA          reduce using rule 127 (typeDef -> RSTRING .)
    PARDER          reduce using rule 127 (typeDef -> RSTRING .)


state 178

    (128) typeDef -> RCHAR .

    COMA            reduce using rule 128 (typeDef -> RCHAR .)
    PTCOMA          reduce using rule 128 (typeDef -> RCHAR .)
    PARDER          reduce using rule 128 (typeDef -> RCHAR .)


state 179

    (129) typeDef -> RBOOL .

    COMA            reduce using rule 129 (typeDef -> RBOOL .)
    PTCOMA          reduce using rule 129 (typeDef -> RBOOL .)
    PARDER          reduce using rule 129 (typeDef -> RBOOL .)


state 180

    (121) exp -> TRUNC PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 228


state 181

    (122) exp -> FLOAT PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 229
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 182

    (123) exp -> RSTRING PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 230
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 183

    (124) exp -> TYPEOF PARIZQ exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 231
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 184

    (141) listArray -> listArray CORIZQ . exp CORDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 232

state 185

    (142) listArray -> CORIZQ exp . CORDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    CORDER          shift and go to state 233
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 186

    (140) exp -> CORIZQ listValues CORDER .

    END             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PRINT           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PRINTLN         reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    ID              reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    GLOBAL          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    LOCAL           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RIF             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RWHILE          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PARDER          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    DOSPT           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RELSE           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RELSEIF         reduce using rule 140 (exp -> CORIZQ listValues CORDER .)


state 187

    (91) blockc -> instructionsc END . PTCOMA

    PTCOMA          shift and go to state 234


state 188

    (6) instructionsc -> instructionsc instructionc .

    END             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINT           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINTLN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    ID              reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    LOCAL           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    GLOBAL          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RIF             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RWHILE          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSE           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSEIF         reduce using rule 6 (instructionsc -> instructionsc instructionc .)


state 189

    (92) blockc -> END PTCOMA .

    PRINT           reduce using rule 92 (blockc -> END PTCOMA .)
    PRINTLN         reduce using rule 92 (blockc -> END PTCOMA .)
    ID              reduce using rule 92 (blockc -> END PTCOMA .)
    GLOBAL          reduce using rule 92 (blockc -> END PTCOMA .)
    LOCAL           reduce using rule 92 (blockc -> END PTCOMA .)
    FUNCTION        reduce using rule 92 (blockc -> END PTCOMA .)
    RIF             reduce using rule 92 (blockc -> END PTCOMA .)
    RWHILE          reduce using rule 92 (blockc -> END PTCOMA .)
    $end            reduce using rule 92 (blockc -> END PTCOMA .)
    END             reduce using rule 92 (blockc -> END PTCOMA .)
    RELSE           reduce using rule 92 (blockc -> END PTCOMA .)
    RELSEIF         reduce using rule 92 (blockc -> END PTCOMA .)


state 190

    (46) declarationc -> ID IGUAL . exp PTCOMA
    (47) declarationc -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 235

state 191

    (48) declarationc -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> LOCAL ID . IGUAL exp PTCOMA
    (50) declarationc -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 236
    PTCOMA          shift and go to state 237


state 192

    (51) declarationc -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> GLOBAL ID . IGUAL exp PTCOMA
    (53) declarationc -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 238
    PTCOMA          shift and go to state 239


state 193

    (77) ifStc -> RIF exp . END PTCOMA
    (78) ifStc -> RIF exp . blockifc END PTCOMA
    (79) ifStc -> RIF exp . blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> RIF exp . blockifc RELSE END PTCOMA
    (81) ifStc -> RIF exp . blockifc elseifStc END PTCOMA
    (82) ifStc -> RIF exp . blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> RIF exp . blockifc elseifStc RELSE END PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (94) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 240
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 241
    instructionsc                  shift and go to state 242
    instructionc                   shift and go to state 115
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 194

    (28) p_print -> PRINT PARIZQ exp PARDER PTCOMA .

    PRINT           reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    PRINTLN         reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    ID              reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    GLOBAL          reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    LOCAL           reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    FUNCTION        reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    RIF             reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    RWHILE          reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    $end            reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    END             reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    RELSE           reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    RELSEIF         reduce using rule 28 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)


state 195

    (29) p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .

    PRINT           reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    PRINTLN         reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    ID              reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    GLOBAL          reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    LOCAL           reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    FUNCTION        reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    RIF             reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    RWHILE          reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    $end            reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    END             reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    RELSE           reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    RELSEIF         reduce using rule 29 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)


state 196

    (31) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 243

state 197

    (64) listValues -> listValues COMA exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          reduce using rule 64 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 64 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 64 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 198

    (32) declaration -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 244


state 199

    (33) declaration -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)


state 200

    (35) declaration -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 245


state 201

    (36) declaration -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 36 (declaration -> LOCAL ID IGUAL exp PTCOMA .)


state 202

    (89) blockf -> instructionsf END . PTCOMA

    PTCOMA          shift and go to state 246


state 203

    (90) blockf -> END PTCOMA .

    PRINT           reduce using rule 90 (blockf -> END PTCOMA .)
    PRINTLN         reduce using rule 90 (blockf -> END PTCOMA .)
    ID              reduce using rule 90 (blockf -> END PTCOMA .)
    GLOBAL          reduce using rule 90 (blockf -> END PTCOMA .)
    LOCAL           reduce using rule 90 (blockf -> END PTCOMA .)
    FUNCTION        reduce using rule 90 (blockf -> END PTCOMA .)
    RIF             reduce using rule 90 (blockf -> END PTCOMA .)
    RWHILE          reduce using rule 90 (blockf -> END PTCOMA .)
    $end            reduce using rule 90 (blockf -> END PTCOMA .)


state 204

    (55) parametersFunc -> PARIZQ parameters PARDER .

    END             reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    GLOBAL          reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    LOCAL           reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 55 (parametersFunc -> PARIZQ parameters PARDER .)


state 205

    (57) parameters -> parameters COMA . parameter
    (59) parameter -> . ID DOSPT DOSPT typeDef
    (60) parameter -> . ID

    ID              shift and go to state 140

    parameter                      shift and go to state 247

state 206

    (59) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 248


state 207

    (67) ifSt -> RIF exp blockiff END PTCOMA .

    PRINT           reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    PRINTLN         reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    ID              reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    GLOBAL          reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    LOCAL           reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    FUNCTION        reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    RIF             reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    RWHILE          reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    $end            reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    END             reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSE           reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSEIF         reduce using rule 67 (ifSt -> RIF exp blockiff END PTCOMA .)


state 208

    (68) ifSt -> RIF exp blockiff RELSE blockiff . END PTCOMA

    END             shift and go to state 249


state 209

    (69) ifSt -> RIF exp blockiff RELSE END . PTCOMA

    PTCOMA          shift and go to state 250


state 210

    (70) ifSt -> RIF exp blockiff elseifSt END . PTCOMA

    PTCOMA          shift and go to state 251


state 211

    (71) ifSt -> RIF exp blockiff elseifSt RELSE . blockiff END PTCOMA
    (72) ifSt -> RIF exp blockiff elseifSt RELSE . END PTCOMA
    (93) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 253
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 252
    instructionsf                  shift and go to state 83
    instructionf                   shift and go to state 84
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 212

    (73) elseifSt -> elseifSt conelseif .

    END             reduce using rule 73 (elseifSt -> elseifSt conelseif .)
    RELSE           reduce using rule 73 (elseifSt -> elseifSt conelseif .)
    RELSEIF         reduce using rule 73 (elseifSt -> elseifSt conelseif .)


state 213

    (75) conelseif -> RELSEIF exp . blockiff
    (76) conelseif -> RELSEIF exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (93) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (38) declarationf -> . ID IGUAL exp PTCOMA
    (39) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (42) declarationf -> . GLOBAL ID PTCOMA
    (43) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (45) declarationf -> . LOCAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (66) ifSt -> . RIF exp END PTCOMA
    (67) ifSt -> . RIF exp blockiff END PTCOMA
    (68) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (70) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             reduce using rule 76 (conelseif -> RELSEIF exp .)
    RELSE           reduce using rule 76 (conelseif -> RELSEIF exp .)
    RELSEIF         reduce using rule 76 (conelseif -> RELSEIF exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 91
    GLOBAL          shift and go to state 92
    LOCAL           shift and go to state 93
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 254
    instructionsf                  shift and go to state 83
    instructionf                   shift and go to state 84
    p_print                        shift and go to state 85
    p_println                      shift and go to state 86
    declarationf                   shift and go to state 87
    callFuncSt                     shift and go to state 88
    ifSt                           shift and go to state 89
    whileSt                        shift and go to state 90

state 214

    (38) declarationf -> ID IGUAL exp . PTCOMA
    (39) declarationf -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PTCOMA          shift and go to state 255
    DOSPT           shift and go to state 256
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 215

    (40) declarationf -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> GLOBAL ID IGUAL . exp PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 257

state 216

    (42) declarationf -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    END             reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 42 (declarationf -> GLOBAL ID PTCOMA .)


state 217

    (43) declarationf -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> LOCAL ID IGUAL . exp PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 258

state 218

    (45) declarationf -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    ID              reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    END             reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 45 (declarationf -> LOCAL ID PTCOMA .)


state 219

    (112) exp -> UPPERCASE PARIZQ exp PARDER .

    END             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 220

    (113) exp -> LOWERCASE PARIZQ exp PARDER .

    END             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 221

    (114) exp -> LOG PARIZQ exp COMA . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 259

state 222

    (115) exp -> LOG10 PARIZQ exp PARDER .

    END             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MAS             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOS           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    DIVISION        reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MODULO          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYOR           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOR           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    ANDD            reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    ORR             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINT           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    ID              reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    LOCAL           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RIF             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RWHILE          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PARDER          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    DOSPT           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    COMA            reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    CORDER          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSE           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)


state 223

    (116) exp -> SIN PARIZQ exp PARDER .

    END             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MAS             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MENOS           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MODULO          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MENOR           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    ANDD            reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    ORR             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PRINT           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    ID              reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RIF             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PARDER          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    COMA            reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    CORDER          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RELSE           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)


state 224

    (117) exp -> COS PARIZQ exp PARDER .

    END             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MAS             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MENOS           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    DIVISION        reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MODULO          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MAYOR           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MENOR           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    ANDD            reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    ORR             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PRINT           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    ID              reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    LOCAL           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RIF             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RWHILE          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PARDER          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    DOSPT           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    COMA            reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    CORDER          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RELSE           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)


state 225

    (118) exp -> TAN PARIZQ exp PARDER .

    END             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MAS             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MENOS           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MODULO          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MENOR           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    ANDD            reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    ORR             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PRINT           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    ID              reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RIF             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PARDER          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    COMA            reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    CORDER          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RELSE           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)


state 226

    (119) exp -> SQRT PARIZQ exp PARDER .

    END             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MAS             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MENOS           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MODULO          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MENOR           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    ANDD            reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    ORR             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PRINT           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    ID              reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RIF             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PARDER          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    COMA            reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    CORDER          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RELSE           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)


state 227

    (120) exp -> PARSE PARIZQ typeDef COMA . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 260

state 228

    (121) exp -> TRUNC PARIZQ typeDef COMA . exp PARDER
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 261

state 229

    (122) exp -> FLOAT PARIZQ exp PARDER .

    END             reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MAS             reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MENOS           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MODULO          reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MENOR           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    ANDD            reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    ORR             reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    PRINT           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    ID              reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    RIF             reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    PARDER          reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    COMA            reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    CORDER          reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    RELSE           reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 122 (exp -> FLOAT PARIZQ exp PARDER .)


state 230

    (123) exp -> RSTRING PARIZQ exp PARDER .

    END             reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MAS             reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MENOS           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    DIVISION        reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MODULO          reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MAYOR           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MENOR           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    ANDD            reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    ORR             reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    PRINT           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    ID              reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    LOCAL           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    RIF             reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    RWHILE          reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    PARDER          reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    DOSPT           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    COMA            reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    CORDER          reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    RELSE           reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 123 (exp -> RSTRING PARIZQ exp PARDER .)


state 231

    (124) exp -> TYPEOF PARIZQ exp PARDER .

    END             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAS             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOS           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    DIVISION        reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MODULO          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYOR           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOR           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    ANDD            reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    ORR             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINT           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    ID              reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    LOCAL           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RIF             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RWHILE          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PARDER          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    DOSPT           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    COMA            reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    CORDER          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSE           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)


state 232

    (141) listArray -> listArray CORIZQ exp . CORDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    CORDER          shift and go to state 262
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 233

    (142) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    END             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PRINT           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    ID              reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    LOCAL           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RIF             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RWHILE          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RELSE           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 142 (listArray -> CORIZQ exp CORDER .)


state 234

    (91) blockc -> instructionsc END PTCOMA .

    PRINT           reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    PRINTLN         reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    ID              reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    GLOBAL          reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    LOCAL           reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    FUNCTION        reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    RIF             reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    RWHILE          reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    $end            reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    END             reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    RELSE           reduce using rule 91 (blockc -> instructionsc END PTCOMA .)
    RELSEIF         reduce using rule 91 (blockc -> instructionsc END PTCOMA .)


state 235

    (46) declarationc -> ID IGUAL exp . PTCOMA
    (47) declarationc -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PTCOMA          shift and go to state 263
    DOSPT           shift and go to state 264
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 236

    (48) declarationc -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> LOCAL ID IGUAL . exp PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 265

state 237

    (50) declarationc -> LOCAL ID PTCOMA .

    END             reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    PRINT           reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    ID              reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 50 (declarationc -> LOCAL ID PTCOMA .)


state 238

    (51) declarationc -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> GLOBAL ID IGUAL . exp PTCOMA
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 266

state 239

    (53) declarationc -> GLOBAL ID PTCOMA .

    END             reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    PRINT           reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 53 (declarationc -> GLOBAL ID PTCOMA .)


state 240

    (77) ifStc -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 267


state 241

    (78) ifStc -> RIF exp blockifc . END PTCOMA
    (79) ifStc -> RIF exp blockifc . RELSE blockifc END PTCOMA
    (80) ifStc -> RIF exp blockifc . RELSE END PTCOMA
    (81) ifStc -> RIF exp blockifc . elseifStc END PTCOMA
    (82) ifStc -> RIF exp blockifc . elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> RIF exp blockifc . elseifStc RELSE END PTCOMA
    (84) elseifStc -> . elseifStc conelseifc
    (85) elseifStc -> . conelseifc
    (86) conelseifc -> . RELSEIF exp blockifc
    (87) conelseifc -> . RELSEIF exp

    END             shift and go to state 268
    RELSE           shift and go to state 269
    RELSEIF         shift and go to state 272

    elseifStc                      shift and go to state 270
    conelseifc                     shift and go to state 271

state 242

    (94) blockifc -> instructionsc .
    (6) instructionsc -> instructionsc . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             reduce using rule 94 (blockifc -> instructionsc .)
    RELSE           reduce using rule 94 (blockifc -> instructionsc .)
    RELSEIF         reduce using rule 94 (blockifc -> instructionsc .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    instructionc                   shift and go to state 188
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 243

    (31) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 273


state 244

    (32) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 274

state 245

    (35) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 275

state 246

    (89) blockf -> instructionsf END PTCOMA .

    PRINT           reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    PRINTLN         reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    ID              reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    GLOBAL          reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    LOCAL           reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    FUNCTION        reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    RIF             reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    RWHILE          reduce using rule 89 (blockf -> instructionsf END PTCOMA .)
    $end            reduce using rule 89 (blockf -> instructionsf END PTCOMA .)


state 247

    (57) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 57 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 57 (parameters -> parameters COMA parameter .)


state 248

    (59) parameter -> ID DOSPT DOSPT . typeDef
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 276

state 249

    (68) ifSt -> RIF exp blockiff RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 277


state 250

    (69) ifSt -> RIF exp blockiff RELSE END PTCOMA .

    PRINT           reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    PRINTLN         reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    ID              reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    GLOBAL          reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    LOCAL           reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    FUNCTION        reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RIF             reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RWHILE          reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    $end            reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    END             reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSE           reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSEIF         reduce using rule 69 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)


state 251

    (70) ifSt -> RIF exp blockiff elseifSt END PTCOMA .

    PRINT           reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    PRINTLN         reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    ID              reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    GLOBAL          reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    LOCAL           reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    FUNCTION        reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RIF             reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RWHILE          reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    $end            reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    END             reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSE           reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSEIF         reduce using rule 70 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)


state 252

    (71) ifSt -> RIF exp blockiff elseifSt RELSE blockiff . END PTCOMA

    END             shift and go to state 278


state 253

    (72) ifSt -> RIF exp blockiff elseifSt RELSE END . PTCOMA

    PTCOMA          shift and go to state 279


state 254

    (75) conelseif -> RELSEIF exp blockiff .

    END             reduce using rule 75 (conelseif -> RELSEIF exp blockiff .)
    RELSE           reduce using rule 75 (conelseif -> RELSEIF exp blockiff .)
    RELSEIF         reduce using rule 75 (conelseif -> RELSEIF exp blockiff .)


state 255

    (38) declarationf -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 38 (declarationf -> ID IGUAL exp PTCOMA .)


state 256

    (39) declarationf -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 280


state 257

    (40) declarationf -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> GLOBAL ID IGUAL exp . PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 281
    PTCOMA          shift and go to state 282
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 258

    (43) declarationf -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> LOCAL ID IGUAL exp . PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 283
    PTCOMA          shift and go to state 284
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 259

    (114) exp -> LOG PARIZQ exp COMA exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 285
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 260

    (120) exp -> PARSE PARIZQ typeDef COMA exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 286
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 261

    (121) exp -> TRUNC PARIZQ typeDef COMA exp . PARDER
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 287
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 262

    (141) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    END             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PRINT           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    ID              reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    LOCAL           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RIF             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RWHILE          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RELSE           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)


state 263

    (46) declarationc -> ID IGUAL exp PTCOMA .

    END             reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 46 (declarationc -> ID IGUAL exp PTCOMA .)


state 264

    (47) declarationc -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 288


state 265

    (48) declarationc -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> LOCAL ID IGUAL exp . PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 289
    PTCOMA          shift and go to state 290
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 266

    (51) declarationc -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> GLOBAL ID IGUAL exp . PTCOMA
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 291
    PTCOMA          shift and go to state 292
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82


state 267

    (77) ifStc -> RIF exp END PTCOMA .

    END             reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    PRINT           reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    ID              reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    RIF             reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 77 (ifStc -> RIF exp END PTCOMA .)


state 268

    (78) ifStc -> RIF exp blockifc END . PTCOMA

    PTCOMA          shift and go to state 293


state 269

    (79) ifStc -> RIF exp blockifc RELSE . blockifc END PTCOMA
    (80) ifStc -> RIF exp blockifc RELSE . END PTCOMA
    (94) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 295
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 294
    instructionsc                  shift and go to state 242
    instructionc                   shift and go to state 115
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 270

    (81) ifStc -> RIF exp blockifc elseifStc . END PTCOMA
    (82) ifStc -> RIF exp blockifc elseifStc . RELSE blockifc END PTCOMA
    (83) ifStc -> RIF exp blockifc elseifStc . RELSE END PTCOMA
    (84) elseifStc -> elseifStc . conelseifc
    (86) conelseifc -> . RELSEIF exp blockifc
    (87) conelseifc -> . RELSEIF exp

    END             shift and go to state 296
    RELSE           shift and go to state 297
    RELSEIF         shift and go to state 272

    conelseifc                     shift and go to state 298

state 271

    (85) elseifStc -> conelseifc .

    END             reduce using rule 85 (elseifStc -> conelseifc .)
    RELSE           reduce using rule 85 (elseifStc -> conelseifc .)
    RELSEIF         reduce using rule 85 (elseifStc -> conelseifc .)


state 272

    (86) conelseifc -> RELSEIF . exp blockifc
    (87) conelseifc -> RELSEIF . exp
    (97) exp -> . exp MAS exp
    (98) exp -> . exp MENOS exp
    (99) exp -> . exp MULTIPLICACION exp
    (100) exp -> . exp DIVISION exp
    (101) exp -> . exp POTENCIA exp
    (102) exp -> . exp MODULO exp
    (103) exp -> . exp MAYOR exp
    (104) exp -> . exp MENOR exp
    (105) exp -> . exp IGUALIGUAL exp
    (106) exp -> . exp MAYORIGUAL exp
    (107) exp -> . exp MENORIGUAL exp
    (108) exp -> . exp DISTINTO exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . FLOAT PARIZQ exp PARDER
    (123) exp -> . RSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 29
    UPPERCASE       shift and go to state 30
    LOWERCASE       shift and go to state 32
    LOG             shift and go to state 33
    LOG10           shift and go to state 34
    SIN             shift and go to state 35
    COS             shift and go to state 36
    TAN             shift and go to state 37
    SQRT            shift and go to state 38
    PARSE           shift and go to state 39
    TRUNC           shift and go to state 40
    FLOAT           shift and go to state 41
    RSTRING         shift and go to state 42
    TYPEOF          shift and go to state 43
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    STRING          shift and go to state 46
    CHAR            shift and go to state 47
    VERDADERO       shift and go to state 48
    FALSO           shift and go to state 49
    NULO            shift and go to state 50
    ID              shift and go to state 51
    CORIZQ          shift and go to state 52

    exp                            shift and go to state 299

state 273

    (31) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 31 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 274

    (32) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 300


state 275

    (35) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 301


state 276

    (59) parameter -> ID DOSPT DOSPT typeDef .

    PARDER          reduce using rule 59 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 59 (parameter -> ID DOSPT DOSPT typeDef .)


state 277

    (68) ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    ID              reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    $end            reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    END             reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 68 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)


state 278

    (71) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 302


state 279

    (72) ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .

    PRINT           reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    PRINTLN         reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    ID              reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    GLOBAL          reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    LOCAL           reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    FUNCTION        reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RIF             reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RWHILE          reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    $end            reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    END             reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSE           reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSEIF         reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)


state 280

    (39) declarationf -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 303

state 281

    (40) declarationf -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 304


state 282

    (41) declarationf -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)


state 283

    (43) declarationf -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 305


state 284

    (44) declarationf -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)


state 285

    (114) exp -> LOG PARIZQ exp COMA exp PARDER .

    END             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    POTENCIA        reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MODULO          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ANDD            reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ORR             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINT           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINTLN         reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ID              reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    GLOBAL          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    LOCAL           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RIF             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RWHILE          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DOSPT           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    CORDER          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSE           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSEIF         reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)


state 286

    (120) exp -> PARSE PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)


state 287

    (121) exp -> TRUNC PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)


state 288

    (47) declarationc -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 306

state 289

    (48) declarationc -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 307


state 290

    (49) declarationc -> LOCAL ID IGUAL exp PTCOMA .

    END             reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)


state 291

    (51) declarationc -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 308


state 292

    (52) declarationc -> GLOBAL ID IGUAL exp PTCOMA .

    END             reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)


state 293

    (78) ifStc -> RIF exp blockifc END PTCOMA .

    END             reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINT           reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINTLN         reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    ID              reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    LOCAL           reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    GLOBAL          reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    RIF             reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    RWHILE          reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSE           reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSEIF         reduce using rule 78 (ifStc -> RIF exp blockifc END PTCOMA .)


state 294

    (79) ifStc -> RIF exp blockifc RELSE blockifc . END PTCOMA

    END             shift and go to state 309


state 295

    (80) ifStc -> RIF exp blockifc RELSE END . PTCOMA

    PTCOMA          shift and go to state 310


state 296

    (81) ifStc -> RIF exp blockifc elseifStc END . PTCOMA

    PTCOMA          shift and go to state 311


state 297

    (82) ifStc -> RIF exp blockifc elseifStc RELSE . blockifc END PTCOMA
    (83) ifStc -> RIF exp blockifc elseifStc RELSE . END PTCOMA
    (94) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             shift and go to state 313
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 312
    instructionsc                  shift and go to state 242
    instructionc                   shift and go to state 115
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 298

    (84) elseifStc -> elseifStc conelseifc .

    END             reduce using rule 84 (elseifStc -> elseifStc conelseifc .)
    RELSE           reduce using rule 84 (elseifStc -> elseifStc conelseifc .)
    RELSEIF         reduce using rule 84 (elseifStc -> elseifStc conelseifc .)


state 299

    (86) conelseifc -> RELSEIF exp . blockifc
    (87) conelseifc -> RELSEIF exp .
    (97) exp -> exp . MAS exp
    (98) exp -> exp . MENOS exp
    (99) exp -> exp . MULTIPLICACION exp
    (100) exp -> exp . DIVISION exp
    (101) exp -> exp . POTENCIA exp
    (102) exp -> exp . MODULO exp
    (103) exp -> exp . MAYOR exp
    (104) exp -> exp . MENOR exp
    (105) exp -> exp . IGUALIGUAL exp
    (106) exp -> exp . MAYORIGUAL exp
    (107) exp -> exp . MENORIGUAL exp
    (108) exp -> exp . DISTINTO exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (94) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (28) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (29) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (46) declarationc -> . ID IGUAL exp PTCOMA
    (47) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (50) declarationc -> . LOCAL ID PTCOMA
    (51) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (53) declarationc -> . GLOBAL ID PTCOMA
    (61) callFuncSt -> . ID parametersCallFunc PTCOMA
    (77) ifStc -> . RIF exp END PTCOMA
    (78) ifStc -> . RIF exp blockifc END PTCOMA
    (79) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (81) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (88) whileSt -> . RWHILE exp blockc

    END             reduce using rule 87 (conelseifc -> RELSEIF exp .)
    RELSE           reduce using rule 87 (conelseifc -> RELSEIF exp .)
    RELSEIF         reduce using rule 87 (conelseifc -> RELSEIF exp .)
    MAS             shift and go to state 69
    MENOS           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    POTENCIA        shift and go to state 73
    MODULO          shift and go to state 74
    MAYOR           shift and go to state 75
    MENOR           shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    MAYORIGUAL      shift and go to state 78
    MENORIGUAL      shift and go to state 79
    DISTINTO        shift and go to state 80
    ANDD            shift and go to state 81
    ORR             shift and go to state 82
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 122
    LOCAL           shift and go to state 123
    GLOBAL          shift and go to state 124
    RIF             shift and go to state 125
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 314
    instructionsc                  shift and go to state 242
    instructionc                   shift and go to state 115
    p_print                        shift and go to state 116
    p_println                      shift and go to state 117
    declarationc                   shift and go to state 118
    callFuncSt                     shift and go to state 119
    ifStc                          shift and go to state 120
    whileSt                        shift and go to state 121

state 300

    (32) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 32 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 301

    (35) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 35 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 302

    (71) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    ID              reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    $end            reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    END             reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)


state 303

    (39) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 315


state 304

    (40) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 316

state 305

    (43) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 317

state 306

    (47) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 318


state 307

    (48) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 319

state 308

    (51) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 175
    RFLOAT          shift and go to state 176
    RSTRING         shift and go to state 177
    RCHAR           shift and go to state 178
    RBOOL           shift and go to state 179

    typeDef                        shift and go to state 320

state 309

    (79) ifStc -> RIF exp blockifc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 321


state 310

    (80) ifStc -> RIF exp blockifc RELSE END PTCOMA .

    END             reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINT           reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    ID              reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    LOCAL           reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RIF             reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RWHILE          reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSE           reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 80 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)


state 311

    (81) ifStc -> RIF exp blockifc elseifStc END PTCOMA .

    END             reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINT           reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINTLN         reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    ID              reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    LOCAL           reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    GLOBAL          reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RIF             reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RWHILE          reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSE           reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSEIF         reduce using rule 81 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)


state 312

    (82) ifStc -> RIF exp blockifc elseifStc RELSE blockifc . END PTCOMA

    END             shift and go to state 322


state 313

    (83) ifStc -> RIF exp blockifc elseifStc RELSE END . PTCOMA

    PTCOMA          shift and go to state 323


state 314

    (86) conelseifc -> RELSEIF exp blockifc .

    END             reduce using rule 86 (conelseifc -> RELSEIF exp blockifc .)
    RELSE           reduce using rule 86 (conelseifc -> RELSEIF exp blockifc .)
    RELSEIF         reduce using rule 86 (conelseifc -> RELSEIF exp blockifc .)


state 315

    (39) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 39 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 316

    (40) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 324


state 317

    (43) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 325


state 318

    (47) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 47 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 319

    (48) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 326


state 320

    (51) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 327


state 321

    (79) ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .

    END             reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 79 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)


state 322

    (82) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 328


state 323

    (83) ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .

    END             reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINT           reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    ID              reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    LOCAL           reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RIF             reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RWHILE          reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSE           reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)


state 324

    (40) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 40 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 325

    (43) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 43 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 326

    (48) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 48 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 327

    (51) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 51 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 328

    (82) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .

    END             reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 155 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 155 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 155 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 155 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 155 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 155 resolved as shift
WARNING: shift/reduce conflict for ANDD in state 155 resolved as shift
WARNING: shift/reduce conflict for ORR in state 155 resolved as shift
