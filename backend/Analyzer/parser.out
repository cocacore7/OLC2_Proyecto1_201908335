Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructionsf -> instructionsf instructionf
Rule 5     instructionsf -> instructionf
Rule 6     instructionsc -> instructionsc instructionc
Rule 7     instructionsc -> instructionc
Rule 8     instruction -> p_print
Rule 9     instruction -> p_println
Rule 10    instruction -> declaration
Rule 11    instruction -> function
Rule 12    instruction -> callFuncSt
Rule 13    instruction -> ifSt
Rule 14    instruction -> whileSt
Rule 15    instructionf -> p_print
Rule 16    instructionf -> p_println
Rule 17    instructionf -> declarationf
Rule 18    instructionf -> callFuncSt
Rule 19    instructionf -> ifSt
Rule 20    instructionf -> whileSt
Rule 21    instructionc -> p_print
Rule 22    instructionc -> p_println
Rule 23    instructionc -> declarationc
Rule 24    instructionc -> callFuncSt
Rule 25    instructionc -> ifStc
Rule 26    instructionc -> whileSt
Rule 27    p_print -> PRINT PARIZQ exps PARDER PTCOMA
Rule 28    p_println -> PRINTLN PARIZQ exps PARDER PTCOMA
Rule 29    exps -> exps COMA exp
Rule 30    exps -> exp
Rule 31    declaration -> ID IGUAL exp PTCOMA
Rule 32    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 33    declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 34    declaration -> GLOBAL ID IGUAL exp PTCOMA
Rule 35    declaration -> GLOBAL ID PTCOMA
Rule 36    declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 37    declaration -> LOCAL ID IGUAL exp PTCOMA
Rule 38    declaration -> LOCAL ID PTCOMA
Rule 39    declarationf -> ID IGUAL exp PTCOMA
Rule 40    declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 41    declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 42    declarationf -> GLOBAL ID IGUAL exp PTCOMA
Rule 43    declarationf -> GLOBAL ID PTCOMA
Rule 44    declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 45    declarationf -> LOCAL ID IGUAL exp PTCOMA
Rule 46    declarationf -> LOCAL ID PTCOMA
Rule 47    declarationc -> ID IGUAL exp PTCOMA
Rule 48    declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 49    declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 50    declarationc -> LOCAL ID IGUAL exp PTCOMA
Rule 51    declarationc -> LOCAL ID PTCOMA
Rule 52    declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 53    declarationc -> GLOBAL ID IGUAL exp PTCOMA
Rule 54    declarationc -> GLOBAL ID PTCOMA
Rule 55    function -> FUNCTION ID parametersFunc blockf
Rule 56    parametersFunc -> PARIZQ parameters PARDER
Rule 57    parametersFunc -> PARIZQ PARDER
Rule 58    parameters -> parameters COMA parameter
Rule 59    parameters -> parameter
Rule 60    parameter -> ID DOSPT DOSPT typeDef
Rule 61    parameter -> ID
Rule 62    callFuncSt -> ID parametersCallFunc PTCOMA
Rule 63    parametersCallFunc -> PARIZQ listValues PARDER
Rule 64    parametersCallFunc -> PARIZQ PARDER
Rule 65    listValues -> listValues COMA exp
Rule 66    listValues -> exp
Rule 67    ifSt -> RIF exp END PTCOMA
Rule 68    ifSt -> RIF exp blockiff END PTCOMA
Rule 69    ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA
Rule 70    ifSt -> RIF exp blockiff RELSE END PTCOMA
Rule 71    ifSt -> RIF exp blockiff elseifSt END PTCOMA
Rule 72    ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
Rule 73    ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA
Rule 74    elseifSt -> elseifSt conelseif
Rule 75    elseifSt -> conelseif
Rule 76    conelseif -> RELSEIF exp blockiff
Rule 77    conelseif -> RELSEIF exp
Rule 78    ifStc -> RIF exp END PTCOMA
Rule 79    ifStc -> RIF exp blockifc END PTCOMA
Rule 80    ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA
Rule 81    ifStc -> RIF exp blockifc RELSE END PTCOMA
Rule 82    ifStc -> RIF exp blockifc elseifStc END PTCOMA
Rule 83    ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
Rule 84    ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA
Rule 85    elseifStc -> elseifStc conelseifc
Rule 86    elseifStc -> conelseifc
Rule 87    conelseifc -> RELSEIF exp blockifc
Rule 88    conelseifc -> RELSEIF exp
Rule 89    whileSt -> RWHILE exp blockc
Rule 90    blockf -> instructionsf END PTCOMA
Rule 91    blockf -> END PTCOMA
Rule 92    blockc -> instructionsc END PTCOMA
Rule 93    blockc -> END PTCOMA
Rule 94    blockiff -> instructionsf
Rule 95    blockifc -> instructionsc
Rule 96    exp -> exp MAS exp
Rule 97    exp -> exp MENOS exp
Rule 98    exp -> exp MULTIPLICACION exp
Rule 99    exp -> exp DIVISION exp
Rule 100   exp -> exp POTENCIA exp
Rule 101   exp -> exp MODULO exp
Rule 102   exp -> MENOS exp
Rule 103   exp -> exp IGUALIGUAL exp
Rule 104   exp -> exp DISTINTO exp
Rule 105   exp -> exp MAYOR exp
Rule 106   exp -> exp MENOR exp
Rule 107   exp -> exp MAYORIGUAL exp
Rule 108   exp -> exp MENORIGUAL exp
Rule 109   exp -> exp ANDD exp
Rule 110   exp -> exp ORR exp
Rule 111   exp -> NOTT exp
Rule 112   exp -> UPPERCASE PARIZQ exp PARDER
Rule 113   exp -> LOWERCASE PARIZQ exp PARDER
Rule 114   exp -> LOG PARIZQ exp COMA exp PARDER
Rule 115   exp -> LOG10 PARIZQ exp PARDER
Rule 116   exp -> SIN PARIZQ exp PARDER
Rule 117   exp -> COS PARIZQ exp PARDER
Rule 118   exp -> TAN PARIZQ exp PARDER
Rule 119   exp -> SQRT PARIZQ exp PARDER
Rule 120   exp -> PARSE PARIZQ typeDef COMA exp PARDER
Rule 121   exp -> TRUNC PARIZQ typeDef COMA exp PARDER
Rule 122   exp -> MFLOAT PARIZQ exp PARDER
Rule 123   exp -> MSTRING PARIZQ exp PARDER
Rule 124   exp -> TYPEOF PARIZQ exp PARDER
Rule 125   typeDef -> RINT
Rule 126   typeDef -> RFLOAT
Rule 127   typeDef -> RSTRING
Rule 128   typeDef -> RCHAR
Rule 129   typeDef -> RBOOL
Rule 130   exp -> PARIZQ exp PARDER
Rule 131   exp -> ENTERO
Rule 132   exp -> DECIMAL
Rule 133   exp -> STRING
Rule 134   exp -> CHAR
Rule 135   exp -> VERDADERO
Rule 136   exp -> FALSO
Rule 137   exp -> NULO
Rule 138   exp -> ID
Rule 139   exp -> ID listArray
Rule 140   exp -> CORIZQ listValues CORDER
Rule 141   listArray -> listArray CORIZQ exp CORDER
Rule 142   listArray -> CORIZQ exp CORDER

Terminals, with rules where they appear

ANDD                 : 109
CHAR                 : 134
COMA                 : 29 58 65 114 120 121
CORDER               : 140 141 142
CORIZQ               : 140 141 142
COS                  : 117
DECIMAL              : 132
DISTINTO             : 104
DIVISION             : 99
DOSPT                : 32 32 33 33 36 36 40 40 41 41 44 44 48 48 49 49 52 52 60 60
END                  : 67 68 69 70 71 72 73 78 79 80 81 82 83 84 90 91 92 93
ENTERO               : 131
FALSO                : 136
FUNCTION             : 55
GLOBAL               : 33 34 35 41 42 43 52 53 54
ID                   : 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 60 61 62 138 139
IGUAL                : 31 32 33 34 36 37 39 40 41 42 44 45 47 48 49 50 52 53
IGUALIGUAL           : 103
LOCAL                : 36 37 38 44 45 46 49 50 51
LOG                  : 114
LOG10                : 115
LOWERCASE            : 113
MAS                  : 96
MAYOR                : 105
MAYORIGUAL           : 107
MENOR                : 106
MENORIGUAL           : 108
MENOS                : 97 102
MFLOAT               : 122
MODULO               : 101
MSTRING              : 123
MULTIPLICACION       : 98
NOTT                 : 111
NULO                 : 137
ORR                  : 110
PARDER               : 27 28 56 57 63 64 112 113 114 115 116 117 118 119 120 121 122 123 124 130
PARIZQ               : 27 28 56 57 63 64 112 113 114 115 116 117 118 119 120 121 122 123 124 130
PARSE                : 120
POTENCIA             : 100
PRINT                : 27
PRINTLN              : 28
PTCOMA               : 27 28 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 62 67 68 69 70 71 72 73 78 79 80 81 82 83 84 90 91 92 93
RBOOL                : 129
RCHAR                : 128
RELSE                : 69 70 72 73 80 81 83 84
RELSEIF              : 76 77 87 88
RFLOAT               : 126
RIF                  : 67 68 69 70 71 72 73 78 79 80 81 82 83 84
RINT                 : 125
RSTRING              : 127
RWHILE               : 89
SIN                  : 116
SQRT                 : 119
STRING               : 133
TAN                  : 118
TRUNC                : 121
TYPEOF               : 124
UPPERCASE            : 112
VERDADERO            : 135
error                : 

Nonterminals, with rules where they appear

blockc               : 89
blockf               : 55
blockifc             : 79 80 80 81 82 83 83 84 87
blockiff             : 68 69 69 70 71 72 72 73 76
callFuncSt           : 12 18 24
conelseif            : 74 75
conelseifc           : 85 86
declaration          : 10
declarationc         : 23
declarationf         : 17
elseifSt             : 71 72 73 74
elseifStc            : 82 83 84 85
exp                  : 29 30 31 32 33 34 36 37 39 40 41 42 44 45 47 48 49 50 52 53 65 66 67 68 69 70 71 72 73 76 77 78 79 80 81 82 83 84 87 88 89 96 96 97 97 98 98 99 99 100 100 101 101 102 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111 112 113 114 114 115 116 117 118 119 120 121 122 123 124 130 141 142
exps                 : 27 28 29
function             : 11
ifSt                 : 13 19
ifStc                : 25
initial              : 0
instruction          : 2 3
instructionc         : 6 7
instructionf         : 4 5
instructions         : 1 2
instructionsc        : 6 92 95
instructionsf        : 4 90 94
listArray            : 139 141
listValues           : 63 65 140
p_print              : 8 15 21
p_println            : 9 16 22
parameter            : 58 59
parameters           : 56 58
parametersCallFunc   : 62
parametersFunc       : 55
typeDef              : 32 33 36 40 41 44 48 49 52 60 120 121
whileSt              : 14 20 26

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (31) declaration -> . ID IGUAL exp PTCOMA
    (32) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (34) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (35) declaration -> . GLOBAL ID PTCOMA
    (36) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (38) declaration -> . LOCAL ID PTCOMA
    (55) function -> . FUNCTION ID parametersFunc blockf
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    GLOBAL          shift and go to state 14
    LOCAL           shift and go to state 15
    FUNCTION        shift and go to state 16
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (31) declaration -> . ID IGUAL exp PTCOMA
    (32) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (33) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (34) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (35) declaration -> . GLOBAL ID PTCOMA
    (36) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (38) declaration -> . LOCAL ID PTCOMA
    (55) function -> . FUNCTION ID parametersFunc blockf
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    GLOBAL          shift and go to state 14
    LOCAL           shift and go to state 15
    FUNCTION        shift and go to state 16
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    instruction                    shift and go to state 19
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    GLOBAL          reduce using rule 3 (instructions -> instruction .)
    LOCAL           reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (8) instruction -> p_print .

    PRINT           reduce using rule 8 (instruction -> p_print .)
    PRINTLN         reduce using rule 8 (instruction -> p_print .)
    ID              reduce using rule 8 (instruction -> p_print .)
    GLOBAL          reduce using rule 8 (instruction -> p_print .)
    LOCAL           reduce using rule 8 (instruction -> p_print .)
    FUNCTION        reduce using rule 8 (instruction -> p_print .)
    RIF             reduce using rule 8 (instruction -> p_print .)
    RWHILE          reduce using rule 8 (instruction -> p_print .)
    $end            reduce using rule 8 (instruction -> p_print .)


state 5

    (9) instruction -> p_println .

    PRINT           reduce using rule 9 (instruction -> p_println .)
    PRINTLN         reduce using rule 9 (instruction -> p_println .)
    ID              reduce using rule 9 (instruction -> p_println .)
    GLOBAL          reduce using rule 9 (instruction -> p_println .)
    LOCAL           reduce using rule 9 (instruction -> p_println .)
    FUNCTION        reduce using rule 9 (instruction -> p_println .)
    RIF             reduce using rule 9 (instruction -> p_println .)
    RWHILE          reduce using rule 9 (instruction -> p_println .)
    $end            reduce using rule 9 (instruction -> p_println .)


state 6

    (10) instruction -> declaration .

    PRINT           reduce using rule 10 (instruction -> declaration .)
    PRINTLN         reduce using rule 10 (instruction -> declaration .)
    ID              reduce using rule 10 (instruction -> declaration .)
    GLOBAL          reduce using rule 10 (instruction -> declaration .)
    LOCAL           reduce using rule 10 (instruction -> declaration .)
    FUNCTION        reduce using rule 10 (instruction -> declaration .)
    RIF             reduce using rule 10 (instruction -> declaration .)
    RWHILE          reduce using rule 10 (instruction -> declaration .)
    $end            reduce using rule 10 (instruction -> declaration .)


state 7

    (11) instruction -> function .

    PRINT           reduce using rule 11 (instruction -> function .)
    PRINTLN         reduce using rule 11 (instruction -> function .)
    ID              reduce using rule 11 (instruction -> function .)
    GLOBAL          reduce using rule 11 (instruction -> function .)
    LOCAL           reduce using rule 11 (instruction -> function .)
    FUNCTION        reduce using rule 11 (instruction -> function .)
    RIF             reduce using rule 11 (instruction -> function .)
    RWHILE          reduce using rule 11 (instruction -> function .)
    $end            reduce using rule 11 (instruction -> function .)


state 8

    (12) instruction -> callFuncSt .

    PRINT           reduce using rule 12 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 12 (instruction -> callFuncSt .)
    ID              reduce using rule 12 (instruction -> callFuncSt .)
    GLOBAL          reduce using rule 12 (instruction -> callFuncSt .)
    LOCAL           reduce using rule 12 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 12 (instruction -> callFuncSt .)
    RIF             reduce using rule 12 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 12 (instruction -> callFuncSt .)
    $end            reduce using rule 12 (instruction -> callFuncSt .)


state 9

    (13) instruction -> ifSt .

    PRINT           reduce using rule 13 (instruction -> ifSt .)
    PRINTLN         reduce using rule 13 (instruction -> ifSt .)
    ID              reduce using rule 13 (instruction -> ifSt .)
    GLOBAL          reduce using rule 13 (instruction -> ifSt .)
    LOCAL           reduce using rule 13 (instruction -> ifSt .)
    FUNCTION        reduce using rule 13 (instruction -> ifSt .)
    RIF             reduce using rule 13 (instruction -> ifSt .)
    RWHILE          reduce using rule 13 (instruction -> ifSt .)
    $end            reduce using rule 13 (instruction -> ifSt .)


state 10

    (14) instruction -> whileSt .

    PRINT           reduce using rule 14 (instruction -> whileSt .)
    PRINTLN         reduce using rule 14 (instruction -> whileSt .)
    ID              reduce using rule 14 (instruction -> whileSt .)
    GLOBAL          reduce using rule 14 (instruction -> whileSt .)
    LOCAL           reduce using rule 14 (instruction -> whileSt .)
    FUNCTION        reduce using rule 14 (instruction -> whileSt .)
    RIF             reduce using rule 14 (instruction -> whileSt .)
    RWHILE          reduce using rule 14 (instruction -> whileSt .)
    $end            reduce using rule 14 (instruction -> whileSt .)


state 11

    (27) p_print -> PRINT . PARIZQ exps PARDER PTCOMA

    PARIZQ          shift and go to state 20


state 12

    (28) p_println -> PRINTLN . PARIZQ exps PARDER PTCOMA

    PARIZQ          shift and go to state 21


state 13

    (31) declaration -> ID . IGUAL exp PTCOMA
    (32) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (62) callFuncSt -> ID . parametersCallFunc PTCOMA
    (63) parametersCallFunc -> . PARIZQ listValues PARDER
    (64) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 22
    PARIZQ          shift and go to state 24

    parametersCallFunc             shift and go to state 23

state 14

    (33) declaration -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (34) declaration -> GLOBAL . ID IGUAL exp PTCOMA
    (35) declaration -> GLOBAL . ID PTCOMA

    ID              shift and go to state 25


state 15

    (36) declaration -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> LOCAL . ID IGUAL exp PTCOMA
    (38) declaration -> LOCAL . ID PTCOMA

    ID              shift and go to state 26


state 16

    (55) function -> FUNCTION . ID parametersFunc blockf

    ID              shift and go to state 27


state 17

    (67) ifSt -> RIF . exp END PTCOMA
    (68) ifSt -> RIF . exp blockiff END PTCOMA
    (69) ifSt -> RIF . exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> RIF . exp blockiff RELSE END PTCOMA
    (71) ifSt -> RIF . exp blockiff elseifSt END PTCOMA
    (72) ifSt -> RIF . exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> RIF . exp blockiff elseifSt RELSE END PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 28

state 18

    (89) whileSt -> RWHILE . exp blockc
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 54

state 19

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    GLOBAL          reduce using rule 2 (instructions -> instructions instruction .)
    LOCAL           reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 20

    (27) p_print -> PRINT PARIZQ . exps PARDER PTCOMA
    (29) exps -> . exps COMA exp
    (30) exps -> . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exps                           shift and go to state 55
    exp                            shift and go to state 56

state 21

    (28) p_println -> PRINTLN PARIZQ . exps PARDER PTCOMA
    (29) exps -> . exps COMA exp
    (30) exps -> . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exps                           shift and go to state 57
    exp                            shift and go to state 56

state 22

    (31) declaration -> ID IGUAL . exp PTCOMA
    (32) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 58

state 23

    (62) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 59


state 24

    (63) parametersCallFunc -> PARIZQ . listValues PARDER
    (64) parametersCallFunc -> PARIZQ . PARDER
    (65) listValues -> . listValues COMA exp
    (66) listValues -> . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    PARDER          shift and go to state 61
    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    listValues                     shift and go to state 60
    exp                            shift and go to state 62

state 25

    (33) declaration -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (34) declaration -> GLOBAL ID . IGUAL exp PTCOMA
    (35) declaration -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 63
    PTCOMA          shift and go to state 64


state 26

    (36) declaration -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> LOCAL ID . IGUAL exp PTCOMA
    (38) declaration -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 65
    PTCOMA          shift and go to state 66


state 27

    (55) function -> FUNCTION ID . parametersFunc blockf
    (56) parametersFunc -> . PARIZQ parameters PARDER
    (57) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 68

    parametersFunc                 shift and go to state 67

state 28

    (67) ifSt -> RIF exp . END PTCOMA
    (68) ifSt -> RIF exp . blockiff END PTCOMA
    (69) ifSt -> RIF exp . blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> RIF exp . blockiff RELSE END PTCOMA
    (71) ifSt -> RIF exp . blockiff elseifSt END PTCOMA
    (72) ifSt -> RIF exp . blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> RIF exp . blockiff elseifSt RELSE END PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (94) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 69
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 70
    instructionsf                  shift and go to state 85
    instructionf                   shift and go to state 86
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 29

    (102) exp -> MENOS . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 96

state 30

    (111) exp -> NOTT . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 97

state 31

    (112) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 98


state 32

    (130) exp -> PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 99

state 33

    (113) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 100


state 34

    (114) exp -> LOG . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 101


state 35

    (115) exp -> LOG10 . PARIZQ exp PARDER

    PARIZQ          shift and go to state 102


state 36

    (116) exp -> SIN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 103


state 37

    (117) exp -> COS . PARIZQ exp PARDER

    PARIZQ          shift and go to state 104


state 38

    (118) exp -> TAN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 105


state 39

    (119) exp -> SQRT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 106


state 40

    (120) exp -> PARSE . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 107


state 41

    (121) exp -> TRUNC . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 108


state 42

    (122) exp -> MFLOAT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 109


state 43

    (123) exp -> MSTRING . PARIZQ exp PARDER

    PARIZQ          shift and go to state 110


state 44

    (124) exp -> TYPEOF . PARIZQ exp PARDER

    PARIZQ          shift and go to state 111


state 45

    (131) exp -> ENTERO .

    END             reduce using rule 131 (exp -> ENTERO .)
    MAS             reduce using rule 131 (exp -> ENTERO .)
    MENOS           reduce using rule 131 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 131 (exp -> ENTERO .)
    DIVISION        reduce using rule 131 (exp -> ENTERO .)
    POTENCIA        reduce using rule 131 (exp -> ENTERO .)
    MODULO          reduce using rule 131 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 131 (exp -> ENTERO .)
    DISTINTO        reduce using rule 131 (exp -> ENTERO .)
    MAYOR           reduce using rule 131 (exp -> ENTERO .)
    MENOR           reduce using rule 131 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 131 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 131 (exp -> ENTERO .)
    ANDD            reduce using rule 131 (exp -> ENTERO .)
    ORR             reduce using rule 131 (exp -> ENTERO .)
    PRINT           reduce using rule 131 (exp -> ENTERO .)
    PRINTLN         reduce using rule 131 (exp -> ENTERO .)
    ID              reduce using rule 131 (exp -> ENTERO .)
    GLOBAL          reduce using rule 131 (exp -> ENTERO .)
    LOCAL           reduce using rule 131 (exp -> ENTERO .)
    RIF             reduce using rule 131 (exp -> ENTERO .)
    RWHILE          reduce using rule 131 (exp -> ENTERO .)
    PARDER          reduce using rule 131 (exp -> ENTERO .)
    COMA            reduce using rule 131 (exp -> ENTERO .)
    PTCOMA          reduce using rule 131 (exp -> ENTERO .)
    DOSPT           reduce using rule 131 (exp -> ENTERO .)
    CORDER          reduce using rule 131 (exp -> ENTERO .)
    RELSE           reduce using rule 131 (exp -> ENTERO .)
    RELSEIF         reduce using rule 131 (exp -> ENTERO .)


state 46

    (132) exp -> DECIMAL .

    END             reduce using rule 132 (exp -> DECIMAL .)
    MAS             reduce using rule 132 (exp -> DECIMAL .)
    MENOS           reduce using rule 132 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 132 (exp -> DECIMAL .)
    DIVISION        reduce using rule 132 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 132 (exp -> DECIMAL .)
    MODULO          reduce using rule 132 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 132 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 132 (exp -> DECIMAL .)
    MAYOR           reduce using rule 132 (exp -> DECIMAL .)
    MENOR           reduce using rule 132 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 132 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 132 (exp -> DECIMAL .)
    ANDD            reduce using rule 132 (exp -> DECIMAL .)
    ORR             reduce using rule 132 (exp -> DECIMAL .)
    PRINT           reduce using rule 132 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 132 (exp -> DECIMAL .)
    ID              reduce using rule 132 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 132 (exp -> DECIMAL .)
    LOCAL           reduce using rule 132 (exp -> DECIMAL .)
    RIF             reduce using rule 132 (exp -> DECIMAL .)
    RWHILE          reduce using rule 132 (exp -> DECIMAL .)
    PARDER          reduce using rule 132 (exp -> DECIMAL .)
    COMA            reduce using rule 132 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 132 (exp -> DECIMAL .)
    DOSPT           reduce using rule 132 (exp -> DECIMAL .)
    CORDER          reduce using rule 132 (exp -> DECIMAL .)
    RELSE           reduce using rule 132 (exp -> DECIMAL .)
    RELSEIF         reduce using rule 132 (exp -> DECIMAL .)


state 47

    (133) exp -> STRING .

    END             reduce using rule 133 (exp -> STRING .)
    MAS             reduce using rule 133 (exp -> STRING .)
    MENOS           reduce using rule 133 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 133 (exp -> STRING .)
    DIVISION        reduce using rule 133 (exp -> STRING .)
    POTENCIA        reduce using rule 133 (exp -> STRING .)
    MODULO          reduce using rule 133 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 133 (exp -> STRING .)
    DISTINTO        reduce using rule 133 (exp -> STRING .)
    MAYOR           reduce using rule 133 (exp -> STRING .)
    MENOR           reduce using rule 133 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 133 (exp -> STRING .)
    MENORIGUAL      reduce using rule 133 (exp -> STRING .)
    ANDD            reduce using rule 133 (exp -> STRING .)
    ORR             reduce using rule 133 (exp -> STRING .)
    PRINT           reduce using rule 133 (exp -> STRING .)
    PRINTLN         reduce using rule 133 (exp -> STRING .)
    ID              reduce using rule 133 (exp -> STRING .)
    GLOBAL          reduce using rule 133 (exp -> STRING .)
    LOCAL           reduce using rule 133 (exp -> STRING .)
    RIF             reduce using rule 133 (exp -> STRING .)
    RWHILE          reduce using rule 133 (exp -> STRING .)
    PARDER          reduce using rule 133 (exp -> STRING .)
    COMA            reduce using rule 133 (exp -> STRING .)
    PTCOMA          reduce using rule 133 (exp -> STRING .)
    DOSPT           reduce using rule 133 (exp -> STRING .)
    CORDER          reduce using rule 133 (exp -> STRING .)
    RELSE           reduce using rule 133 (exp -> STRING .)
    RELSEIF         reduce using rule 133 (exp -> STRING .)


state 48

    (134) exp -> CHAR .

    END             reduce using rule 134 (exp -> CHAR .)
    MAS             reduce using rule 134 (exp -> CHAR .)
    MENOS           reduce using rule 134 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 134 (exp -> CHAR .)
    DIVISION        reduce using rule 134 (exp -> CHAR .)
    POTENCIA        reduce using rule 134 (exp -> CHAR .)
    MODULO          reduce using rule 134 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 134 (exp -> CHAR .)
    DISTINTO        reduce using rule 134 (exp -> CHAR .)
    MAYOR           reduce using rule 134 (exp -> CHAR .)
    MENOR           reduce using rule 134 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 134 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 134 (exp -> CHAR .)
    ANDD            reduce using rule 134 (exp -> CHAR .)
    ORR             reduce using rule 134 (exp -> CHAR .)
    PRINT           reduce using rule 134 (exp -> CHAR .)
    PRINTLN         reduce using rule 134 (exp -> CHAR .)
    ID              reduce using rule 134 (exp -> CHAR .)
    GLOBAL          reduce using rule 134 (exp -> CHAR .)
    LOCAL           reduce using rule 134 (exp -> CHAR .)
    RIF             reduce using rule 134 (exp -> CHAR .)
    RWHILE          reduce using rule 134 (exp -> CHAR .)
    PARDER          reduce using rule 134 (exp -> CHAR .)
    COMA            reduce using rule 134 (exp -> CHAR .)
    PTCOMA          reduce using rule 134 (exp -> CHAR .)
    DOSPT           reduce using rule 134 (exp -> CHAR .)
    CORDER          reduce using rule 134 (exp -> CHAR .)
    RELSE           reduce using rule 134 (exp -> CHAR .)
    RELSEIF         reduce using rule 134 (exp -> CHAR .)


state 49

    (135) exp -> VERDADERO .

    END             reduce using rule 135 (exp -> VERDADERO .)
    MAS             reduce using rule 135 (exp -> VERDADERO .)
    MENOS           reduce using rule 135 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 135 (exp -> VERDADERO .)
    DIVISION        reduce using rule 135 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 135 (exp -> VERDADERO .)
    MODULO          reduce using rule 135 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 135 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 135 (exp -> VERDADERO .)
    MAYOR           reduce using rule 135 (exp -> VERDADERO .)
    MENOR           reduce using rule 135 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 135 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 135 (exp -> VERDADERO .)
    ANDD            reduce using rule 135 (exp -> VERDADERO .)
    ORR             reduce using rule 135 (exp -> VERDADERO .)
    PRINT           reduce using rule 135 (exp -> VERDADERO .)
    PRINTLN         reduce using rule 135 (exp -> VERDADERO .)
    ID              reduce using rule 135 (exp -> VERDADERO .)
    GLOBAL          reduce using rule 135 (exp -> VERDADERO .)
    LOCAL           reduce using rule 135 (exp -> VERDADERO .)
    RIF             reduce using rule 135 (exp -> VERDADERO .)
    RWHILE          reduce using rule 135 (exp -> VERDADERO .)
    PARDER          reduce using rule 135 (exp -> VERDADERO .)
    COMA            reduce using rule 135 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 135 (exp -> VERDADERO .)
    DOSPT           reduce using rule 135 (exp -> VERDADERO .)
    CORDER          reduce using rule 135 (exp -> VERDADERO .)
    RELSE           reduce using rule 135 (exp -> VERDADERO .)
    RELSEIF         reduce using rule 135 (exp -> VERDADERO .)


state 50

    (136) exp -> FALSO .

    END             reduce using rule 136 (exp -> FALSO .)
    MAS             reduce using rule 136 (exp -> FALSO .)
    MENOS           reduce using rule 136 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 136 (exp -> FALSO .)
    DIVISION        reduce using rule 136 (exp -> FALSO .)
    POTENCIA        reduce using rule 136 (exp -> FALSO .)
    MODULO          reduce using rule 136 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 136 (exp -> FALSO .)
    DISTINTO        reduce using rule 136 (exp -> FALSO .)
    MAYOR           reduce using rule 136 (exp -> FALSO .)
    MENOR           reduce using rule 136 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 136 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 136 (exp -> FALSO .)
    ANDD            reduce using rule 136 (exp -> FALSO .)
    ORR             reduce using rule 136 (exp -> FALSO .)
    PRINT           reduce using rule 136 (exp -> FALSO .)
    PRINTLN         reduce using rule 136 (exp -> FALSO .)
    ID              reduce using rule 136 (exp -> FALSO .)
    GLOBAL          reduce using rule 136 (exp -> FALSO .)
    LOCAL           reduce using rule 136 (exp -> FALSO .)
    RIF             reduce using rule 136 (exp -> FALSO .)
    RWHILE          reduce using rule 136 (exp -> FALSO .)
    PARDER          reduce using rule 136 (exp -> FALSO .)
    COMA            reduce using rule 136 (exp -> FALSO .)
    PTCOMA          reduce using rule 136 (exp -> FALSO .)
    DOSPT           reduce using rule 136 (exp -> FALSO .)
    CORDER          reduce using rule 136 (exp -> FALSO .)
    RELSE           reduce using rule 136 (exp -> FALSO .)
    RELSEIF         reduce using rule 136 (exp -> FALSO .)


state 51

    (137) exp -> NULO .

    END             reduce using rule 137 (exp -> NULO .)
    MAS             reduce using rule 137 (exp -> NULO .)
    MENOS           reduce using rule 137 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 137 (exp -> NULO .)
    DIVISION        reduce using rule 137 (exp -> NULO .)
    POTENCIA        reduce using rule 137 (exp -> NULO .)
    MODULO          reduce using rule 137 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 137 (exp -> NULO .)
    DISTINTO        reduce using rule 137 (exp -> NULO .)
    MAYOR           reduce using rule 137 (exp -> NULO .)
    MENOR           reduce using rule 137 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 137 (exp -> NULO .)
    MENORIGUAL      reduce using rule 137 (exp -> NULO .)
    ANDD            reduce using rule 137 (exp -> NULO .)
    ORR             reduce using rule 137 (exp -> NULO .)
    PRINT           reduce using rule 137 (exp -> NULO .)
    PRINTLN         reduce using rule 137 (exp -> NULO .)
    ID              reduce using rule 137 (exp -> NULO .)
    GLOBAL          reduce using rule 137 (exp -> NULO .)
    LOCAL           reduce using rule 137 (exp -> NULO .)
    RIF             reduce using rule 137 (exp -> NULO .)
    RWHILE          reduce using rule 137 (exp -> NULO .)
    PARDER          reduce using rule 137 (exp -> NULO .)
    COMA            reduce using rule 137 (exp -> NULO .)
    PTCOMA          reduce using rule 137 (exp -> NULO .)
    DOSPT           reduce using rule 137 (exp -> NULO .)
    CORDER          reduce using rule 137 (exp -> NULO .)
    RELSE           reduce using rule 137 (exp -> NULO .)
    RELSEIF         reduce using rule 137 (exp -> NULO .)


state 52

    (138) exp -> ID .
    (139) exp -> ID . listArray
    (141) listArray -> . listArray CORIZQ exp CORDER
    (142) listArray -> . CORIZQ exp CORDER

    END             reduce using rule 138 (exp -> ID .)
    MAS             reduce using rule 138 (exp -> ID .)
    MENOS           reduce using rule 138 (exp -> ID .)
    MULTIPLICACION  reduce using rule 138 (exp -> ID .)
    DIVISION        reduce using rule 138 (exp -> ID .)
    POTENCIA        reduce using rule 138 (exp -> ID .)
    MODULO          reduce using rule 138 (exp -> ID .)
    IGUALIGUAL      reduce using rule 138 (exp -> ID .)
    DISTINTO        reduce using rule 138 (exp -> ID .)
    MAYOR           reduce using rule 138 (exp -> ID .)
    MENOR           reduce using rule 138 (exp -> ID .)
    MAYORIGUAL      reduce using rule 138 (exp -> ID .)
    MENORIGUAL      reduce using rule 138 (exp -> ID .)
    ANDD            reduce using rule 138 (exp -> ID .)
    ORR             reduce using rule 138 (exp -> ID .)
    PRINT           reduce using rule 138 (exp -> ID .)
    PRINTLN         reduce using rule 138 (exp -> ID .)
    ID              reduce using rule 138 (exp -> ID .)
    GLOBAL          reduce using rule 138 (exp -> ID .)
    LOCAL           reduce using rule 138 (exp -> ID .)
    RIF             reduce using rule 138 (exp -> ID .)
    RWHILE          reduce using rule 138 (exp -> ID .)
    PARDER          reduce using rule 138 (exp -> ID .)
    COMA            reduce using rule 138 (exp -> ID .)
    PTCOMA          reduce using rule 138 (exp -> ID .)
    DOSPT           reduce using rule 138 (exp -> ID .)
    CORDER          reduce using rule 138 (exp -> ID .)
    RELSE           reduce using rule 138 (exp -> ID .)
    RELSEIF         reduce using rule 138 (exp -> ID .)
    CORIZQ          shift and go to state 113

    listArray                      shift and go to state 112

state 53

    (140) exp -> CORIZQ . listValues CORDER
    (65) listValues -> . listValues COMA exp
    (66) listValues -> . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    listValues                     shift and go to state 114
    exp                            shift and go to state 62

state 54

    (89) whileSt -> RWHILE exp . blockc
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (92) blockc -> . instructionsc END PTCOMA
    (93) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84
    END             shift and go to state 117
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    blockc                         shift and go to state 115
    instructionsc                  shift and go to state 116
    instructionc                   shift and go to state 118
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 55

    (27) p_print -> PRINT PARIZQ exps . PARDER PTCOMA
    (29) exps -> exps . COMA exp

    PARDER          shift and go to state 129
    COMA            shift and go to state 130


state 56

    (30) exps -> exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          reduce using rule 30 (exps -> exp .)
    COMA            reduce using rule 30 (exps -> exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 57

    (28) p_println -> PRINTLN PARIZQ exps . PARDER PTCOMA
    (29) exps -> exps . COMA exp

    PARDER          shift and go to state 131
    COMA            shift and go to state 130


state 58

    (31) declaration -> ID IGUAL exp . PTCOMA
    (32) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PTCOMA          shift and go to state 132
    DOSPT           shift and go to state 133
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 59

    (62) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    GLOBAL          reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    LOCAL           reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSE           reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSEIF         reduce using rule 62 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 60

    (63) parametersCallFunc -> PARIZQ listValues . PARDER
    (65) listValues -> listValues . COMA exp

    PARDER          shift and go to state 134
    COMA            shift and go to state 135


state 61

    (64) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 64 (parametersCallFunc -> PARIZQ PARDER .)


state 62

    (66) listValues -> exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          reduce using rule 66 (listValues -> exp .)
    COMA            reduce using rule 66 (listValues -> exp .)
    CORDER          reduce using rule 66 (listValues -> exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 63

    (33) declaration -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (34) declaration -> GLOBAL ID IGUAL . exp PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 136

state 64

    (35) declaration -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    FUNCTION        reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)
    $end            reduce using rule 35 (declaration -> GLOBAL ID PTCOMA .)


state 65

    (36) declaration -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> LOCAL ID IGUAL . exp PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 137

state 66

    (38) declaration -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    ID              reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    FUNCTION        reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)
    $end            reduce using rule 38 (declaration -> LOCAL ID PTCOMA .)


state 67

    (55) function -> FUNCTION ID parametersFunc . blockf
    (90) blockf -> . instructionsf END PTCOMA
    (91) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 140
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockf                         shift and go to state 138
    instructionsf                  shift and go to state 139
    instructionf                   shift and go to state 86
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 68

    (56) parametersFunc -> PARIZQ . parameters PARDER
    (57) parametersFunc -> PARIZQ . PARDER
    (58) parameters -> . parameters COMA parameter
    (59) parameters -> . parameter
    (60) parameter -> . ID DOSPT DOSPT typeDef
    (61) parameter -> . ID

    PARDER          shift and go to state 142
    ID              shift and go to state 144

    parameters                     shift and go to state 141
    parameter                      shift and go to state 143

state 69

    (67) ifSt -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 145


state 70

    (68) ifSt -> RIF exp blockiff . END PTCOMA
    (69) ifSt -> RIF exp blockiff . RELSE blockiff END PTCOMA
    (70) ifSt -> RIF exp blockiff . RELSE END PTCOMA
    (71) ifSt -> RIF exp blockiff . elseifSt END PTCOMA
    (72) ifSt -> RIF exp blockiff . elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> RIF exp blockiff . elseifSt RELSE END PTCOMA
    (74) elseifSt -> . elseifSt conelseif
    (75) elseifSt -> . conelseif
    (76) conelseif -> . RELSEIF exp blockiff
    (77) conelseif -> . RELSEIF exp

    END             shift and go to state 146
    RELSE           shift and go to state 147
    RELSEIF         shift and go to state 150

    elseifSt                       shift and go to state 148
    conelseif                      shift and go to state 149

state 71

    (96) exp -> exp MAS . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 151

state 72

    (97) exp -> exp MENOS . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 152

state 73

    (98) exp -> exp MULTIPLICACION . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 153

state 74

    (99) exp -> exp DIVISION . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 154

state 75

    (100) exp -> exp POTENCIA . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 155

state 76

    (101) exp -> exp MODULO . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 156

state 77

    (103) exp -> exp IGUALIGUAL . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 157

state 78

    (104) exp -> exp DISTINTO . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 158

state 79

    (105) exp -> exp MAYOR . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 159

state 80

    (106) exp -> exp MENOR . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 160

state 81

    (107) exp -> exp MAYORIGUAL . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 161

state 82

    (108) exp -> exp MENORIGUAL . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 162

state 83

    (109) exp -> exp ANDD . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 163

state 84

    (110) exp -> exp ORR . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 164

state 85

    (94) blockiff -> instructionsf .
    (4) instructionsf -> instructionsf . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             reduce using rule 94 (blockiff -> instructionsf .)
    RELSE           reduce using rule 94 (blockiff -> instructionsf .)
    RELSEIF         reduce using rule 94 (blockiff -> instructionsf .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    instructionf                   shift and go to state 165
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 86

    (5) instructionsf -> instructionf .

    PRINT           reduce using rule 5 (instructionsf -> instructionf .)
    PRINTLN         reduce using rule 5 (instructionsf -> instructionf .)
    ID              reduce using rule 5 (instructionsf -> instructionf .)
    GLOBAL          reduce using rule 5 (instructionsf -> instructionf .)
    LOCAL           reduce using rule 5 (instructionsf -> instructionf .)
    RIF             reduce using rule 5 (instructionsf -> instructionf .)
    RWHILE          reduce using rule 5 (instructionsf -> instructionf .)
    END             reduce using rule 5 (instructionsf -> instructionf .)
    RELSE           reduce using rule 5 (instructionsf -> instructionf .)
    RELSEIF         reduce using rule 5 (instructionsf -> instructionf .)


state 87

    (15) instructionf -> p_print .

    PRINT           reduce using rule 15 (instructionf -> p_print .)
    PRINTLN         reduce using rule 15 (instructionf -> p_print .)
    ID              reduce using rule 15 (instructionf -> p_print .)
    GLOBAL          reduce using rule 15 (instructionf -> p_print .)
    LOCAL           reduce using rule 15 (instructionf -> p_print .)
    RIF             reduce using rule 15 (instructionf -> p_print .)
    RWHILE          reduce using rule 15 (instructionf -> p_print .)
    END             reduce using rule 15 (instructionf -> p_print .)
    RELSE           reduce using rule 15 (instructionf -> p_print .)
    RELSEIF         reduce using rule 15 (instructionf -> p_print .)


state 88

    (16) instructionf -> p_println .

    PRINT           reduce using rule 16 (instructionf -> p_println .)
    PRINTLN         reduce using rule 16 (instructionf -> p_println .)
    ID              reduce using rule 16 (instructionf -> p_println .)
    GLOBAL          reduce using rule 16 (instructionf -> p_println .)
    LOCAL           reduce using rule 16 (instructionf -> p_println .)
    RIF             reduce using rule 16 (instructionf -> p_println .)
    RWHILE          reduce using rule 16 (instructionf -> p_println .)
    END             reduce using rule 16 (instructionf -> p_println .)
    RELSE           reduce using rule 16 (instructionf -> p_println .)
    RELSEIF         reduce using rule 16 (instructionf -> p_println .)


state 89

    (17) instructionf -> declarationf .

    PRINT           reduce using rule 17 (instructionf -> declarationf .)
    PRINTLN         reduce using rule 17 (instructionf -> declarationf .)
    ID              reduce using rule 17 (instructionf -> declarationf .)
    GLOBAL          reduce using rule 17 (instructionf -> declarationf .)
    LOCAL           reduce using rule 17 (instructionf -> declarationf .)
    RIF             reduce using rule 17 (instructionf -> declarationf .)
    RWHILE          reduce using rule 17 (instructionf -> declarationf .)
    END             reduce using rule 17 (instructionf -> declarationf .)
    RELSE           reduce using rule 17 (instructionf -> declarationf .)
    RELSEIF         reduce using rule 17 (instructionf -> declarationf .)


state 90

    (18) instructionf -> callFuncSt .

    PRINT           reduce using rule 18 (instructionf -> callFuncSt .)
    PRINTLN         reduce using rule 18 (instructionf -> callFuncSt .)
    ID              reduce using rule 18 (instructionf -> callFuncSt .)
    GLOBAL          reduce using rule 18 (instructionf -> callFuncSt .)
    LOCAL           reduce using rule 18 (instructionf -> callFuncSt .)
    RIF             reduce using rule 18 (instructionf -> callFuncSt .)
    RWHILE          reduce using rule 18 (instructionf -> callFuncSt .)
    END             reduce using rule 18 (instructionf -> callFuncSt .)
    RELSE           reduce using rule 18 (instructionf -> callFuncSt .)
    RELSEIF         reduce using rule 18 (instructionf -> callFuncSt .)


state 91

    (19) instructionf -> ifSt .

    PRINT           reduce using rule 19 (instructionf -> ifSt .)
    PRINTLN         reduce using rule 19 (instructionf -> ifSt .)
    ID              reduce using rule 19 (instructionf -> ifSt .)
    GLOBAL          reduce using rule 19 (instructionf -> ifSt .)
    LOCAL           reduce using rule 19 (instructionf -> ifSt .)
    RIF             reduce using rule 19 (instructionf -> ifSt .)
    RWHILE          reduce using rule 19 (instructionf -> ifSt .)
    END             reduce using rule 19 (instructionf -> ifSt .)
    RELSE           reduce using rule 19 (instructionf -> ifSt .)
    RELSEIF         reduce using rule 19 (instructionf -> ifSt .)


state 92

    (20) instructionf -> whileSt .

    PRINT           reduce using rule 20 (instructionf -> whileSt .)
    PRINTLN         reduce using rule 20 (instructionf -> whileSt .)
    ID              reduce using rule 20 (instructionf -> whileSt .)
    GLOBAL          reduce using rule 20 (instructionf -> whileSt .)
    LOCAL           reduce using rule 20 (instructionf -> whileSt .)
    RIF             reduce using rule 20 (instructionf -> whileSt .)
    RWHILE          reduce using rule 20 (instructionf -> whileSt .)
    END             reduce using rule 20 (instructionf -> whileSt .)
    RELSE           reduce using rule 20 (instructionf -> whileSt .)
    RELSEIF         reduce using rule 20 (instructionf -> whileSt .)


state 93

    (39) declarationf -> ID . IGUAL exp PTCOMA
    (40) declarationf -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (62) callFuncSt -> ID . parametersCallFunc PTCOMA
    (63) parametersCallFunc -> . PARIZQ listValues PARDER
    (64) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 166
    PARIZQ          shift and go to state 24

    parametersCallFunc             shift and go to state 23

state 94

    (41) declarationf -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> GLOBAL . ID IGUAL exp PTCOMA
    (43) declarationf -> GLOBAL . ID PTCOMA

    ID              shift and go to state 167


state 95

    (44) declarationf -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> LOCAL . ID IGUAL exp PTCOMA
    (46) declarationf -> LOCAL . ID PTCOMA

    ID              shift and go to state 168


state 96

    (102) exp -> MENOS exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 102 (exp -> MENOS exp .)
    MAS             reduce using rule 102 (exp -> MENOS exp .)
    MENOS           reduce using rule 102 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 102 (exp -> MENOS exp .)
    DIVISION        reduce using rule 102 (exp -> MENOS exp .)
    POTENCIA        reduce using rule 102 (exp -> MENOS exp .)
    MODULO          reduce using rule 102 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 102 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 102 (exp -> MENOS exp .)
    MAYOR           reduce using rule 102 (exp -> MENOS exp .)
    MENOR           reduce using rule 102 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 102 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 102 (exp -> MENOS exp .)
    ANDD            reduce using rule 102 (exp -> MENOS exp .)
    ORR             reduce using rule 102 (exp -> MENOS exp .)
    PRINT           reduce using rule 102 (exp -> MENOS exp .)
    PRINTLN         reduce using rule 102 (exp -> MENOS exp .)
    ID              reduce using rule 102 (exp -> MENOS exp .)
    GLOBAL          reduce using rule 102 (exp -> MENOS exp .)
    LOCAL           reduce using rule 102 (exp -> MENOS exp .)
    RIF             reduce using rule 102 (exp -> MENOS exp .)
    RWHILE          reduce using rule 102 (exp -> MENOS exp .)
    PARDER          reduce using rule 102 (exp -> MENOS exp .)
    COMA            reduce using rule 102 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 102 (exp -> MENOS exp .)
    DOSPT           reduce using rule 102 (exp -> MENOS exp .)
    CORDER          reduce using rule 102 (exp -> MENOS exp .)
    RELSE           reduce using rule 102 (exp -> MENOS exp .)
    RELSEIF         reduce using rule 102 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MULTIPLICACION  [ shift and go to state 73 ]
  ! DIVISION        [ shift and go to state 74 ]
  ! POTENCIA        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 97

    (111) exp -> NOTT exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 111 (exp -> NOTT exp .)
    ANDD            reduce using rule 111 (exp -> NOTT exp .)
    ORR             reduce using rule 111 (exp -> NOTT exp .)
    PRINT           reduce using rule 111 (exp -> NOTT exp .)
    PRINTLN         reduce using rule 111 (exp -> NOTT exp .)
    ID              reduce using rule 111 (exp -> NOTT exp .)
    GLOBAL          reduce using rule 111 (exp -> NOTT exp .)
    LOCAL           reduce using rule 111 (exp -> NOTT exp .)
    RIF             reduce using rule 111 (exp -> NOTT exp .)
    RWHILE          reduce using rule 111 (exp -> NOTT exp .)
    PARDER          reduce using rule 111 (exp -> NOTT exp .)
    COMA            reduce using rule 111 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 111 (exp -> NOTT exp .)
    DOSPT           reduce using rule 111 (exp -> NOTT exp .)
    CORDER          reduce using rule 111 (exp -> NOTT exp .)
    RELSE           reduce using rule 111 (exp -> NOTT exp .)
    RELSEIF         reduce using rule 111 (exp -> NOTT exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82

  ! MAS             [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 111 (exp -> NOTT exp .) ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 98

    (112) exp -> UPPERCASE PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 169

state 99

    (130) exp -> PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 170
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 100

    (113) exp -> LOWERCASE PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 171

state 101

    (114) exp -> LOG PARIZQ . exp COMA exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 172

state 102

    (115) exp -> LOG10 PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 173

state 103

    (116) exp -> SIN PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 174

state 104

    (117) exp -> COS PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 175

state 105

    (118) exp -> TAN PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 176

state 106

    (119) exp -> SQRT PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 177

state 107

    (120) exp -> PARSE PARIZQ . typeDef COMA exp PARDER
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 178

state 108

    (121) exp -> TRUNC PARIZQ . typeDef COMA exp PARDER
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 184

state 109

    (122) exp -> MFLOAT PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 185

state 110

    (123) exp -> MSTRING PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 186

state 111

    (124) exp -> TYPEOF PARIZQ . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 187

state 112

    (139) exp -> ID listArray .
    (141) listArray -> listArray . CORIZQ exp CORDER

    END             reduce using rule 139 (exp -> ID listArray .)
    MAS             reduce using rule 139 (exp -> ID listArray .)
    MENOS           reduce using rule 139 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 139 (exp -> ID listArray .)
    DIVISION        reduce using rule 139 (exp -> ID listArray .)
    POTENCIA        reduce using rule 139 (exp -> ID listArray .)
    MODULO          reduce using rule 139 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 139 (exp -> ID listArray .)
    DISTINTO        reduce using rule 139 (exp -> ID listArray .)
    MAYOR           reduce using rule 139 (exp -> ID listArray .)
    MENOR           reduce using rule 139 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 139 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 139 (exp -> ID listArray .)
    ANDD            reduce using rule 139 (exp -> ID listArray .)
    ORR             reduce using rule 139 (exp -> ID listArray .)
    PRINT           reduce using rule 139 (exp -> ID listArray .)
    PRINTLN         reduce using rule 139 (exp -> ID listArray .)
    ID              reduce using rule 139 (exp -> ID listArray .)
    GLOBAL          reduce using rule 139 (exp -> ID listArray .)
    LOCAL           reduce using rule 139 (exp -> ID listArray .)
    RIF             reduce using rule 139 (exp -> ID listArray .)
    RWHILE          reduce using rule 139 (exp -> ID listArray .)
    PARDER          reduce using rule 139 (exp -> ID listArray .)
    COMA            reduce using rule 139 (exp -> ID listArray .)
    PTCOMA          reduce using rule 139 (exp -> ID listArray .)
    DOSPT           reduce using rule 139 (exp -> ID listArray .)
    CORDER          reduce using rule 139 (exp -> ID listArray .)
    RELSE           reduce using rule 139 (exp -> ID listArray .)
    RELSEIF         reduce using rule 139 (exp -> ID listArray .)
    CORIZQ          shift and go to state 188


state 113

    (142) listArray -> CORIZQ . exp CORDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 189

state 114

    (140) exp -> CORIZQ listValues . CORDER
    (65) listValues -> listValues . COMA exp

    CORDER          shift and go to state 190
    COMA            shift and go to state 135


state 115

    (89) whileSt -> RWHILE exp blockc .

    PRINT           reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    PRINTLN         reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    ID              reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    GLOBAL          reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    LOCAL           reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    FUNCTION        reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    RIF             reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    RWHILE          reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    $end            reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    END             reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    RELSE           reduce using rule 89 (whileSt -> RWHILE exp blockc .)
    RELSEIF         reduce using rule 89 (whileSt -> RWHILE exp blockc .)


state 116

    (92) blockc -> instructionsc . END PTCOMA
    (6) instructionsc -> instructionsc . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 191
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    instructionc                   shift and go to state 192
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 117

    (93) blockc -> END . PTCOMA

    PTCOMA          shift and go to state 193


state 118

    (7) instructionsc -> instructionc .

    END             reduce using rule 7 (instructionsc -> instructionc .)
    PRINT           reduce using rule 7 (instructionsc -> instructionc .)
    PRINTLN         reduce using rule 7 (instructionsc -> instructionc .)
    ID              reduce using rule 7 (instructionsc -> instructionc .)
    LOCAL           reduce using rule 7 (instructionsc -> instructionc .)
    GLOBAL          reduce using rule 7 (instructionsc -> instructionc .)
    RIF             reduce using rule 7 (instructionsc -> instructionc .)
    RWHILE          reduce using rule 7 (instructionsc -> instructionc .)
    RELSE           reduce using rule 7 (instructionsc -> instructionc .)
    RELSEIF         reduce using rule 7 (instructionsc -> instructionc .)


state 119

    (21) instructionc -> p_print .

    END             reduce using rule 21 (instructionc -> p_print .)
    PRINT           reduce using rule 21 (instructionc -> p_print .)
    PRINTLN         reduce using rule 21 (instructionc -> p_print .)
    ID              reduce using rule 21 (instructionc -> p_print .)
    LOCAL           reduce using rule 21 (instructionc -> p_print .)
    GLOBAL          reduce using rule 21 (instructionc -> p_print .)
    RIF             reduce using rule 21 (instructionc -> p_print .)
    RWHILE          reduce using rule 21 (instructionc -> p_print .)
    RELSE           reduce using rule 21 (instructionc -> p_print .)
    RELSEIF         reduce using rule 21 (instructionc -> p_print .)


state 120

    (22) instructionc -> p_println .

    END             reduce using rule 22 (instructionc -> p_println .)
    PRINT           reduce using rule 22 (instructionc -> p_println .)
    PRINTLN         reduce using rule 22 (instructionc -> p_println .)
    ID              reduce using rule 22 (instructionc -> p_println .)
    LOCAL           reduce using rule 22 (instructionc -> p_println .)
    GLOBAL          reduce using rule 22 (instructionc -> p_println .)
    RIF             reduce using rule 22 (instructionc -> p_println .)
    RWHILE          reduce using rule 22 (instructionc -> p_println .)
    RELSE           reduce using rule 22 (instructionc -> p_println .)
    RELSEIF         reduce using rule 22 (instructionc -> p_println .)


state 121

    (23) instructionc -> declarationc .

    END             reduce using rule 23 (instructionc -> declarationc .)
    PRINT           reduce using rule 23 (instructionc -> declarationc .)
    PRINTLN         reduce using rule 23 (instructionc -> declarationc .)
    ID              reduce using rule 23 (instructionc -> declarationc .)
    LOCAL           reduce using rule 23 (instructionc -> declarationc .)
    GLOBAL          reduce using rule 23 (instructionc -> declarationc .)
    RIF             reduce using rule 23 (instructionc -> declarationc .)
    RWHILE          reduce using rule 23 (instructionc -> declarationc .)
    RELSE           reduce using rule 23 (instructionc -> declarationc .)
    RELSEIF         reduce using rule 23 (instructionc -> declarationc .)


state 122

    (24) instructionc -> callFuncSt .

    END             reduce using rule 24 (instructionc -> callFuncSt .)
    PRINT           reduce using rule 24 (instructionc -> callFuncSt .)
    PRINTLN         reduce using rule 24 (instructionc -> callFuncSt .)
    ID              reduce using rule 24 (instructionc -> callFuncSt .)
    LOCAL           reduce using rule 24 (instructionc -> callFuncSt .)
    GLOBAL          reduce using rule 24 (instructionc -> callFuncSt .)
    RIF             reduce using rule 24 (instructionc -> callFuncSt .)
    RWHILE          reduce using rule 24 (instructionc -> callFuncSt .)
    RELSE           reduce using rule 24 (instructionc -> callFuncSt .)
    RELSEIF         reduce using rule 24 (instructionc -> callFuncSt .)


state 123

    (25) instructionc -> ifStc .

    END             reduce using rule 25 (instructionc -> ifStc .)
    PRINT           reduce using rule 25 (instructionc -> ifStc .)
    PRINTLN         reduce using rule 25 (instructionc -> ifStc .)
    ID              reduce using rule 25 (instructionc -> ifStc .)
    LOCAL           reduce using rule 25 (instructionc -> ifStc .)
    GLOBAL          reduce using rule 25 (instructionc -> ifStc .)
    RIF             reduce using rule 25 (instructionc -> ifStc .)
    RWHILE          reduce using rule 25 (instructionc -> ifStc .)
    RELSE           reduce using rule 25 (instructionc -> ifStc .)
    RELSEIF         reduce using rule 25 (instructionc -> ifStc .)


state 124

    (26) instructionc -> whileSt .

    END             reduce using rule 26 (instructionc -> whileSt .)
    PRINT           reduce using rule 26 (instructionc -> whileSt .)
    PRINTLN         reduce using rule 26 (instructionc -> whileSt .)
    ID              reduce using rule 26 (instructionc -> whileSt .)
    LOCAL           reduce using rule 26 (instructionc -> whileSt .)
    GLOBAL          reduce using rule 26 (instructionc -> whileSt .)
    RIF             reduce using rule 26 (instructionc -> whileSt .)
    RWHILE          reduce using rule 26 (instructionc -> whileSt .)
    RELSE           reduce using rule 26 (instructionc -> whileSt .)
    RELSEIF         reduce using rule 26 (instructionc -> whileSt .)


state 125

    (47) declarationc -> ID . IGUAL exp PTCOMA
    (48) declarationc -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (62) callFuncSt -> ID . parametersCallFunc PTCOMA
    (63) parametersCallFunc -> . PARIZQ listValues PARDER
    (64) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 194
    PARIZQ          shift and go to state 24

    parametersCallFunc             shift and go to state 23

state 126

    (49) declarationc -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> LOCAL . ID IGUAL exp PTCOMA
    (51) declarationc -> LOCAL . ID PTCOMA

    ID              shift and go to state 195


state 127

    (52) declarationc -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> GLOBAL . ID IGUAL exp PTCOMA
    (54) declarationc -> GLOBAL . ID PTCOMA

    ID              shift and go to state 196


state 128

    (78) ifStc -> RIF . exp END PTCOMA
    (79) ifStc -> RIF . exp blockifc END PTCOMA
    (80) ifStc -> RIF . exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> RIF . exp blockifc RELSE END PTCOMA
    (82) ifStc -> RIF . exp blockifc elseifStc END PTCOMA
    (83) ifStc -> RIF . exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> RIF . exp blockifc elseifStc RELSE END PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 197

state 129

    (27) p_print -> PRINT PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 198


state 130

    (29) exps -> exps COMA . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 199

state 131

    (28) p_println -> PRINTLN PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 200


state 132

    (31) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 31 (declaration -> ID IGUAL exp PTCOMA .)


state 133

    (32) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 201


state 134

    (63) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 63 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 135

    (65) listValues -> listValues COMA . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 202

state 136

    (33) declaration -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (34) declaration -> GLOBAL ID IGUAL exp . PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 203
    PTCOMA          shift and go to state 204
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 137

    (36) declaration -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> LOCAL ID IGUAL exp . PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 205
    PTCOMA          shift and go to state 206
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 138

    (55) function -> FUNCTION ID parametersFunc blockf .

    PRINT           reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    PRINTLN         reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    ID              reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    GLOBAL          reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    LOCAL           reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    FUNCTION        reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    RIF             reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    RWHILE          reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)
    $end            reduce using rule 55 (function -> FUNCTION ID parametersFunc blockf .)


state 139

    (90) blockf -> instructionsf . END PTCOMA
    (4) instructionsf -> instructionsf . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 207
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    instructionf                   shift and go to state 165
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 140

    (91) blockf -> END . PTCOMA

    PTCOMA          shift and go to state 208


state 141

    (56) parametersFunc -> PARIZQ parameters . PARDER
    (58) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 209
    COMA            shift and go to state 210


state 142

    (57) parametersFunc -> PARIZQ PARDER .

    END             reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 57 (parametersFunc -> PARIZQ PARDER .)


state 143

    (59) parameters -> parameter .

    PARDER          reduce using rule 59 (parameters -> parameter .)
    COMA            reduce using rule 59 (parameters -> parameter .)


state 144

    (60) parameter -> ID . DOSPT DOSPT typeDef
    (61) parameter -> ID .

    DOSPT           shift and go to state 211
    PARDER          reduce using rule 61 (parameter -> ID .)
    COMA            reduce using rule 61 (parameter -> ID .)


state 145

    (67) ifSt -> RIF exp END PTCOMA .

    PRINT           reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    ID              reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    FUNCTION        reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    RIF             reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    $end            reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    END             reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 67 (ifSt -> RIF exp END PTCOMA .)


state 146

    (68) ifSt -> RIF exp blockiff END . PTCOMA

    PTCOMA          shift and go to state 212


state 147

    (69) ifSt -> RIF exp blockiff RELSE . blockiff END PTCOMA
    (70) ifSt -> RIF exp blockiff RELSE . END PTCOMA
    (94) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 214
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 213
    instructionsf                  shift and go to state 85
    instructionf                   shift and go to state 86
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 148

    (71) ifSt -> RIF exp blockiff elseifSt . END PTCOMA
    (72) ifSt -> RIF exp blockiff elseifSt . RELSE blockiff END PTCOMA
    (73) ifSt -> RIF exp blockiff elseifSt . RELSE END PTCOMA
    (74) elseifSt -> elseifSt . conelseif
    (76) conelseif -> . RELSEIF exp blockiff
    (77) conelseif -> . RELSEIF exp

    END             shift and go to state 215
    RELSE           shift and go to state 216
    RELSEIF         shift and go to state 150

    conelseif                      shift and go to state 217

state 149

    (75) elseifSt -> conelseif .

    END             reduce using rule 75 (elseifSt -> conelseif .)
    RELSE           reduce using rule 75 (elseifSt -> conelseif .)
    RELSEIF         reduce using rule 75 (elseifSt -> conelseif .)


state 150

    (76) conelseif -> RELSEIF . exp blockiff
    (77) conelseif -> RELSEIF . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 218

state 151

    (96) exp -> exp MAS exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 96 (exp -> exp MAS exp .)
    MAS             reduce using rule 96 (exp -> exp MAS exp .)
    MENOS           reduce using rule 96 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 96 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 96 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 96 (exp -> exp MAS exp .)
    MENOR           reduce using rule 96 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 96 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 96 (exp -> exp MAS exp .)
    ANDD            reduce using rule 96 (exp -> exp MAS exp .)
    ORR             reduce using rule 96 (exp -> exp MAS exp .)
    PRINT           reduce using rule 96 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 96 (exp -> exp MAS exp .)
    ID              reduce using rule 96 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 96 (exp -> exp MAS exp .)
    LOCAL           reduce using rule 96 (exp -> exp MAS exp .)
    RIF             reduce using rule 96 (exp -> exp MAS exp .)
    RWHILE          reduce using rule 96 (exp -> exp MAS exp .)
    PARDER          reduce using rule 96 (exp -> exp MAS exp .)
    COMA            reduce using rule 96 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 96 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 96 (exp -> exp MAS exp .)
    CORDER          reduce using rule 96 (exp -> exp MAS exp .)
    RELSE           reduce using rule 96 (exp -> exp MAS exp .)
    RELSEIF         reduce using rule 96 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MULTIPLICACION  [ reduce using rule 96 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 96 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 96 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 96 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 152

    (97) exp -> exp MENOS exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 97 (exp -> exp MENOS exp .)
    MAS             reduce using rule 97 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 97 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 97 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 97 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 97 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 97 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 97 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 97 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 97 (exp -> exp MENOS exp .)
    ORR             reduce using rule 97 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 97 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 97 (exp -> exp MENOS exp .)
    ID              reduce using rule 97 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 97 (exp -> exp MENOS exp .)
    LOCAL           reduce using rule 97 (exp -> exp MENOS exp .)
    RIF             reduce using rule 97 (exp -> exp MENOS exp .)
    RWHILE          reduce using rule 97 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 97 (exp -> exp MENOS exp .)
    COMA            reduce using rule 97 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 97 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 97 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 97 (exp -> exp MENOS exp .)
    RELSE           reduce using rule 97 (exp -> exp MENOS exp .)
    RELSEIF         reduce using rule 97 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MULTIPLICACION  [ reduce using rule 97 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 97 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 97 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 97 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 153

    (98) exp -> exp MULTIPLICACION exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    PRINTLN         reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    ID              reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    GLOBAL          reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    LOCAL           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    RIF             reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    RWHILE          reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    RELSE           reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    RELSEIF         reduce using rule 98 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 75

  ! POTENCIA        [ reduce using rule 98 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MULTIPLICACION  [ shift and go to state 73 ]
  ! DIVISION        [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 154

    (99) exp -> exp DIVISION exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 99 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 99 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 99 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 99 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 99 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 99 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 99 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 99 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 99 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 99 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 99 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 99 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 99 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 99 (exp -> exp DIVISION exp .)
    PRINT           reduce using rule 99 (exp -> exp DIVISION exp .)
    PRINTLN         reduce using rule 99 (exp -> exp DIVISION exp .)
    ID              reduce using rule 99 (exp -> exp DIVISION exp .)
    GLOBAL          reduce using rule 99 (exp -> exp DIVISION exp .)
    LOCAL           reduce using rule 99 (exp -> exp DIVISION exp .)
    RIF             reduce using rule 99 (exp -> exp DIVISION exp .)
    RWHILE          reduce using rule 99 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 99 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 99 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 99 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 99 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 99 (exp -> exp DIVISION exp .)
    RELSE           reduce using rule 99 (exp -> exp DIVISION exp .)
    RELSEIF         reduce using rule 99 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 75

  ! POTENCIA        [ reduce using rule 99 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MULTIPLICACION  [ shift and go to state 73 ]
  ! DIVISION        [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 155

    (100) exp -> exp POTENCIA exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 100 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 100 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 100 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 100 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 100 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 100 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 100 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 100 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 100 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 100 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 100 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 100 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 100 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 100 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 100 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 100 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 100 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 100 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 100 (exp -> exp POTENCIA exp .)
    LOCAL           reduce using rule 100 (exp -> exp POTENCIA exp .)
    RIF             reduce using rule 100 (exp -> exp POTENCIA exp .)
    RWHILE          reduce using rule 100 (exp -> exp POTENCIA exp .)
    PARDER          reduce using rule 100 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 100 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 100 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 100 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 100 (exp -> exp POTENCIA exp .)
    RELSE           reduce using rule 100 (exp -> exp POTENCIA exp .)
    RELSEIF         reduce using rule 100 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MULTIPLICACION  [ shift and go to state 73 ]
  ! DIVISION        [ shift and go to state 74 ]
  ! POTENCIA        [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 156

    (101) exp -> exp MODULO exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 101 (exp -> exp MODULO exp .)
    MAS             reduce using rule 101 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 101 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 101 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 101 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 101 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 101 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 101 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 101 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 101 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 101 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 101 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 101 (exp -> exp MODULO exp .)
    ORR             reduce using rule 101 (exp -> exp MODULO exp .)
    PRINT           reduce using rule 101 (exp -> exp MODULO exp .)
    PRINTLN         reduce using rule 101 (exp -> exp MODULO exp .)
    ID              reduce using rule 101 (exp -> exp MODULO exp .)
    GLOBAL          reduce using rule 101 (exp -> exp MODULO exp .)
    LOCAL           reduce using rule 101 (exp -> exp MODULO exp .)
    RIF             reduce using rule 101 (exp -> exp MODULO exp .)
    RWHILE          reduce using rule 101 (exp -> exp MODULO exp .)
    PARDER          reduce using rule 101 (exp -> exp MODULO exp .)
    COMA            reduce using rule 101 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 101 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 101 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 101 (exp -> exp MODULO exp .)
    RELSE           reduce using rule 101 (exp -> exp MODULO exp .)
    RELSEIF         reduce using rule 101 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 75

  ! POTENCIA        [ reduce using rule 101 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! MULTIPLICACION  [ shift and go to state 73 ]
  ! DIVISION        [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 157

    (103) exp -> exp IGUALIGUAL exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    ANDD            reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    ORR             reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    PRINT           reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    PRINTLN         reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    ID              reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    GLOBAL          reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    LOCAL           reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    RIF             reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    RWHILE          reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    RELSE           reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    RELSEIF         reduce using rule 103 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 103 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 103 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 103 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 103 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 103 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 103 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 158

    (104) exp -> exp DISTINTO exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 104 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 104 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 104 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 104 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 104 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 104 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 104 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 104 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 104 (exp -> exp DISTINTO exp .)
    PRINT           reduce using rule 104 (exp -> exp DISTINTO exp .)
    PRINTLN         reduce using rule 104 (exp -> exp DISTINTO exp .)
    ID              reduce using rule 104 (exp -> exp DISTINTO exp .)
    GLOBAL          reduce using rule 104 (exp -> exp DISTINTO exp .)
    LOCAL           reduce using rule 104 (exp -> exp DISTINTO exp .)
    RIF             reduce using rule 104 (exp -> exp DISTINTO exp .)
    RWHILE          reduce using rule 104 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 104 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 104 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 104 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 104 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 104 (exp -> exp DISTINTO exp .)
    RELSE           reduce using rule 104 (exp -> exp DISTINTO exp .)
    RELSEIF         reduce using rule 104 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 104 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 104 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 104 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 104 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 104 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 104 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 159

    (105) exp -> exp MAYOR exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 105 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 105 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 105 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 105 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 105 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 105 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 105 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 105 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 105 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 105 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 105 (exp -> exp MAYOR exp .)
    ID              reduce using rule 105 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 105 (exp -> exp MAYOR exp .)
    LOCAL           reduce using rule 105 (exp -> exp MAYOR exp .)
    RIF             reduce using rule 105 (exp -> exp MAYOR exp .)
    RWHILE          reduce using rule 105 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 105 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 105 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 105 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 105 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 105 (exp -> exp MAYOR exp .)
    RELSE           reduce using rule 105 (exp -> exp MAYOR exp .)
    RELSEIF         reduce using rule 105 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 105 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 105 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 105 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 105 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 105 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 105 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 160

    (106) exp -> exp MENOR exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 106 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 106 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 106 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 106 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 106 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 106 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 106 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 106 (exp -> exp MENOR exp .)
    ORR             reduce using rule 106 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 106 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 106 (exp -> exp MENOR exp .)
    ID              reduce using rule 106 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 106 (exp -> exp MENOR exp .)
    LOCAL           reduce using rule 106 (exp -> exp MENOR exp .)
    RIF             reduce using rule 106 (exp -> exp MENOR exp .)
    RWHILE          reduce using rule 106 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 106 (exp -> exp MENOR exp .)
    COMA            reduce using rule 106 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 106 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 106 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 106 (exp -> exp MENOR exp .)
    RELSE           reduce using rule 106 (exp -> exp MENOR exp .)
    RELSEIF         reduce using rule 106 (exp -> exp MENOR exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 106 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 106 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 106 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 106 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 106 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 106 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 161

    (107) exp -> exp MAYORIGUAL exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    LOCAL           reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    RIF             reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    RWHILE          reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    RELSE           reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    RELSEIF         reduce using rule 107 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 107 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 107 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 107 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 107 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 107 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 107 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 162

    (108) exp -> exp MENORIGUAL exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    LOCAL           reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    RIF             reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    RWHILE          reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    RELSE           reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    RELSEIF         reduce using rule 108 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 108 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 108 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 108 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 108 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 108 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 108 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 77 ]
  ! DISTINTO        [ shift and go to state 78 ]
  ! MAYOR           [ shift and go to state 79 ]
  ! MENOR           [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 163

    (109) exp -> exp ANDD exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 109 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 109 (exp -> exp ANDD exp .)
    PRINT           reduce using rule 109 (exp -> exp ANDD exp .)
    PRINTLN         reduce using rule 109 (exp -> exp ANDD exp .)
    ID              reduce using rule 109 (exp -> exp ANDD exp .)
    GLOBAL          reduce using rule 109 (exp -> exp ANDD exp .)
    LOCAL           reduce using rule 109 (exp -> exp ANDD exp .)
    RIF             reduce using rule 109 (exp -> exp ANDD exp .)
    RWHILE          reduce using rule 109 (exp -> exp ANDD exp .)
    PARDER          reduce using rule 109 (exp -> exp ANDD exp .)
    COMA            reduce using rule 109 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 109 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 109 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 109 (exp -> exp ANDD exp .)
    RELSE           reduce using rule 109 (exp -> exp ANDD exp .)
    RELSEIF         reduce using rule 109 (exp -> exp ANDD exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ORR             shift and go to state 84

  ! MAS             [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 109 (exp -> exp ANDD exp .) ]
  ! ANDD            [ shift and go to state 83 ]


state 164

    (110) exp -> exp ORR exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    END             reduce using rule 110 (exp -> exp ORR exp .)
    ANDD            reduce using rule 110 (exp -> exp ORR exp .)
    ORR             reduce using rule 110 (exp -> exp ORR exp .)
    PRINT           reduce using rule 110 (exp -> exp ORR exp .)
    PRINTLN         reduce using rule 110 (exp -> exp ORR exp .)
    ID              reduce using rule 110 (exp -> exp ORR exp .)
    GLOBAL          reduce using rule 110 (exp -> exp ORR exp .)
    LOCAL           reduce using rule 110 (exp -> exp ORR exp .)
    RIF             reduce using rule 110 (exp -> exp ORR exp .)
    RWHILE          reduce using rule 110 (exp -> exp ORR exp .)
    PARDER          reduce using rule 110 (exp -> exp ORR exp .)
    COMA            reduce using rule 110 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 110 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 110 (exp -> exp ORR exp .)
    CORDER          reduce using rule 110 (exp -> exp ORR exp .)
    RELSE           reduce using rule 110 (exp -> exp ORR exp .)
    RELSEIF         reduce using rule 110 (exp -> exp ORR exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82

  ! MAS             [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 110 (exp -> exp ORR exp .) ]
  ! ANDD            [ shift and go to state 83 ]
  ! ORR             [ shift and go to state 84 ]


state 165

    (4) instructionsf -> instructionsf instructionf .

    PRINT           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    PRINTLN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    ID              reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    GLOBAL          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    LOCAL           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RIF             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RWHILE          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    END             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSE           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSEIF         reduce using rule 4 (instructionsf -> instructionsf instructionf .)


state 166

    (39) declarationf -> ID IGUAL . exp PTCOMA
    (40) declarationf -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 219

state 167

    (41) declarationf -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> GLOBAL ID . IGUAL exp PTCOMA
    (43) declarationf -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 220
    PTCOMA          shift and go to state 221


state 168

    (44) declarationf -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> LOCAL ID . IGUAL exp PTCOMA
    (46) declarationf -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 222
    PTCOMA          shift and go to state 223


state 169

    (112) exp -> UPPERCASE PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 224
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 170

    (130) exp -> PARIZQ exp PARDER .

    END             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PRINT           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    ID              reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    LOCAL           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RIF             reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RWHILE          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PARDER          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RELSE           reduce using rule 130 (exp -> PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 130 (exp -> PARIZQ exp PARDER .)


state 171

    (113) exp -> LOWERCASE PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 225
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 172

    (114) exp -> LOG PARIZQ exp . COMA exp PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    COMA            shift and go to state 226
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 173

    (115) exp -> LOG10 PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 227
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 174

    (116) exp -> SIN PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 228
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 175

    (117) exp -> COS PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 229
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 176

    (118) exp -> TAN PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 230
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 177

    (119) exp -> SQRT PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 231
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 178

    (120) exp -> PARSE PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 232


state 179

    (125) typeDef -> RINT .

    COMA            reduce using rule 125 (typeDef -> RINT .)
    PTCOMA          reduce using rule 125 (typeDef -> RINT .)
    PARDER          reduce using rule 125 (typeDef -> RINT .)


state 180

    (126) typeDef -> RFLOAT .

    COMA            reduce using rule 126 (typeDef -> RFLOAT .)
    PTCOMA          reduce using rule 126 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 126 (typeDef -> RFLOAT .)


state 181

    (127) typeDef -> RSTRING .

    COMA            reduce using rule 127 (typeDef -> RSTRING .)
    PTCOMA          reduce using rule 127 (typeDef -> RSTRING .)
    PARDER          reduce using rule 127 (typeDef -> RSTRING .)


state 182

    (128) typeDef -> RCHAR .

    COMA            reduce using rule 128 (typeDef -> RCHAR .)
    PTCOMA          reduce using rule 128 (typeDef -> RCHAR .)
    PARDER          reduce using rule 128 (typeDef -> RCHAR .)


state 183

    (129) typeDef -> RBOOL .

    COMA            reduce using rule 129 (typeDef -> RBOOL .)
    PTCOMA          reduce using rule 129 (typeDef -> RBOOL .)
    PARDER          reduce using rule 129 (typeDef -> RBOOL .)


state 184

    (121) exp -> TRUNC PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 233


state 185

    (122) exp -> MFLOAT PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 234
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 186

    (123) exp -> MSTRING PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 235
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 187

    (124) exp -> TYPEOF PARIZQ exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 236
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 188

    (141) listArray -> listArray CORIZQ . exp CORDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 237

state 189

    (142) listArray -> CORIZQ exp . CORDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    CORDER          shift and go to state 238
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 190

    (140) exp -> CORIZQ listValues CORDER .

    END             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PRINT           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PRINTLN         reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    ID              reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    GLOBAL          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    LOCAL           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RIF             reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RWHILE          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PARDER          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    DOSPT           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RELSE           reduce using rule 140 (exp -> CORIZQ listValues CORDER .)
    RELSEIF         reduce using rule 140 (exp -> CORIZQ listValues CORDER .)


state 191

    (92) blockc -> instructionsc END . PTCOMA

    PTCOMA          shift and go to state 239


state 192

    (6) instructionsc -> instructionsc instructionc .

    END             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINT           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINTLN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    ID              reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    LOCAL           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    GLOBAL          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RIF             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RWHILE          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSE           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSEIF         reduce using rule 6 (instructionsc -> instructionsc instructionc .)


state 193

    (93) blockc -> END PTCOMA .

    PRINT           reduce using rule 93 (blockc -> END PTCOMA .)
    PRINTLN         reduce using rule 93 (blockc -> END PTCOMA .)
    ID              reduce using rule 93 (blockc -> END PTCOMA .)
    GLOBAL          reduce using rule 93 (blockc -> END PTCOMA .)
    LOCAL           reduce using rule 93 (blockc -> END PTCOMA .)
    FUNCTION        reduce using rule 93 (blockc -> END PTCOMA .)
    RIF             reduce using rule 93 (blockc -> END PTCOMA .)
    RWHILE          reduce using rule 93 (blockc -> END PTCOMA .)
    $end            reduce using rule 93 (blockc -> END PTCOMA .)
    END             reduce using rule 93 (blockc -> END PTCOMA .)
    RELSE           reduce using rule 93 (blockc -> END PTCOMA .)
    RELSEIF         reduce using rule 93 (blockc -> END PTCOMA .)


state 194

    (47) declarationc -> ID IGUAL . exp PTCOMA
    (48) declarationc -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 240

state 195

    (49) declarationc -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> LOCAL ID . IGUAL exp PTCOMA
    (51) declarationc -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 241
    PTCOMA          shift and go to state 242


state 196

    (52) declarationc -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> GLOBAL ID . IGUAL exp PTCOMA
    (54) declarationc -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 243
    PTCOMA          shift and go to state 244


state 197

    (78) ifStc -> RIF exp . END PTCOMA
    (79) ifStc -> RIF exp . blockifc END PTCOMA
    (80) ifStc -> RIF exp . blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> RIF exp . blockifc RELSE END PTCOMA
    (82) ifStc -> RIF exp . blockifc elseifStc END PTCOMA
    (83) ifStc -> RIF exp . blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> RIF exp . blockifc elseifStc RELSE END PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (95) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 245
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 246
    instructionsc                  shift and go to state 247
    instructionc                   shift and go to state 118
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 198

    (27) p_print -> PRINT PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 27 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)


state 199

    (29) exps -> exps COMA exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          reduce using rule 29 (exps -> exps COMA exp .)
    COMA            reduce using rule 29 (exps -> exps COMA exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 200

    (28) p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 28 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)


state 201

    (32) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 248

state 202

    (65) listValues -> listValues COMA exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          reduce using rule 65 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 65 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 65 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 203

    (33) declaration -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 249


state 204

    (34) declaration -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 34 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)


state 205

    (36) declaration -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 250


state 206

    (37) declaration -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 37 (declaration -> LOCAL ID IGUAL exp PTCOMA .)


state 207

    (90) blockf -> instructionsf END . PTCOMA

    PTCOMA          shift and go to state 251


state 208

    (91) blockf -> END PTCOMA .

    PRINT           reduce using rule 91 (blockf -> END PTCOMA .)
    PRINTLN         reduce using rule 91 (blockf -> END PTCOMA .)
    ID              reduce using rule 91 (blockf -> END PTCOMA .)
    GLOBAL          reduce using rule 91 (blockf -> END PTCOMA .)
    LOCAL           reduce using rule 91 (blockf -> END PTCOMA .)
    FUNCTION        reduce using rule 91 (blockf -> END PTCOMA .)
    RIF             reduce using rule 91 (blockf -> END PTCOMA .)
    RWHILE          reduce using rule 91 (blockf -> END PTCOMA .)
    $end            reduce using rule 91 (blockf -> END PTCOMA .)


state 209

    (56) parametersFunc -> PARIZQ parameters PARDER .

    END             reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    GLOBAL          reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    LOCAL           reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 56 (parametersFunc -> PARIZQ parameters PARDER .)


state 210

    (58) parameters -> parameters COMA . parameter
    (60) parameter -> . ID DOSPT DOSPT typeDef
    (61) parameter -> . ID

    ID              shift and go to state 144

    parameter                      shift and go to state 252

state 211

    (60) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 253


state 212

    (68) ifSt -> RIF exp blockiff END PTCOMA .

    PRINT           reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    PRINTLN         reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    ID              reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    GLOBAL          reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    LOCAL           reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    FUNCTION        reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    RIF             reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    RWHILE          reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    $end            reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    END             reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSE           reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSEIF         reduce using rule 68 (ifSt -> RIF exp blockiff END PTCOMA .)


state 213

    (69) ifSt -> RIF exp blockiff RELSE blockiff . END PTCOMA

    END             shift and go to state 254


state 214

    (70) ifSt -> RIF exp blockiff RELSE END . PTCOMA

    PTCOMA          shift and go to state 255


state 215

    (71) ifSt -> RIF exp blockiff elseifSt END . PTCOMA

    PTCOMA          shift and go to state 256


state 216

    (72) ifSt -> RIF exp blockiff elseifSt RELSE . blockiff END PTCOMA
    (73) ifSt -> RIF exp blockiff elseifSt RELSE . END PTCOMA
    (94) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 258
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 257
    instructionsf                  shift and go to state 85
    instructionf                   shift and go to state 86
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 217

    (74) elseifSt -> elseifSt conelseif .

    END             reduce using rule 74 (elseifSt -> elseifSt conelseif .)
    RELSE           reduce using rule 74 (elseifSt -> elseifSt conelseif .)
    RELSEIF         reduce using rule 74 (elseifSt -> elseifSt conelseif .)


state 218

    (76) conelseif -> RELSEIF exp . blockiff
    (77) conelseif -> RELSEIF exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (94) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (15) instructionf -> . p_print
    (16) instructionf -> . p_println
    (17) instructionf -> . declarationf
    (18) instructionf -> . callFuncSt
    (19) instructionf -> . ifSt
    (20) instructionf -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (39) declarationf -> . ID IGUAL exp PTCOMA
    (40) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (41) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (43) declarationf -> . GLOBAL ID PTCOMA
    (44) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (46) declarationf -> . LOCAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (67) ifSt -> . RIF exp END PTCOMA
    (68) ifSt -> . RIF exp blockiff END PTCOMA
    (69) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (70) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (71) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (72) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             reduce using rule 77 (conelseif -> RELSEIF exp .)
    RELSE           reduce using rule 77 (conelseif -> RELSEIF exp .)
    RELSEIF         reduce using rule 77 (conelseif -> RELSEIF exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 93
    GLOBAL          shift and go to state 94
    LOCAL           shift and go to state 95
    RIF             shift and go to state 17
    RWHILE          shift and go to state 18

    blockiff                       shift and go to state 259
    instructionsf                  shift and go to state 85
    instructionf                   shift and go to state 86
    p_print                        shift and go to state 87
    p_println                      shift and go to state 88
    declarationf                   shift and go to state 89
    callFuncSt                     shift and go to state 90
    ifSt                           shift and go to state 91
    whileSt                        shift and go to state 92

state 219

    (39) declarationf -> ID IGUAL exp . PTCOMA
    (40) declarationf -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PTCOMA          shift and go to state 260
    DOSPT           shift and go to state 261
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 220

    (41) declarationf -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> GLOBAL ID IGUAL . exp PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 262

state 221

    (43) declarationf -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    END             reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 43 (declarationf -> GLOBAL ID PTCOMA .)


state 222

    (44) declarationf -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> LOCAL ID IGUAL . exp PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 263

state 223

    (46) declarationf -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    ID              reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    END             reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 46 (declarationf -> LOCAL ID PTCOMA .)


state 224

    (112) exp -> UPPERCASE PARIZQ exp PARDER .

    END             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 112 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 225

    (113) exp -> LOWERCASE PARIZQ exp PARDER .

    END             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 113 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 226

    (114) exp -> LOG PARIZQ exp COMA . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 264

state 227

    (115) exp -> LOG10 PARIZQ exp PARDER .

    END             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MAS             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOS           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    DIVISION        reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MODULO          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYOR           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOR           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    ANDD            reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    ORR             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINT           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    ID              reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    LOCAL           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RIF             reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RWHILE          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PARDER          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    COMA            reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    DOSPT           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    CORDER          reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSE           reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 115 (exp -> LOG10 PARIZQ exp PARDER .)


state 228

    (116) exp -> SIN PARIZQ exp PARDER .

    END             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MAS             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MENOS           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MODULO          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MENOR           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    ANDD            reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    ORR             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PRINT           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    ID              reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RIF             reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PARDER          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    COMA            reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    CORDER          reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RELSE           reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 116 (exp -> SIN PARIZQ exp PARDER .)


state 229

    (117) exp -> COS PARIZQ exp PARDER .

    END             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MAS             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MENOS           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    DIVISION        reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MODULO          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MAYOR           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MENOR           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    ANDD            reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    ORR             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PRINT           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    ID              reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    LOCAL           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RIF             reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RWHILE          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PARDER          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    COMA            reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    DOSPT           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    CORDER          reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RELSE           reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 117 (exp -> COS PARIZQ exp PARDER .)


state 230

    (118) exp -> TAN PARIZQ exp PARDER .

    END             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MAS             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MENOS           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MODULO          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MENOR           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    ANDD            reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    ORR             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PRINT           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    ID              reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RIF             reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PARDER          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    COMA            reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    CORDER          reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RELSE           reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 118 (exp -> TAN PARIZQ exp PARDER .)


state 231

    (119) exp -> SQRT PARIZQ exp PARDER .

    END             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MAS             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MENOS           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MODULO          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MENOR           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    ANDD            reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    ORR             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PRINT           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    ID              reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RIF             reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PARDER          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    COMA            reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    CORDER          reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RELSE           reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 119 (exp -> SQRT PARIZQ exp PARDER .)


state 232

    (120) exp -> PARSE PARIZQ typeDef COMA . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 265

state 233

    (121) exp -> TRUNC PARIZQ typeDef COMA . exp PARDER
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 266

state 234

    (122) exp -> MFLOAT PARIZQ exp PARDER .

    END             reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAS             reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOS           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MODULO          reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOR           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    ANDD            reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    ORR             reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINT           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    ID              reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    RIF             reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    PARDER          reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    COMA            reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    CORDER          reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSE           reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 122 (exp -> MFLOAT PARIZQ exp PARDER .)


state 235

    (123) exp -> MSTRING PARIZQ exp PARDER .

    END             reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MAS             reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOS           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    DIVISION        reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MODULO          reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYOR           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOR           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    ANDD            reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    ORR             reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINT           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    ID              reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    LOCAL           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    RIF             reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    RWHILE          reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    PARDER          reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    COMA            reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    DOSPT           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    CORDER          reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSE           reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 123 (exp -> MSTRING PARIZQ exp PARDER .)


state 236

    (124) exp -> TYPEOF PARIZQ exp PARDER .

    END             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAS             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOS           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    DIVISION        reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MODULO          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYOR           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOR           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    ANDD            reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    ORR             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINT           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    ID              reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    LOCAL           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RIF             reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RWHILE          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PARDER          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    COMA            reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    DOSPT           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    CORDER          reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSE           reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 124 (exp -> TYPEOF PARIZQ exp PARDER .)


state 237

    (141) listArray -> listArray CORIZQ exp . CORDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    CORDER          shift and go to state 267
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 238

    (142) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    END             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PRINT           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    ID              reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    LOCAL           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RIF             reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RWHILE          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RELSE           reduce using rule 142 (listArray -> CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 142 (listArray -> CORIZQ exp CORDER .)


state 239

    (92) blockc -> instructionsc END PTCOMA .

    PRINT           reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    PRINTLN         reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    ID              reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    GLOBAL          reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    LOCAL           reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    FUNCTION        reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    RIF             reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    RWHILE          reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    $end            reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    END             reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    RELSE           reduce using rule 92 (blockc -> instructionsc END PTCOMA .)
    RELSEIF         reduce using rule 92 (blockc -> instructionsc END PTCOMA .)


state 240

    (47) declarationc -> ID IGUAL exp . PTCOMA
    (48) declarationc -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PTCOMA          shift and go to state 268
    DOSPT           shift and go to state 269
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 241

    (49) declarationc -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> LOCAL ID IGUAL . exp PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 270

state 242

    (51) declarationc -> LOCAL ID PTCOMA .

    END             reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    PRINT           reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    ID              reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 51 (declarationc -> LOCAL ID PTCOMA .)


state 243

    (52) declarationc -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> GLOBAL ID IGUAL . exp PTCOMA
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 271

state 244

    (54) declarationc -> GLOBAL ID PTCOMA .

    END             reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    PRINT           reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 54 (declarationc -> GLOBAL ID PTCOMA .)


state 245

    (78) ifStc -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 272


state 246

    (79) ifStc -> RIF exp blockifc . END PTCOMA
    (80) ifStc -> RIF exp blockifc . RELSE blockifc END PTCOMA
    (81) ifStc -> RIF exp blockifc . RELSE END PTCOMA
    (82) ifStc -> RIF exp blockifc . elseifStc END PTCOMA
    (83) ifStc -> RIF exp blockifc . elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> RIF exp blockifc . elseifStc RELSE END PTCOMA
    (85) elseifStc -> . elseifStc conelseifc
    (86) elseifStc -> . conelseifc
    (87) conelseifc -> . RELSEIF exp blockifc
    (88) conelseifc -> . RELSEIF exp

    END             shift and go to state 273
    RELSE           shift and go to state 274
    RELSEIF         shift and go to state 277

    elseifStc                      shift and go to state 275
    conelseifc                     shift and go to state 276

state 247

    (95) blockifc -> instructionsc .
    (6) instructionsc -> instructionsc . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             reduce using rule 95 (blockifc -> instructionsc .)
    RELSE           reduce using rule 95 (blockifc -> instructionsc .)
    RELSEIF         reduce using rule 95 (blockifc -> instructionsc .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    instructionc                   shift and go to state 192
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 248

    (32) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 278


state 249

    (33) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 279

state 250

    (36) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 280

state 251

    (90) blockf -> instructionsf END PTCOMA .

    PRINT           reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    PRINTLN         reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    ID              reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    GLOBAL          reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    LOCAL           reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    FUNCTION        reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    RIF             reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    RWHILE          reduce using rule 90 (blockf -> instructionsf END PTCOMA .)
    $end            reduce using rule 90 (blockf -> instructionsf END PTCOMA .)


state 252

    (58) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 58 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 58 (parameters -> parameters COMA parameter .)


state 253

    (60) parameter -> ID DOSPT DOSPT . typeDef
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 281

state 254

    (69) ifSt -> RIF exp blockiff RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 282


state 255

    (70) ifSt -> RIF exp blockiff RELSE END PTCOMA .

    PRINT           reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    PRINTLN         reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    ID              reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    GLOBAL          reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    LOCAL           reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    FUNCTION        reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RIF             reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RWHILE          reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    $end            reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    END             reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSE           reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSEIF         reduce using rule 70 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)


state 256

    (71) ifSt -> RIF exp blockiff elseifSt END PTCOMA .

    PRINT           reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    PRINTLN         reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    ID              reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    GLOBAL          reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    LOCAL           reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    FUNCTION        reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RIF             reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RWHILE          reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    $end            reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    END             reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSE           reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSEIF         reduce using rule 71 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)


state 257

    (72) ifSt -> RIF exp blockiff elseifSt RELSE blockiff . END PTCOMA

    END             shift and go to state 283


state 258

    (73) ifSt -> RIF exp blockiff elseifSt RELSE END . PTCOMA

    PTCOMA          shift and go to state 284


state 259

    (76) conelseif -> RELSEIF exp blockiff .

    END             reduce using rule 76 (conelseif -> RELSEIF exp blockiff .)
    RELSE           reduce using rule 76 (conelseif -> RELSEIF exp blockiff .)
    RELSEIF         reduce using rule 76 (conelseif -> RELSEIF exp blockiff .)


state 260

    (39) declarationf -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 39 (declarationf -> ID IGUAL exp PTCOMA .)


state 261

    (40) declarationf -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 285


state 262

    (41) declarationf -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (42) declarationf -> GLOBAL ID IGUAL exp . PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 286
    PTCOMA          shift and go to state 287
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 263

    (44) declarationf -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> LOCAL ID IGUAL exp . PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 288
    PTCOMA          shift and go to state 289
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 264

    (114) exp -> LOG PARIZQ exp COMA exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 290
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 265

    (120) exp -> PARSE PARIZQ typeDef COMA exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 291
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 266

    (121) exp -> TRUNC PARIZQ typeDef COMA exp . PARDER
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    PARDER          shift and go to state 292
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 267

    (141) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    END             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PRINT           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    ID              reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    LOCAL           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RIF             reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RWHILE          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RELSE           reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 141 (listArray -> listArray CORIZQ exp CORDER .)


state 268

    (47) declarationc -> ID IGUAL exp PTCOMA .

    END             reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 47 (declarationc -> ID IGUAL exp PTCOMA .)


state 269

    (48) declarationc -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 293


state 270

    (49) declarationc -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> LOCAL ID IGUAL exp . PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 294
    PTCOMA          shift and go to state 295
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 271

    (52) declarationc -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> GLOBAL ID IGUAL exp . PTCOMA
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp

    DOSPT           shift and go to state 296
    PTCOMA          shift and go to state 297
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84


state 272

    (78) ifStc -> RIF exp END PTCOMA .

    END             reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    PRINT           reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    ID              reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    RIF             reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 78 (ifStc -> RIF exp END PTCOMA .)


state 273

    (79) ifStc -> RIF exp blockifc END . PTCOMA

    PTCOMA          shift and go to state 298


state 274

    (80) ifStc -> RIF exp blockifc RELSE . blockifc END PTCOMA
    (81) ifStc -> RIF exp blockifc RELSE . END PTCOMA
    (95) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 300
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 299
    instructionsc                  shift and go to state 247
    instructionc                   shift and go to state 118
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 275

    (82) ifStc -> RIF exp blockifc elseifStc . END PTCOMA
    (83) ifStc -> RIF exp blockifc elseifStc . RELSE blockifc END PTCOMA
    (84) ifStc -> RIF exp blockifc elseifStc . RELSE END PTCOMA
    (85) elseifStc -> elseifStc . conelseifc
    (87) conelseifc -> . RELSEIF exp blockifc
    (88) conelseifc -> . RELSEIF exp

    END             shift and go to state 301
    RELSE           shift and go to state 302
    RELSEIF         shift and go to state 277

    conelseifc                     shift and go to state 303

state 276

    (86) elseifStc -> conelseifc .

    END             reduce using rule 86 (elseifStc -> conelseifc .)
    RELSE           reduce using rule 86 (elseifStc -> conelseifc .)
    RELSEIF         reduce using rule 86 (elseifStc -> conelseifc .)


state 277

    (87) conelseifc -> RELSEIF . exp blockifc
    (88) conelseifc -> RELSEIF . exp
    (96) exp -> . exp MAS exp
    (97) exp -> . exp MENOS exp
    (98) exp -> . exp MULTIPLICACION exp
    (99) exp -> . exp DIVISION exp
    (100) exp -> . exp POTENCIA exp
    (101) exp -> . exp MODULO exp
    (102) exp -> . MENOS exp
    (103) exp -> . exp IGUALIGUAL exp
    (104) exp -> . exp DISTINTO exp
    (105) exp -> . exp MAYOR exp
    (106) exp -> . exp MENOR exp
    (107) exp -> . exp MAYORIGUAL exp
    (108) exp -> . exp MENORIGUAL exp
    (109) exp -> . exp ANDD exp
    (110) exp -> . exp ORR exp
    (111) exp -> . NOTT exp
    (112) exp -> . UPPERCASE PARIZQ exp PARDER
    (113) exp -> . LOWERCASE PARIZQ exp PARDER
    (114) exp -> . LOG PARIZQ exp COMA exp PARDER
    (115) exp -> . LOG10 PARIZQ exp PARDER
    (116) exp -> . SIN PARIZQ exp PARDER
    (117) exp -> . COS PARIZQ exp PARDER
    (118) exp -> . TAN PARIZQ exp PARDER
    (119) exp -> . SQRT PARIZQ exp PARDER
    (120) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (121) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (122) exp -> . MFLOAT PARIZQ exp PARDER
    (123) exp -> . MSTRING PARIZQ exp PARDER
    (124) exp -> . TYPEOF PARIZQ exp PARDER
    (130) exp -> . PARIZQ exp PARDER
    (131) exp -> . ENTERO
    (132) exp -> . DECIMAL
    (133) exp -> . STRING
    (134) exp -> . CHAR
    (135) exp -> . VERDADERO
    (136) exp -> . FALSO
    (137) exp -> . NULO
    (138) exp -> . ID
    (139) exp -> . ID listArray
    (140) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 29
    NOTT            shift and go to state 30
    UPPERCASE       shift and go to state 31
    LOWERCASE       shift and go to state 33
    LOG             shift and go to state 34
    LOG10           shift and go to state 35
    SIN             shift and go to state 36
    COS             shift and go to state 37
    TAN             shift and go to state 38
    SQRT            shift and go to state 39
    PARSE           shift and go to state 40
    TRUNC           shift and go to state 41
    MFLOAT          shift and go to state 42
    MSTRING         shift and go to state 43
    TYPEOF          shift and go to state 44
    PARIZQ          shift and go to state 32
    ENTERO          shift and go to state 45
    DECIMAL         shift and go to state 46
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    VERDADERO       shift and go to state 49
    FALSO           shift and go to state 50
    NULO            shift and go to state 51
    ID              shift and go to state 52
    CORIZQ          shift and go to state 53

    exp                            shift and go to state 304

state 278

    (32) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 32 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 279

    (33) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 305


state 280

    (36) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 306


state 281

    (60) parameter -> ID DOSPT DOSPT typeDef .

    PARDER          reduce using rule 60 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 60 (parameter -> ID DOSPT DOSPT typeDef .)


state 282

    (69) ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    ID              reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    $end            reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    END             reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 69 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)


state 283

    (72) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 307


state 284

    (73) ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .

    PRINT           reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    PRINTLN         reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    ID              reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    GLOBAL          reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    LOCAL           reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    FUNCTION        reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RIF             reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RWHILE          reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    $end            reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    END             reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSE           reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSEIF         reduce using rule 73 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)


state 285

    (40) declarationf -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 308

state 286

    (41) declarationf -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 309


state 287

    (42) declarationf -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 42 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)


state 288

    (44) declarationf -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 310


state 289

    (45) declarationf -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 45 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)


state 290

    (114) exp -> LOG PARIZQ exp COMA exp PARDER .

    END             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    POTENCIA        reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MODULO          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ANDD            reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ORR             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINT           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINTLN         reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ID              reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    GLOBAL          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    LOCAL           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RIF             reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RWHILE          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DOSPT           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    CORDER          reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSE           reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSEIF         reduce using rule 114 (exp -> LOG PARIZQ exp COMA exp PARDER .)


state 291

    (120) exp -> PARSE PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 120 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)


state 292

    (121) exp -> TRUNC PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 121 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)


state 293

    (48) declarationc -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 311

state 294

    (49) declarationc -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 312


state 295

    (50) declarationc -> LOCAL ID IGUAL exp PTCOMA .

    END             reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 50 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)


state 296

    (52) declarationc -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 313


state 297

    (53) declarationc -> GLOBAL ID IGUAL exp PTCOMA .

    END             reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 53 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)


state 298

    (79) ifStc -> RIF exp blockifc END PTCOMA .

    END             reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINT           reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINTLN         reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    ID              reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    LOCAL           reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    GLOBAL          reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    RIF             reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    RWHILE          reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSE           reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSEIF         reduce using rule 79 (ifStc -> RIF exp blockifc END PTCOMA .)


state 299

    (80) ifStc -> RIF exp blockifc RELSE blockifc . END PTCOMA

    END             shift and go to state 314


state 300

    (81) ifStc -> RIF exp blockifc RELSE END . PTCOMA

    PTCOMA          shift and go to state 315


state 301

    (82) ifStc -> RIF exp blockifc elseifStc END . PTCOMA

    PTCOMA          shift and go to state 316


state 302

    (83) ifStc -> RIF exp blockifc elseifStc RELSE . blockifc END PTCOMA
    (84) ifStc -> RIF exp blockifc elseifStc RELSE . END PTCOMA
    (95) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             shift and go to state 318
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 317
    instructionsc                  shift and go to state 247
    instructionc                   shift and go to state 118
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 303

    (85) elseifStc -> elseifStc conelseifc .

    END             reduce using rule 85 (elseifStc -> elseifStc conelseifc .)
    RELSE           reduce using rule 85 (elseifStc -> elseifStc conelseifc .)
    RELSEIF         reduce using rule 85 (elseifStc -> elseifStc conelseifc .)


state 304

    (87) conelseifc -> RELSEIF exp . blockifc
    (88) conelseifc -> RELSEIF exp .
    (96) exp -> exp . MAS exp
    (97) exp -> exp . MENOS exp
    (98) exp -> exp . MULTIPLICACION exp
    (99) exp -> exp . DIVISION exp
    (100) exp -> exp . POTENCIA exp
    (101) exp -> exp . MODULO exp
    (103) exp -> exp . IGUALIGUAL exp
    (104) exp -> exp . DISTINTO exp
    (105) exp -> exp . MAYOR exp
    (106) exp -> exp . MENOR exp
    (107) exp -> exp . MAYORIGUAL exp
    (108) exp -> exp . MENORIGUAL exp
    (109) exp -> exp . ANDD exp
    (110) exp -> exp . ORR exp
    (95) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (21) instructionc -> . p_print
    (22) instructionc -> . p_println
    (23) instructionc -> . declarationc
    (24) instructionc -> . callFuncSt
    (25) instructionc -> . ifStc
    (26) instructionc -> . whileSt
    (27) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (28) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (47) declarationc -> . ID IGUAL exp PTCOMA
    (48) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (50) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (51) declarationc -> . LOCAL ID PTCOMA
    (52) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (54) declarationc -> . GLOBAL ID PTCOMA
    (62) callFuncSt -> . ID parametersCallFunc PTCOMA
    (78) ifStc -> . RIF exp END PTCOMA
    (79) ifStc -> . RIF exp blockifc END PTCOMA
    (80) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (81) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (82) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (83) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (89) whileSt -> . RWHILE exp blockc

    END             reduce using rule 88 (conelseifc -> RELSEIF exp .)
    RELSE           reduce using rule 88 (conelseifc -> RELSEIF exp .)
    RELSEIF         reduce using rule 88 (conelseifc -> RELSEIF exp .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    MULTIPLICACION  shift and go to state 73
    DIVISION        shift and go to state 74
    POTENCIA        shift and go to state 75
    MODULO          shift and go to state 76
    IGUALIGUAL      shift and go to state 77
    DISTINTO        shift and go to state 78
    MAYOR           shift and go to state 79
    MENOR           shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    ANDD            shift and go to state 83
    ORR             shift and go to state 84
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 125
    LOCAL           shift and go to state 126
    GLOBAL          shift and go to state 127
    RIF             shift and go to state 128
    RWHILE          shift and go to state 18

    blockifc                       shift and go to state 319
    instructionsc                  shift and go to state 247
    instructionc                   shift and go to state 118
    p_print                        shift and go to state 119
    p_println                      shift and go to state 120
    declarationc                   shift and go to state 121
    callFuncSt                     shift and go to state 122
    ifStc                          shift and go to state 123
    whileSt                        shift and go to state 124

state 305

    (33) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 33 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 306

    (36) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 36 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 307

    (72) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    ID              reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    $end            reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    END             reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 72 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)


state 308

    (40) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 320


state 309

    (41) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 321

state 310

    (44) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 322

state 311

    (48) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 323


state 312

    (49) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 324

state 313

    (52) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (125) typeDef -> . RINT
    (126) typeDef -> . RFLOAT
    (127) typeDef -> . RSTRING
    (128) typeDef -> . RCHAR
    (129) typeDef -> . RBOOL

    RINT            shift and go to state 179
    RFLOAT          shift and go to state 180
    RSTRING         shift and go to state 181
    RCHAR           shift and go to state 182
    RBOOL           shift and go to state 183

    typeDef                        shift and go to state 325

state 314

    (80) ifStc -> RIF exp blockifc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 326


state 315

    (81) ifStc -> RIF exp blockifc RELSE END PTCOMA .

    END             reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINT           reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    ID              reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    LOCAL           reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RIF             reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RWHILE          reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSE           reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 81 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)


state 316

    (82) ifStc -> RIF exp blockifc elseifStc END PTCOMA .

    END             reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINT           reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINTLN         reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    ID              reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    LOCAL           reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    GLOBAL          reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RIF             reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RWHILE          reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSE           reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSEIF         reduce using rule 82 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)


state 317

    (83) ifStc -> RIF exp blockifc elseifStc RELSE blockifc . END PTCOMA

    END             shift and go to state 327


state 318

    (84) ifStc -> RIF exp blockifc elseifStc RELSE END . PTCOMA

    PTCOMA          shift and go to state 328


state 319

    (87) conelseifc -> RELSEIF exp blockifc .

    END             reduce using rule 87 (conelseifc -> RELSEIF exp blockifc .)
    RELSE           reduce using rule 87 (conelseifc -> RELSEIF exp blockifc .)
    RELSEIF         reduce using rule 87 (conelseifc -> RELSEIF exp blockifc .)


state 320

    (40) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 40 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 321

    (41) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 329


state 322

    (44) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 330


state 323

    (48) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 48 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 324

    (49) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 331


state 325

    (52) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 332


state 326

    (80) ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .

    END             reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 80 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)


state 327

    (83) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 333


state 328

    (84) ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .

    END             reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINT           reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    ID              reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    LOCAL           reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RIF             reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RWHILE          reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSE           reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 84 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)


state 329

    (41) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 41 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 330

    (44) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 44 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 331

    (49) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 49 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 332

    (52) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 52 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 333

    (83) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .

    END             reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 83 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)

