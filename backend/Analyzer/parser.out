Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RBOOLA
    RCHARA
    RFLOATA
    RINTA
    RSTRINGA

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructionsf -> instructionsf instructionf
Rule 5     instructionsf -> instructionf
Rule 6     instructionsc -> instructionsc instructionc
Rule 7     instructionsc -> instructionc
Rule 8     instruction -> p_print
Rule 9     instruction -> p_println
Rule 10    instruction -> declaration
Rule 11    instruction -> function
Rule 12    instruction -> callFuncSt
Rule 13    instruction -> ifSt
Rule 14    instruction -> whileSt
Rule 15    instruction -> forSt
Rule 16    instruction -> returnST
Rule 17    instruction -> breakST
Rule 18    instruction -> continueST
Rule 19    instructionf -> p_print
Rule 20    instructionf -> p_println
Rule 21    instructionf -> declarationf
Rule 22    instructionf -> callFuncSt
Rule 23    instructionf -> ifSt
Rule 24    instructionf -> whileSt
Rule 25    instructionf -> forSt
Rule 26    instructionf -> returnST
Rule 27    instructionf -> breakST
Rule 28    instructionf -> continueST
Rule 29    instructionc -> p_print
Rule 30    instructionc -> p_println
Rule 31    instructionc -> declarationc
Rule 32    instructionc -> callFuncSt
Rule 33    instructionc -> ifStc
Rule 34    instructionc -> whileSt
Rule 35    instructionc -> forSt
Rule 36    instructionc -> returnST
Rule 37    instructionc -> breakST
Rule 38    instructionc -> continueST
Rule 39    p_print -> PRINT PARIZQ exps PARDER PTCOMA
Rule 40    p_println -> PRINTLN PARIZQ exps PARDER PTCOMA
Rule 41    exps -> exps COMA exp
Rule 42    exps -> exp
Rule 43    declaration -> ID IGUAL exp PTCOMA
Rule 44    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 45    declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 46    declaration -> GLOBAL ID IGUAL exp PTCOMA
Rule 47    declaration -> GLOBAL ID PTCOMA
Rule 48    declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 49    declaration -> LOCAL ID IGUAL exp PTCOMA
Rule 50    declaration -> LOCAL ID PTCOMA
Rule 51    declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 52    declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 53    declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 54    declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 55    declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 56    declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 57    declarationf -> ID IGUAL exp PTCOMA
Rule 58    declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 59    declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 60    declarationf -> GLOBAL ID IGUAL exp PTCOMA
Rule 61    declarationf -> GLOBAL ID PTCOMA
Rule 62    declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 63    declarationf -> LOCAL ID IGUAL exp PTCOMA
Rule 64    declarationf -> LOCAL ID PTCOMA
Rule 65    declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 66    declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 67    declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 68    declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 69    declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 70    declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 71    declarationc -> ID IGUAL exp PTCOMA
Rule 72    declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 73    declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 74    declarationc -> LOCAL ID IGUAL exp PTCOMA
Rule 75    declarationc -> LOCAL ID PTCOMA
Rule 76    declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 77    declarationc -> GLOBAL ID IGUAL exp PTCOMA
Rule 78    declarationc -> GLOBAL ID PTCOMA
Rule 79    declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 80    declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 81    declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 82    declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 83    declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
Rule 84    declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
Rule 85    function -> FUNCTION ID parametersFunc blockf
Rule 86    parametersFunc -> PARIZQ parameters PARDER
Rule 87    parametersFunc -> PARIZQ PARDER
Rule 88    parameters -> parameters COMA parameter
Rule 89    parameters -> parameter
Rule 90    parameter -> ID DOSPT DOSPT typeDef
Rule 91    parameter -> ID
Rule 92    callFuncSt -> ID parametersCallFunc PTCOMA
Rule 93    parametersCallFunc -> PARIZQ listValues PARDER
Rule 94    parametersCallFunc -> PARIZQ PARDER
Rule 95    listValues -> listValues COMA exp
Rule 96    listValues -> exp
Rule 97    ifSt -> RIF exp END PTCOMA
Rule 98    ifSt -> RIF exp blockiff END PTCOMA
Rule 99    ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA
Rule 100   ifSt -> RIF exp blockiff RELSE END PTCOMA
Rule 101   ifSt -> RIF exp blockiff elseifSt END PTCOMA
Rule 102   ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
Rule 103   ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA
Rule 104   elseifSt -> elseifSt conelseif
Rule 105   elseifSt -> conelseif
Rule 106   conelseif -> RELSEIF exp blockiff
Rule 107   conelseif -> RELSEIF exp
Rule 108   ifStc -> RIF exp END PTCOMA
Rule 109   ifStc -> RIF exp blockifc END PTCOMA
Rule 110   ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA
Rule 111   ifStc -> RIF exp blockifc RELSE END PTCOMA
Rule 112   ifStc -> RIF exp blockifc elseifStc END PTCOMA
Rule 113   ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
Rule 114   ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA
Rule 115   elseifStc -> elseifStc conelseifc
Rule 116   elseifStc -> conelseifc
Rule 117   conelseifc -> RELSEIF exp blockifc
Rule 118   conelseifc -> RELSEIF exp
Rule 119   whileSt -> RWHILE exp blockc
Rule 120   forSt -> RFOR parameter RIN exp DOSPT exp blockc
Rule 121   forSt -> RFOR parameter RIN exp blockc
Rule 122   blockf -> instructionsf END PTCOMA
Rule 123   blockf -> END PTCOMA
Rule 124   blockc -> instructionsc END PTCOMA
Rule 125   blockc -> END PTCOMA
Rule 126   blockiff -> instructionsf
Rule 127   blockifc -> instructionsc
Rule 128   returnST -> RRETURN exp PTCOMA
Rule 129   returnST -> RRETURN PTCOMA
Rule 130   breakST -> RBREAK PTCOMA
Rule 131   continueST -> RCONTINUE PTCOMA
Rule 132   listArray -> listArray CORIZQ exp CORDER
Rule 133   listArray -> CORIZQ exp CORDER
Rule 134   exp -> exp MAS exp
Rule 135   exp -> exp MENOS exp
Rule 136   exp -> exp MULTIPLICACION exp
Rule 137   exp -> exp DIVISION exp
Rule 138   exp -> exp POTENCIA exp
Rule 139   exp -> exp MODULO exp
Rule 140   exp -> MENOS exp
Rule 141   exp -> exp IGUALIGUAL exp
Rule 142   exp -> exp DISTINTO exp
Rule 143   exp -> exp MAYOR exp
Rule 144   exp -> exp MENOR exp
Rule 145   exp -> exp MAYORIGUAL exp
Rule 146   exp -> exp MENORIGUAL exp
Rule 147   exp -> exp ANDD exp
Rule 148   exp -> exp ORR exp
Rule 149   exp -> NOTT exp
Rule 150   exp -> ID parametersCallFunc
Rule 151   exp -> UPPERCASE PARIZQ exp PARDER
Rule 152   exp -> LOWERCASE PARIZQ exp PARDER
Rule 153   exp -> LOG PARIZQ exp COMA exp PARDER
Rule 154   exp -> LOG10 PARIZQ exp PARDER
Rule 155   exp -> SIN PARIZQ exp PARDER
Rule 156   exp -> COS PARIZQ exp PARDER
Rule 157   exp -> TAN PARIZQ exp PARDER
Rule 158   exp -> SQRT PARIZQ exp PARDER
Rule 159   exp -> PARSE PARIZQ typeDef COMA exp PARDER
Rule 160   exp -> TRUNC PARIZQ typeDef COMA exp PARDER
Rule 161   exp -> TRUNC PARIZQ exp PARDER
Rule 162   exp -> MFLOAT PARIZQ exp PARDER
Rule 163   exp -> MSTRING PARIZQ exp PARDER
Rule 164   exp -> TYPEOF PARIZQ exp PARDER
Rule 165   typeDef -> RINT
Rule 166   typeDef -> RFLOAT
Rule 167   typeDef -> RSTRING
Rule 168   typeDef -> RCHAR
Rule 169   typeDef -> RBOOL
Rule 170   typeDef -> RARRAY LLAIZQ RINT LLADER
Rule 171   typeDef -> RARRAY LLAIZQ RFLOAT LLADER
Rule 172   typeDef -> RARRAY LLAIZQ RSTRING LLADER
Rule 173   typeDef -> RARRAY LLAIZQ RCHAR LLADER
Rule 174   typeDef -> RARRAY LLAIZQ RBOOL LLADER
Rule 175   exp -> PARIZQ exp PARDER
Rule 176   exp -> ENTERO
Rule 177   exp -> DECIMAL
Rule 178   exp -> STRING
Rule 179   exp -> CHAR
Rule 180   exp -> VERDADERO
Rule 181   exp -> FALSO
Rule 182   exp -> NULO
Rule 183   exp -> ID
Rule 184   exp -> ID listArray
Rule 185   exp -> CORIZQ listValues CORDER
Rule 186   exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef
Rule 187   exp -> CORIZQ CORDER

Terminals, with rules where they appear

ANDD                 : 147
CHAR                 : 179
COMA                 : 41 88 95 153 159 160
CORDER               : 51 52 53 54 55 56 65 66 67 68 69 70 79 80 81 82 83 84 132 133 185 186 187
CORIZQ               : 51 52 53 54 55 56 65 66 67 68 69 70 79 80 81 82 83 84 132 133 185 186 187
COS                  : 156
DECIMAL              : 177
DISTINTO             : 142
DIVISION             : 137
DOSPT                : 44 44 45 45 48 48 52 52 53 53 55 55 58 58 59 59 62 62 66 66 67 67 69 69 72 72 73 73 76 76 80 80 81 81 83 83 90 90 120 186 186
END                  : 97 98 99 100 101 102 103 108 109 110 111 112 113 114 122 123 124 125
ENTERO               : 176
FALSO                : 181
FUNCTION             : 85
GLOBAL               : 45 46 47 53 54 59 60 61 67 68 76 77 78 81 82
ID                   : 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 90 91 92 150 183 184
IGUAL                : 43 44 45 46 48 49 51 52 53 54 55 56 57 58 59 60 62 63 65 66 67 68 69 70 71 72 73 74 76 77 79 80 81 82 83 84
IGUALIGUAL           : 141
LLADER               : 170 171 172 173 174
LLAIZQ               : 170 171 172 173 174
LOCAL                : 48 49 50 55 56 62 63 64 69 70 73 74 75 83 84
LOG                  : 153
LOG10                : 154
LOWERCASE            : 152
MAS                  : 134
MAYOR                : 143
MAYORIGUAL           : 145
MENOR                : 144
MENORIGUAL           : 146
MENOS                : 135 140
MFLOAT               : 162
MODULO               : 139
MSTRING              : 163
MULTIPLICACION       : 136
NOTT                 : 149
NULO                 : 182
ORR                  : 148
PARDER               : 39 40 86 87 93 94 151 152 153 154 155 156 157 158 159 160 161 162 163 164 175
PARIZQ               : 39 40 86 87 93 94 151 152 153 154 155 156 157 158 159 160 161 162 163 164 175
PARSE                : 159
POTENCIA             : 138
PRINT                : 39
PRINTLN              : 40
PTCOMA               : 39 40 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 92 97 98 99 100 101 102 103 108 109 110 111 112 113 114 122 123 124 125 128 129 130 131
RARRAY               : 170 171 172 173 174
RBOOL                : 169 174
RBOOLA               : 
RBREAK               : 130
RCHAR                : 168 173
RCHARA               : 
RCONTINUE            : 131
RELSE                : 99 100 102 103 110 111 113 114
RELSEIF              : 106 107 117 118
RFLOAT               : 166 171
RFLOATA              : 
RFOR                 : 120 121
RIF                  : 97 98 99 100 101 102 103 108 109 110 111 112 113 114
RIN                  : 120 121
RINT                 : 165 170
RINTA                : 
RRETURN              : 128 129
RSTRING              : 167 172
RSTRINGA             : 
RWHILE               : 119
SIN                  : 155
SQRT                 : 158
STRING               : 178
TAN                  : 157
TRUNC                : 160 161
TYPEOF               : 164
UPPERCASE            : 151
VERDADERO            : 180
error                : 

Nonterminals, with rules where they appear

blockc               : 119 120 121
blockf               : 85
blockifc             : 109 110 110 111 112 113 113 114 117
blockiff             : 98 99 99 100 101 102 102 103 106
breakST              : 17 27 37
callFuncSt           : 12 22 32
conelseif            : 104 105
conelseifc           : 115 116
continueST           : 18 28 38
declaration          : 10
declarationc         : 31
declarationf         : 21
elseifSt             : 101 102 103 104
elseifStc            : 112 113 114 115
exp                  : 41 42 43 44 45 46 48 49 57 58 59 60 62 63 71 72 73 74 76 77 95 96 97 98 99 100 101 102 103 106 107 108 109 110 111 112 113 114 117 118 119 120 120 121 128 132 133 134 134 135 135 136 136 137 137 138 138 139 139 140 141 141 142 142 143 143 144 144 145 145 146 146 147 147 148 148 149 151 152 153 153 154 155 156 157 158 159 160 161 162 163 164 175
exps                 : 39 40 41 51 52 53 54 55 56 65 66 67 68 69 70 79 80 81 82 83 84
forSt                : 15 25 35
function             : 11
ifSt                 : 13 23
ifStc                : 33
initial              : 0
instruction          : 2 3
instructionc         : 6 7
instructionf         : 4 5
instructions         : 1 2
instructionsc        : 6 124 127
instructionsf        : 4 122 126
listArray            : 132 184
listValues           : 93 95 185 186
p_print              : 8 19 29
p_println            : 9 20 30
parameter            : 88 89 120 121
parameters           : 86 88
parametersCallFunc   : 92 150
parametersFunc       : 85
returnST             : 16 26 36
typeDef              : 44 45 48 52 53 55 58 59 62 66 67 69 72 73 76 80 81 83 90 159 160 186
whileSt              : 14 24 34

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (15) instruction -> . forSt
    (16) instruction -> . returnST
    (17) instruction -> . breakST
    (18) instruction -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (43) declaration -> . ID IGUAL exp PTCOMA
    (44) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (46) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (47) declaration -> . GLOBAL ID PTCOMA
    (48) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (50) declaration -> . LOCAL ID PTCOMA
    (51) declaration -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (52) declaration -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (53) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (55) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) function -> . FUNCTION ID parametersFunc blockf
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 17
    GLOBAL          shift and go to state 18
    LOCAL           shift and go to state 19
    FUNCTION        shift and go to state 20
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10
    forSt                          shift and go to state 11
    returnST                       shift and go to state 12
    breakST                        shift and go to state 13
    continueST                     shift and go to state 14

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (15) instruction -> . forSt
    (16) instruction -> . returnST
    (17) instruction -> . breakST
    (18) instruction -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (43) declaration -> . ID IGUAL exp PTCOMA
    (44) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (46) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (47) declaration -> . GLOBAL ID PTCOMA
    (48) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (50) declaration -> . LOCAL ID PTCOMA
    (51) declaration -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (52) declaration -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (53) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (55) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (85) function -> . FUNCTION ID parametersFunc blockf
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 17
    GLOBAL          shift and go to state 18
    LOCAL           shift and go to state 19
    FUNCTION        shift and go to state 20
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    instruction                    shift and go to state 27
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10
    forSt                          shift and go to state 11
    returnST                       shift and go to state 12
    breakST                        shift and go to state 13
    continueST                     shift and go to state 14

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    GLOBAL          reduce using rule 3 (instructions -> instruction .)
    LOCAL           reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    RFOR            reduce using rule 3 (instructions -> instruction .)
    RRETURN         reduce using rule 3 (instructions -> instruction .)
    RBREAK          reduce using rule 3 (instructions -> instruction .)
    RCONTINUE       reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (8) instruction -> p_print .

    PRINT           reduce using rule 8 (instruction -> p_print .)
    PRINTLN         reduce using rule 8 (instruction -> p_print .)
    ID              reduce using rule 8 (instruction -> p_print .)
    GLOBAL          reduce using rule 8 (instruction -> p_print .)
    LOCAL           reduce using rule 8 (instruction -> p_print .)
    FUNCTION        reduce using rule 8 (instruction -> p_print .)
    RIF             reduce using rule 8 (instruction -> p_print .)
    RWHILE          reduce using rule 8 (instruction -> p_print .)
    RFOR            reduce using rule 8 (instruction -> p_print .)
    RRETURN         reduce using rule 8 (instruction -> p_print .)
    RBREAK          reduce using rule 8 (instruction -> p_print .)
    RCONTINUE       reduce using rule 8 (instruction -> p_print .)
    $end            reduce using rule 8 (instruction -> p_print .)


state 5

    (9) instruction -> p_println .

    PRINT           reduce using rule 9 (instruction -> p_println .)
    PRINTLN         reduce using rule 9 (instruction -> p_println .)
    ID              reduce using rule 9 (instruction -> p_println .)
    GLOBAL          reduce using rule 9 (instruction -> p_println .)
    LOCAL           reduce using rule 9 (instruction -> p_println .)
    FUNCTION        reduce using rule 9 (instruction -> p_println .)
    RIF             reduce using rule 9 (instruction -> p_println .)
    RWHILE          reduce using rule 9 (instruction -> p_println .)
    RFOR            reduce using rule 9 (instruction -> p_println .)
    RRETURN         reduce using rule 9 (instruction -> p_println .)
    RBREAK          reduce using rule 9 (instruction -> p_println .)
    RCONTINUE       reduce using rule 9 (instruction -> p_println .)
    $end            reduce using rule 9 (instruction -> p_println .)


state 6

    (10) instruction -> declaration .

    PRINT           reduce using rule 10 (instruction -> declaration .)
    PRINTLN         reduce using rule 10 (instruction -> declaration .)
    ID              reduce using rule 10 (instruction -> declaration .)
    GLOBAL          reduce using rule 10 (instruction -> declaration .)
    LOCAL           reduce using rule 10 (instruction -> declaration .)
    FUNCTION        reduce using rule 10 (instruction -> declaration .)
    RIF             reduce using rule 10 (instruction -> declaration .)
    RWHILE          reduce using rule 10 (instruction -> declaration .)
    RFOR            reduce using rule 10 (instruction -> declaration .)
    RRETURN         reduce using rule 10 (instruction -> declaration .)
    RBREAK          reduce using rule 10 (instruction -> declaration .)
    RCONTINUE       reduce using rule 10 (instruction -> declaration .)
    $end            reduce using rule 10 (instruction -> declaration .)


state 7

    (11) instruction -> function .

    PRINT           reduce using rule 11 (instruction -> function .)
    PRINTLN         reduce using rule 11 (instruction -> function .)
    ID              reduce using rule 11 (instruction -> function .)
    GLOBAL          reduce using rule 11 (instruction -> function .)
    LOCAL           reduce using rule 11 (instruction -> function .)
    FUNCTION        reduce using rule 11 (instruction -> function .)
    RIF             reduce using rule 11 (instruction -> function .)
    RWHILE          reduce using rule 11 (instruction -> function .)
    RFOR            reduce using rule 11 (instruction -> function .)
    RRETURN         reduce using rule 11 (instruction -> function .)
    RBREAK          reduce using rule 11 (instruction -> function .)
    RCONTINUE       reduce using rule 11 (instruction -> function .)
    $end            reduce using rule 11 (instruction -> function .)


state 8

    (12) instruction -> callFuncSt .

    PRINT           reduce using rule 12 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 12 (instruction -> callFuncSt .)
    ID              reduce using rule 12 (instruction -> callFuncSt .)
    GLOBAL          reduce using rule 12 (instruction -> callFuncSt .)
    LOCAL           reduce using rule 12 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 12 (instruction -> callFuncSt .)
    RIF             reduce using rule 12 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 12 (instruction -> callFuncSt .)
    RFOR            reduce using rule 12 (instruction -> callFuncSt .)
    RRETURN         reduce using rule 12 (instruction -> callFuncSt .)
    RBREAK          reduce using rule 12 (instruction -> callFuncSt .)
    RCONTINUE       reduce using rule 12 (instruction -> callFuncSt .)
    $end            reduce using rule 12 (instruction -> callFuncSt .)


state 9

    (13) instruction -> ifSt .

    PRINT           reduce using rule 13 (instruction -> ifSt .)
    PRINTLN         reduce using rule 13 (instruction -> ifSt .)
    ID              reduce using rule 13 (instruction -> ifSt .)
    GLOBAL          reduce using rule 13 (instruction -> ifSt .)
    LOCAL           reduce using rule 13 (instruction -> ifSt .)
    FUNCTION        reduce using rule 13 (instruction -> ifSt .)
    RIF             reduce using rule 13 (instruction -> ifSt .)
    RWHILE          reduce using rule 13 (instruction -> ifSt .)
    RFOR            reduce using rule 13 (instruction -> ifSt .)
    RRETURN         reduce using rule 13 (instruction -> ifSt .)
    RBREAK          reduce using rule 13 (instruction -> ifSt .)
    RCONTINUE       reduce using rule 13 (instruction -> ifSt .)
    $end            reduce using rule 13 (instruction -> ifSt .)


state 10

    (14) instruction -> whileSt .

    PRINT           reduce using rule 14 (instruction -> whileSt .)
    PRINTLN         reduce using rule 14 (instruction -> whileSt .)
    ID              reduce using rule 14 (instruction -> whileSt .)
    GLOBAL          reduce using rule 14 (instruction -> whileSt .)
    LOCAL           reduce using rule 14 (instruction -> whileSt .)
    FUNCTION        reduce using rule 14 (instruction -> whileSt .)
    RIF             reduce using rule 14 (instruction -> whileSt .)
    RWHILE          reduce using rule 14 (instruction -> whileSt .)
    RFOR            reduce using rule 14 (instruction -> whileSt .)
    RRETURN         reduce using rule 14 (instruction -> whileSt .)
    RBREAK          reduce using rule 14 (instruction -> whileSt .)
    RCONTINUE       reduce using rule 14 (instruction -> whileSt .)
    $end            reduce using rule 14 (instruction -> whileSt .)


state 11

    (15) instruction -> forSt .

    PRINT           reduce using rule 15 (instruction -> forSt .)
    PRINTLN         reduce using rule 15 (instruction -> forSt .)
    ID              reduce using rule 15 (instruction -> forSt .)
    GLOBAL          reduce using rule 15 (instruction -> forSt .)
    LOCAL           reduce using rule 15 (instruction -> forSt .)
    FUNCTION        reduce using rule 15 (instruction -> forSt .)
    RIF             reduce using rule 15 (instruction -> forSt .)
    RWHILE          reduce using rule 15 (instruction -> forSt .)
    RFOR            reduce using rule 15 (instruction -> forSt .)
    RRETURN         reduce using rule 15 (instruction -> forSt .)
    RBREAK          reduce using rule 15 (instruction -> forSt .)
    RCONTINUE       reduce using rule 15 (instruction -> forSt .)
    $end            reduce using rule 15 (instruction -> forSt .)


state 12

    (16) instruction -> returnST .

    PRINT           reduce using rule 16 (instruction -> returnST .)
    PRINTLN         reduce using rule 16 (instruction -> returnST .)
    ID              reduce using rule 16 (instruction -> returnST .)
    GLOBAL          reduce using rule 16 (instruction -> returnST .)
    LOCAL           reduce using rule 16 (instruction -> returnST .)
    FUNCTION        reduce using rule 16 (instruction -> returnST .)
    RIF             reduce using rule 16 (instruction -> returnST .)
    RWHILE          reduce using rule 16 (instruction -> returnST .)
    RFOR            reduce using rule 16 (instruction -> returnST .)
    RRETURN         reduce using rule 16 (instruction -> returnST .)
    RBREAK          reduce using rule 16 (instruction -> returnST .)
    RCONTINUE       reduce using rule 16 (instruction -> returnST .)
    $end            reduce using rule 16 (instruction -> returnST .)


state 13

    (17) instruction -> breakST .

    PRINT           reduce using rule 17 (instruction -> breakST .)
    PRINTLN         reduce using rule 17 (instruction -> breakST .)
    ID              reduce using rule 17 (instruction -> breakST .)
    GLOBAL          reduce using rule 17 (instruction -> breakST .)
    LOCAL           reduce using rule 17 (instruction -> breakST .)
    FUNCTION        reduce using rule 17 (instruction -> breakST .)
    RIF             reduce using rule 17 (instruction -> breakST .)
    RWHILE          reduce using rule 17 (instruction -> breakST .)
    RFOR            reduce using rule 17 (instruction -> breakST .)
    RRETURN         reduce using rule 17 (instruction -> breakST .)
    RBREAK          reduce using rule 17 (instruction -> breakST .)
    RCONTINUE       reduce using rule 17 (instruction -> breakST .)
    $end            reduce using rule 17 (instruction -> breakST .)


state 14

    (18) instruction -> continueST .

    PRINT           reduce using rule 18 (instruction -> continueST .)
    PRINTLN         reduce using rule 18 (instruction -> continueST .)
    ID              reduce using rule 18 (instruction -> continueST .)
    GLOBAL          reduce using rule 18 (instruction -> continueST .)
    LOCAL           reduce using rule 18 (instruction -> continueST .)
    FUNCTION        reduce using rule 18 (instruction -> continueST .)
    RIF             reduce using rule 18 (instruction -> continueST .)
    RWHILE          reduce using rule 18 (instruction -> continueST .)
    RFOR            reduce using rule 18 (instruction -> continueST .)
    RRETURN         reduce using rule 18 (instruction -> continueST .)
    RBREAK          reduce using rule 18 (instruction -> continueST .)
    RCONTINUE       reduce using rule 18 (instruction -> continueST .)
    $end            reduce using rule 18 (instruction -> continueST .)


state 15

    (39) p_print -> PRINT . PARIZQ exps PARDER PTCOMA

    PARIZQ          shift and go to state 28


state 16

    (40) p_println -> PRINTLN . PARIZQ exps PARDER PTCOMA

    PARIZQ          shift and go to state 29


state 17

    (43) declaration -> ID . IGUAL exp PTCOMA
    (44) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (52) declaration -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) callFuncSt -> ID . parametersCallFunc PTCOMA
    (93) parametersCallFunc -> . PARIZQ listValues PARDER
    (94) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 30
    PARIZQ          shift and go to state 32

    parametersCallFunc             shift and go to state 31

state 18

    (45) declaration -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (46) declaration -> GLOBAL . ID IGUAL exp PTCOMA
    (47) declaration -> GLOBAL . ID PTCOMA
    (53) declaration -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA

    ID              shift and go to state 33


state 19

    (48) declaration -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declaration -> LOCAL . ID IGUAL exp PTCOMA
    (50) declaration -> LOCAL . ID PTCOMA
    (55) declaration -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA

    ID              shift and go to state 34


state 20

    (85) function -> FUNCTION . ID parametersFunc blockf

    ID              shift and go to state 35


state 21

    (97) ifSt -> RIF . exp END PTCOMA
    (98) ifSt -> RIF . exp blockiff END PTCOMA
    (99) ifSt -> RIF . exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> RIF . exp blockiff RELSE END PTCOMA
    (101) ifSt -> RIF . exp blockiff elseifSt END PTCOMA
    (102) ifSt -> RIF . exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> RIF . exp blockiff elseifSt RELSE END PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 36

state 22

    (119) whileSt -> RWHILE . exp blockc
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 62

state 23

    (120) forSt -> RFOR . parameter RIN exp DOSPT exp blockc
    (121) forSt -> RFOR . parameter RIN exp blockc
    (90) parameter -> . ID DOSPT DOSPT typeDef
    (91) parameter -> . ID

    ID              shift and go to state 64

    parameter                      shift and go to state 63

state 24

    (128) returnST -> RRETURN . exp PTCOMA
    (129) returnST -> RRETURN . PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    PTCOMA          shift and go to state 66
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 65

state 25

    (130) breakST -> RBREAK . PTCOMA

    PTCOMA          shift and go to state 67


state 26

    (131) continueST -> RCONTINUE . PTCOMA

    PTCOMA          shift and go to state 68


state 27

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    GLOBAL          reduce using rule 2 (instructions -> instructions instruction .)
    LOCAL           reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    RFOR            reduce using rule 2 (instructions -> instructions instruction .)
    RRETURN         reduce using rule 2 (instructions -> instructions instruction .)
    RBREAK          reduce using rule 2 (instructions -> instructions instruction .)
    RCONTINUE       reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 28

    (39) p_print -> PRINT PARIZQ . exps PARDER PTCOMA
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 69
    exp                            shift and go to state 70

state 29

    (40) p_println -> PRINTLN PARIZQ . exps PARDER PTCOMA
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 71
    exp                            shift and go to state 70

state 30

    (43) declaration -> ID IGUAL . exp PTCOMA
    (44) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (51) declaration -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (52) declaration -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 73
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 72

state 31

    (92) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 74


state 32

    (93) parametersCallFunc -> PARIZQ . listValues PARDER
    (94) parametersCallFunc -> PARIZQ . PARDER
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    PARDER          shift and go to state 76
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    listValues                     shift and go to state 75
    exp                            shift and go to state 77

state 33

    (45) declaration -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (46) declaration -> GLOBAL ID . IGUAL exp PTCOMA
    (47) declaration -> GLOBAL ID . PTCOMA
    (53) declaration -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA

    IGUAL           shift and go to state 78
    PTCOMA          shift and go to state 79


state 34

    (48) declaration -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (49) declaration -> LOCAL ID . IGUAL exp PTCOMA
    (50) declaration -> LOCAL ID . PTCOMA
    (55) declaration -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA

    IGUAL           shift and go to state 80
    PTCOMA          shift and go to state 81


state 35

    (85) function -> FUNCTION ID . parametersFunc blockf
    (86) parametersFunc -> . PARIZQ parameters PARDER
    (87) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 83

    parametersFunc                 shift and go to state 82

state 36

    (97) ifSt -> RIF exp . END PTCOMA
    (98) ifSt -> RIF exp . blockiff END PTCOMA
    (99) ifSt -> RIF exp . blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> RIF exp . blockiff RELSE END PTCOMA
    (101) ifSt -> RIF exp . blockiff elseifSt END PTCOMA
    (102) ifSt -> RIF exp . blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> RIF exp . blockiff elseifSt RELSE END PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (126) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 84
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockiff                       shift and go to state 85
    instructionsf                  shift and go to state 100
    instructionf                   shift and go to state 101
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 37

    (140) exp -> MENOS . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 115

state 38

    (149) exp -> NOTT . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 116

state 39

    (150) exp -> ID . parametersCallFunc
    (183) exp -> ID .
    (184) exp -> ID . listArray
    (93) parametersCallFunc -> . PARIZQ listValues PARDER
    (94) parametersCallFunc -> . PARIZQ PARDER
    (132) listArray -> . listArray CORIZQ exp CORDER
    (133) listArray -> . CORIZQ exp CORDER

    END             reduce using rule 183 (exp -> ID .)
    MAS             reduce using rule 183 (exp -> ID .)
    MENOS           reduce using rule 183 (exp -> ID .)
    MULTIPLICACION  reduce using rule 183 (exp -> ID .)
    DIVISION        reduce using rule 183 (exp -> ID .)
    POTENCIA        reduce using rule 183 (exp -> ID .)
    MODULO          reduce using rule 183 (exp -> ID .)
    IGUALIGUAL      reduce using rule 183 (exp -> ID .)
    DISTINTO        reduce using rule 183 (exp -> ID .)
    MAYOR           reduce using rule 183 (exp -> ID .)
    MENOR           reduce using rule 183 (exp -> ID .)
    MAYORIGUAL      reduce using rule 183 (exp -> ID .)
    MENORIGUAL      reduce using rule 183 (exp -> ID .)
    ANDD            reduce using rule 183 (exp -> ID .)
    ORR             reduce using rule 183 (exp -> ID .)
    PRINT           reduce using rule 183 (exp -> ID .)
    PRINTLN         reduce using rule 183 (exp -> ID .)
    ID              reduce using rule 183 (exp -> ID .)
    GLOBAL          reduce using rule 183 (exp -> ID .)
    LOCAL           reduce using rule 183 (exp -> ID .)
    RIF             reduce using rule 183 (exp -> ID .)
    RWHILE          reduce using rule 183 (exp -> ID .)
    RFOR            reduce using rule 183 (exp -> ID .)
    RRETURN         reduce using rule 183 (exp -> ID .)
    RBREAK          reduce using rule 183 (exp -> ID .)
    RCONTINUE       reduce using rule 183 (exp -> ID .)
    PTCOMA          reduce using rule 183 (exp -> ID .)
    PARDER          reduce using rule 183 (exp -> ID .)
    COMA            reduce using rule 183 (exp -> ID .)
    DOSPT           reduce using rule 183 (exp -> ID .)
    CORDER          reduce using rule 183 (exp -> ID .)
    RELSE           reduce using rule 183 (exp -> ID .)
    RELSEIF         reduce using rule 183 (exp -> ID .)
    PARIZQ          shift and go to state 32
    CORIZQ          shift and go to state 119

    parametersCallFunc             shift and go to state 117
    listArray                      shift and go to state 118

state 40

    (151) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 120


state 41

    (175) exp -> PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 121

state 42

    (152) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 122


state 43

    (153) exp -> LOG . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 123


state 44

    (154) exp -> LOG10 . PARIZQ exp PARDER

    PARIZQ          shift and go to state 124


state 45

    (155) exp -> SIN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 125


state 46

    (156) exp -> COS . PARIZQ exp PARDER

    PARIZQ          shift and go to state 126


state 47

    (157) exp -> TAN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 127


state 48

    (158) exp -> SQRT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 128


state 49

    (159) exp -> PARSE . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 129


state 50

    (160) exp -> TRUNC . PARIZQ typeDef COMA exp PARDER
    (161) exp -> TRUNC . PARIZQ exp PARDER

    PARIZQ          shift and go to state 130


state 51

    (162) exp -> MFLOAT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 131


state 52

    (163) exp -> MSTRING . PARIZQ exp PARDER

    PARIZQ          shift and go to state 132


state 53

    (164) exp -> TYPEOF . PARIZQ exp PARDER

    PARIZQ          shift and go to state 133


state 54

    (176) exp -> ENTERO .

    END             reduce using rule 176 (exp -> ENTERO .)
    MAS             reduce using rule 176 (exp -> ENTERO .)
    MENOS           reduce using rule 176 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 176 (exp -> ENTERO .)
    DIVISION        reduce using rule 176 (exp -> ENTERO .)
    POTENCIA        reduce using rule 176 (exp -> ENTERO .)
    MODULO          reduce using rule 176 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 176 (exp -> ENTERO .)
    DISTINTO        reduce using rule 176 (exp -> ENTERO .)
    MAYOR           reduce using rule 176 (exp -> ENTERO .)
    MENOR           reduce using rule 176 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 176 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 176 (exp -> ENTERO .)
    ANDD            reduce using rule 176 (exp -> ENTERO .)
    ORR             reduce using rule 176 (exp -> ENTERO .)
    PRINT           reduce using rule 176 (exp -> ENTERO .)
    PRINTLN         reduce using rule 176 (exp -> ENTERO .)
    ID              reduce using rule 176 (exp -> ENTERO .)
    GLOBAL          reduce using rule 176 (exp -> ENTERO .)
    LOCAL           reduce using rule 176 (exp -> ENTERO .)
    RIF             reduce using rule 176 (exp -> ENTERO .)
    RWHILE          reduce using rule 176 (exp -> ENTERO .)
    RFOR            reduce using rule 176 (exp -> ENTERO .)
    RRETURN         reduce using rule 176 (exp -> ENTERO .)
    RBREAK          reduce using rule 176 (exp -> ENTERO .)
    RCONTINUE       reduce using rule 176 (exp -> ENTERO .)
    PTCOMA          reduce using rule 176 (exp -> ENTERO .)
    PARDER          reduce using rule 176 (exp -> ENTERO .)
    COMA            reduce using rule 176 (exp -> ENTERO .)
    DOSPT           reduce using rule 176 (exp -> ENTERO .)
    CORDER          reduce using rule 176 (exp -> ENTERO .)
    RELSE           reduce using rule 176 (exp -> ENTERO .)
    RELSEIF         reduce using rule 176 (exp -> ENTERO .)


state 55

    (177) exp -> DECIMAL .

    END             reduce using rule 177 (exp -> DECIMAL .)
    MAS             reduce using rule 177 (exp -> DECIMAL .)
    MENOS           reduce using rule 177 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 177 (exp -> DECIMAL .)
    DIVISION        reduce using rule 177 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 177 (exp -> DECIMAL .)
    MODULO          reduce using rule 177 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 177 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 177 (exp -> DECIMAL .)
    MAYOR           reduce using rule 177 (exp -> DECIMAL .)
    MENOR           reduce using rule 177 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 177 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 177 (exp -> DECIMAL .)
    ANDD            reduce using rule 177 (exp -> DECIMAL .)
    ORR             reduce using rule 177 (exp -> DECIMAL .)
    PRINT           reduce using rule 177 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 177 (exp -> DECIMAL .)
    ID              reduce using rule 177 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 177 (exp -> DECIMAL .)
    LOCAL           reduce using rule 177 (exp -> DECIMAL .)
    RIF             reduce using rule 177 (exp -> DECIMAL .)
    RWHILE          reduce using rule 177 (exp -> DECIMAL .)
    RFOR            reduce using rule 177 (exp -> DECIMAL .)
    RRETURN         reduce using rule 177 (exp -> DECIMAL .)
    RBREAK          reduce using rule 177 (exp -> DECIMAL .)
    RCONTINUE       reduce using rule 177 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 177 (exp -> DECIMAL .)
    PARDER          reduce using rule 177 (exp -> DECIMAL .)
    COMA            reduce using rule 177 (exp -> DECIMAL .)
    DOSPT           reduce using rule 177 (exp -> DECIMAL .)
    CORDER          reduce using rule 177 (exp -> DECIMAL .)
    RELSE           reduce using rule 177 (exp -> DECIMAL .)
    RELSEIF         reduce using rule 177 (exp -> DECIMAL .)


state 56

    (178) exp -> STRING .

    END             reduce using rule 178 (exp -> STRING .)
    MAS             reduce using rule 178 (exp -> STRING .)
    MENOS           reduce using rule 178 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 178 (exp -> STRING .)
    DIVISION        reduce using rule 178 (exp -> STRING .)
    POTENCIA        reduce using rule 178 (exp -> STRING .)
    MODULO          reduce using rule 178 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 178 (exp -> STRING .)
    DISTINTO        reduce using rule 178 (exp -> STRING .)
    MAYOR           reduce using rule 178 (exp -> STRING .)
    MENOR           reduce using rule 178 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 178 (exp -> STRING .)
    MENORIGUAL      reduce using rule 178 (exp -> STRING .)
    ANDD            reduce using rule 178 (exp -> STRING .)
    ORR             reduce using rule 178 (exp -> STRING .)
    PRINT           reduce using rule 178 (exp -> STRING .)
    PRINTLN         reduce using rule 178 (exp -> STRING .)
    ID              reduce using rule 178 (exp -> STRING .)
    GLOBAL          reduce using rule 178 (exp -> STRING .)
    LOCAL           reduce using rule 178 (exp -> STRING .)
    RIF             reduce using rule 178 (exp -> STRING .)
    RWHILE          reduce using rule 178 (exp -> STRING .)
    RFOR            reduce using rule 178 (exp -> STRING .)
    RRETURN         reduce using rule 178 (exp -> STRING .)
    RBREAK          reduce using rule 178 (exp -> STRING .)
    RCONTINUE       reduce using rule 178 (exp -> STRING .)
    PTCOMA          reduce using rule 178 (exp -> STRING .)
    PARDER          reduce using rule 178 (exp -> STRING .)
    COMA            reduce using rule 178 (exp -> STRING .)
    DOSPT           reduce using rule 178 (exp -> STRING .)
    CORDER          reduce using rule 178 (exp -> STRING .)
    RELSE           reduce using rule 178 (exp -> STRING .)
    RELSEIF         reduce using rule 178 (exp -> STRING .)


state 57

    (179) exp -> CHAR .

    END             reduce using rule 179 (exp -> CHAR .)
    MAS             reduce using rule 179 (exp -> CHAR .)
    MENOS           reduce using rule 179 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 179 (exp -> CHAR .)
    DIVISION        reduce using rule 179 (exp -> CHAR .)
    POTENCIA        reduce using rule 179 (exp -> CHAR .)
    MODULO          reduce using rule 179 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 179 (exp -> CHAR .)
    DISTINTO        reduce using rule 179 (exp -> CHAR .)
    MAYOR           reduce using rule 179 (exp -> CHAR .)
    MENOR           reduce using rule 179 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 179 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 179 (exp -> CHAR .)
    ANDD            reduce using rule 179 (exp -> CHAR .)
    ORR             reduce using rule 179 (exp -> CHAR .)
    PRINT           reduce using rule 179 (exp -> CHAR .)
    PRINTLN         reduce using rule 179 (exp -> CHAR .)
    ID              reduce using rule 179 (exp -> CHAR .)
    GLOBAL          reduce using rule 179 (exp -> CHAR .)
    LOCAL           reduce using rule 179 (exp -> CHAR .)
    RIF             reduce using rule 179 (exp -> CHAR .)
    RWHILE          reduce using rule 179 (exp -> CHAR .)
    RFOR            reduce using rule 179 (exp -> CHAR .)
    RRETURN         reduce using rule 179 (exp -> CHAR .)
    RBREAK          reduce using rule 179 (exp -> CHAR .)
    RCONTINUE       reduce using rule 179 (exp -> CHAR .)
    PTCOMA          reduce using rule 179 (exp -> CHAR .)
    PARDER          reduce using rule 179 (exp -> CHAR .)
    COMA            reduce using rule 179 (exp -> CHAR .)
    DOSPT           reduce using rule 179 (exp -> CHAR .)
    CORDER          reduce using rule 179 (exp -> CHAR .)
    RELSE           reduce using rule 179 (exp -> CHAR .)
    RELSEIF         reduce using rule 179 (exp -> CHAR .)


state 58

    (180) exp -> VERDADERO .

    END             reduce using rule 180 (exp -> VERDADERO .)
    MAS             reduce using rule 180 (exp -> VERDADERO .)
    MENOS           reduce using rule 180 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 180 (exp -> VERDADERO .)
    DIVISION        reduce using rule 180 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 180 (exp -> VERDADERO .)
    MODULO          reduce using rule 180 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 180 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 180 (exp -> VERDADERO .)
    MAYOR           reduce using rule 180 (exp -> VERDADERO .)
    MENOR           reduce using rule 180 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 180 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 180 (exp -> VERDADERO .)
    ANDD            reduce using rule 180 (exp -> VERDADERO .)
    ORR             reduce using rule 180 (exp -> VERDADERO .)
    PRINT           reduce using rule 180 (exp -> VERDADERO .)
    PRINTLN         reduce using rule 180 (exp -> VERDADERO .)
    ID              reduce using rule 180 (exp -> VERDADERO .)
    GLOBAL          reduce using rule 180 (exp -> VERDADERO .)
    LOCAL           reduce using rule 180 (exp -> VERDADERO .)
    RIF             reduce using rule 180 (exp -> VERDADERO .)
    RWHILE          reduce using rule 180 (exp -> VERDADERO .)
    RFOR            reduce using rule 180 (exp -> VERDADERO .)
    RRETURN         reduce using rule 180 (exp -> VERDADERO .)
    RBREAK          reduce using rule 180 (exp -> VERDADERO .)
    RCONTINUE       reduce using rule 180 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 180 (exp -> VERDADERO .)
    PARDER          reduce using rule 180 (exp -> VERDADERO .)
    COMA            reduce using rule 180 (exp -> VERDADERO .)
    DOSPT           reduce using rule 180 (exp -> VERDADERO .)
    CORDER          reduce using rule 180 (exp -> VERDADERO .)
    RELSE           reduce using rule 180 (exp -> VERDADERO .)
    RELSEIF         reduce using rule 180 (exp -> VERDADERO .)


state 59

    (181) exp -> FALSO .

    END             reduce using rule 181 (exp -> FALSO .)
    MAS             reduce using rule 181 (exp -> FALSO .)
    MENOS           reduce using rule 181 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 181 (exp -> FALSO .)
    DIVISION        reduce using rule 181 (exp -> FALSO .)
    POTENCIA        reduce using rule 181 (exp -> FALSO .)
    MODULO          reduce using rule 181 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 181 (exp -> FALSO .)
    DISTINTO        reduce using rule 181 (exp -> FALSO .)
    MAYOR           reduce using rule 181 (exp -> FALSO .)
    MENOR           reduce using rule 181 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 181 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 181 (exp -> FALSO .)
    ANDD            reduce using rule 181 (exp -> FALSO .)
    ORR             reduce using rule 181 (exp -> FALSO .)
    PRINT           reduce using rule 181 (exp -> FALSO .)
    PRINTLN         reduce using rule 181 (exp -> FALSO .)
    ID              reduce using rule 181 (exp -> FALSO .)
    GLOBAL          reduce using rule 181 (exp -> FALSO .)
    LOCAL           reduce using rule 181 (exp -> FALSO .)
    RIF             reduce using rule 181 (exp -> FALSO .)
    RWHILE          reduce using rule 181 (exp -> FALSO .)
    RFOR            reduce using rule 181 (exp -> FALSO .)
    RRETURN         reduce using rule 181 (exp -> FALSO .)
    RBREAK          reduce using rule 181 (exp -> FALSO .)
    RCONTINUE       reduce using rule 181 (exp -> FALSO .)
    PTCOMA          reduce using rule 181 (exp -> FALSO .)
    PARDER          reduce using rule 181 (exp -> FALSO .)
    COMA            reduce using rule 181 (exp -> FALSO .)
    DOSPT           reduce using rule 181 (exp -> FALSO .)
    CORDER          reduce using rule 181 (exp -> FALSO .)
    RELSE           reduce using rule 181 (exp -> FALSO .)
    RELSEIF         reduce using rule 181 (exp -> FALSO .)


state 60

    (182) exp -> NULO .

    END             reduce using rule 182 (exp -> NULO .)
    MAS             reduce using rule 182 (exp -> NULO .)
    MENOS           reduce using rule 182 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 182 (exp -> NULO .)
    DIVISION        reduce using rule 182 (exp -> NULO .)
    POTENCIA        reduce using rule 182 (exp -> NULO .)
    MODULO          reduce using rule 182 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 182 (exp -> NULO .)
    DISTINTO        reduce using rule 182 (exp -> NULO .)
    MAYOR           reduce using rule 182 (exp -> NULO .)
    MENOR           reduce using rule 182 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 182 (exp -> NULO .)
    MENORIGUAL      reduce using rule 182 (exp -> NULO .)
    ANDD            reduce using rule 182 (exp -> NULO .)
    ORR             reduce using rule 182 (exp -> NULO .)
    PRINT           reduce using rule 182 (exp -> NULO .)
    PRINTLN         reduce using rule 182 (exp -> NULO .)
    ID              reduce using rule 182 (exp -> NULO .)
    GLOBAL          reduce using rule 182 (exp -> NULO .)
    LOCAL           reduce using rule 182 (exp -> NULO .)
    RIF             reduce using rule 182 (exp -> NULO .)
    RWHILE          reduce using rule 182 (exp -> NULO .)
    RFOR            reduce using rule 182 (exp -> NULO .)
    RRETURN         reduce using rule 182 (exp -> NULO .)
    RBREAK          reduce using rule 182 (exp -> NULO .)
    RCONTINUE       reduce using rule 182 (exp -> NULO .)
    PTCOMA          reduce using rule 182 (exp -> NULO .)
    PARDER          reduce using rule 182 (exp -> NULO .)
    COMA            reduce using rule 182 (exp -> NULO .)
    DOSPT           reduce using rule 182 (exp -> NULO .)
    CORDER          reduce using rule 182 (exp -> NULO .)
    RELSE           reduce using rule 182 (exp -> NULO .)
    RELSEIF         reduce using rule 182 (exp -> NULO .)


state 61

    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    listValues                     shift and go to state 134
    exp                            shift and go to state 77

state 62

    (119) whileSt -> RWHILE exp . blockc
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (124) blockc -> . instructionsc END PTCOMA
    (125) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    END             shift and go to state 138
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockc                         shift and go to state 136
    instructionsc                  shift and go to state 137
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 63

    (120) forSt -> RFOR parameter . RIN exp DOSPT exp blockc
    (121) forSt -> RFOR parameter . RIN exp blockc

    RIN             shift and go to state 154


state 64

    (90) parameter -> ID . DOSPT DOSPT typeDef
    (91) parameter -> ID .

    DOSPT           shift and go to state 155
    RIN             reduce using rule 91 (parameter -> ID .)
    PARDER          reduce using rule 91 (parameter -> ID .)
    COMA            reduce using rule 91 (parameter -> ID .)


state 65

    (128) returnST -> RRETURN exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PTCOMA          shift and go to state 156
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 66

    (129) returnST -> RRETURN PTCOMA .

    PRINT           reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    PRINTLN         reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    ID              reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    GLOBAL          reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    LOCAL           reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    FUNCTION        reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RIF             reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RWHILE          reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RFOR            reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RRETURN         reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RBREAK          reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RCONTINUE       reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    $end            reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    END             reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RELSE           reduce using rule 129 (returnST -> RRETURN PTCOMA .)
    RELSEIF         reduce using rule 129 (returnST -> RRETURN PTCOMA .)


state 67

    (130) breakST -> RBREAK PTCOMA .

    PRINT           reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    PRINTLN         reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    ID              reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    GLOBAL          reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    LOCAL           reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    FUNCTION        reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RIF             reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RWHILE          reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RFOR            reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RRETURN         reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RBREAK          reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RCONTINUE       reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    $end            reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    END             reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RELSE           reduce using rule 130 (breakST -> RBREAK PTCOMA .)
    RELSEIF         reduce using rule 130 (breakST -> RBREAK PTCOMA .)


state 68

    (131) continueST -> RCONTINUE PTCOMA .

    PRINT           reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    PRINTLN         reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    ID              reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    GLOBAL          reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    LOCAL           reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    FUNCTION        reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RIF             reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RWHILE          reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RFOR            reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RRETURN         reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RBREAK          reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RCONTINUE       reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    $end            reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    END             reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RELSE           reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)
    RELSEIF         reduce using rule 131 (continueST -> RCONTINUE PTCOMA .)


state 69

    (39) p_print -> PRINT PARIZQ exps . PARDER PTCOMA
    (41) exps -> exps . COMA exp

    PARDER          shift and go to state 157
    COMA            shift and go to state 158


state 70

    (42) exps -> exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          reduce using rule 42 (exps -> exp .)
    COMA            reduce using rule 42 (exps -> exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 71

    (40) p_println -> PRINTLN PARIZQ exps . PARDER PTCOMA
    (41) exps -> exps . COMA exp

    PARDER          shift and go to state 159
    COMA            shift and go to state 158


state 72

    (43) declaration -> ID IGUAL exp . PTCOMA
    (44) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PTCOMA          shift and go to state 160
    DOSPT           shift and go to state 161
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 73

    (51) declaration -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (52) declaration -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 162
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 74

    (92) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    GLOBAL          reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    LOCAL           reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RFOR            reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RRETURN         reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RBREAK          reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RCONTINUE       reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSE           reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSEIF         reduce using rule 92 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 75

    (93) parametersCallFunc -> PARIZQ listValues . PARDER
    (95) listValues -> listValues . COMA exp

    PARDER          shift and go to state 164
    COMA            shift and go to state 165


state 76

    (94) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    END             reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MAS             reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MENOS           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MULTIPLICACION  reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    DIVISION        reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    POTENCIA        reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MODULO          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    IGUALIGUAL      reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    DISTINTO        reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MAYOR           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MENOR           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    ANDD            reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    ORR             reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    ID              reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RRETURN         reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RBREAK          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RCONTINUE       reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    PARDER          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    COMA            reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    DOSPT           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    CORDER          reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RELSE           reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)
    RELSEIF         reduce using rule 94 (parametersCallFunc -> PARIZQ PARDER .)


state 77

    (96) listValues -> exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          reduce using rule 96 (listValues -> exp .)
    COMA            reduce using rule 96 (listValues -> exp .)
    CORDER          reduce using rule 96 (listValues -> exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 78

    (45) declaration -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (46) declaration -> GLOBAL ID IGUAL . exp PTCOMA
    (53) declaration -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 167
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 166

state 79

    (47) declaration -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    FUNCTION        reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)
    $end            reduce using rule 47 (declaration -> GLOBAL ID PTCOMA .)


state 80

    (48) declaration -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (49) declaration -> LOCAL ID IGUAL . exp PTCOMA
    (55) declaration -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 169
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 168

state 81

    (50) declaration -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    ID              reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    FUNCTION        reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)
    $end            reduce using rule 50 (declaration -> LOCAL ID PTCOMA .)


state 82

    (85) function -> FUNCTION ID parametersFunc . blockf
    (122) blockf -> . instructionsf END PTCOMA
    (123) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 172
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockf                         shift and go to state 170
    instructionsf                  shift and go to state 171
    instructionf                   shift and go to state 101
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 83

    (86) parametersFunc -> PARIZQ . parameters PARDER
    (87) parametersFunc -> PARIZQ . PARDER
    (88) parameters -> . parameters COMA parameter
    (89) parameters -> . parameter
    (90) parameter -> . ID DOSPT DOSPT typeDef
    (91) parameter -> . ID

    PARDER          shift and go to state 174
    ID              shift and go to state 64

    parameters                     shift and go to state 173
    parameter                      shift and go to state 175

state 84

    (97) ifSt -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 176


state 85

    (98) ifSt -> RIF exp blockiff . END PTCOMA
    (99) ifSt -> RIF exp blockiff . RELSE blockiff END PTCOMA
    (100) ifSt -> RIF exp blockiff . RELSE END PTCOMA
    (101) ifSt -> RIF exp blockiff . elseifSt END PTCOMA
    (102) ifSt -> RIF exp blockiff . elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> RIF exp blockiff . elseifSt RELSE END PTCOMA
    (104) elseifSt -> . elseifSt conelseif
    (105) elseifSt -> . conelseif
    (106) conelseif -> . RELSEIF exp blockiff
    (107) conelseif -> . RELSEIF exp

    END             shift and go to state 177
    RELSE           shift and go to state 178
    RELSEIF         shift and go to state 181

    elseifSt                       shift and go to state 179
    conelseif                      shift and go to state 180

state 86

    (134) exp -> exp MAS . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 182

state 87

    (135) exp -> exp MENOS . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 183

state 88

    (136) exp -> exp MULTIPLICACION . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 184

state 89

    (137) exp -> exp DIVISION . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 185

state 90

    (138) exp -> exp POTENCIA . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 186

state 91

    (139) exp -> exp MODULO . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 187

state 92

    (141) exp -> exp IGUALIGUAL . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 188

state 93

    (142) exp -> exp DISTINTO . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 189

state 94

    (143) exp -> exp MAYOR . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 190

state 95

    (144) exp -> exp MENOR . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 191

state 96

    (145) exp -> exp MAYORIGUAL . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 192

state 97

    (146) exp -> exp MENORIGUAL . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 193

state 98

    (147) exp -> exp ANDD . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 194

state 99

    (148) exp -> exp ORR . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 195

state 100

    (126) blockiff -> instructionsf .
    (4) instructionsf -> instructionsf . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 126 (blockiff -> instructionsf .)
    RELSE           reduce using rule 126 (blockiff -> instructionsf .)
    RELSEIF         reduce using rule 126 (blockiff -> instructionsf .)
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    instructionf                   shift and go to state 196
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 101

    (5) instructionsf -> instructionf .

    PRINT           reduce using rule 5 (instructionsf -> instructionf .)
    PRINTLN         reduce using rule 5 (instructionsf -> instructionf .)
    ID              reduce using rule 5 (instructionsf -> instructionf .)
    GLOBAL          reduce using rule 5 (instructionsf -> instructionf .)
    LOCAL           reduce using rule 5 (instructionsf -> instructionf .)
    RIF             reduce using rule 5 (instructionsf -> instructionf .)
    RWHILE          reduce using rule 5 (instructionsf -> instructionf .)
    RFOR            reduce using rule 5 (instructionsf -> instructionf .)
    RRETURN         reduce using rule 5 (instructionsf -> instructionf .)
    RBREAK          reduce using rule 5 (instructionsf -> instructionf .)
    RCONTINUE       reduce using rule 5 (instructionsf -> instructionf .)
    END             reduce using rule 5 (instructionsf -> instructionf .)
    RELSE           reduce using rule 5 (instructionsf -> instructionf .)
    RELSEIF         reduce using rule 5 (instructionsf -> instructionf .)


state 102

    (19) instructionf -> p_print .

    PRINT           reduce using rule 19 (instructionf -> p_print .)
    PRINTLN         reduce using rule 19 (instructionf -> p_print .)
    ID              reduce using rule 19 (instructionf -> p_print .)
    GLOBAL          reduce using rule 19 (instructionf -> p_print .)
    LOCAL           reduce using rule 19 (instructionf -> p_print .)
    RIF             reduce using rule 19 (instructionf -> p_print .)
    RWHILE          reduce using rule 19 (instructionf -> p_print .)
    RFOR            reduce using rule 19 (instructionf -> p_print .)
    RRETURN         reduce using rule 19 (instructionf -> p_print .)
    RBREAK          reduce using rule 19 (instructionf -> p_print .)
    RCONTINUE       reduce using rule 19 (instructionf -> p_print .)
    END             reduce using rule 19 (instructionf -> p_print .)
    RELSE           reduce using rule 19 (instructionf -> p_print .)
    RELSEIF         reduce using rule 19 (instructionf -> p_print .)


state 103

    (20) instructionf -> p_println .

    PRINT           reduce using rule 20 (instructionf -> p_println .)
    PRINTLN         reduce using rule 20 (instructionf -> p_println .)
    ID              reduce using rule 20 (instructionf -> p_println .)
    GLOBAL          reduce using rule 20 (instructionf -> p_println .)
    LOCAL           reduce using rule 20 (instructionf -> p_println .)
    RIF             reduce using rule 20 (instructionf -> p_println .)
    RWHILE          reduce using rule 20 (instructionf -> p_println .)
    RFOR            reduce using rule 20 (instructionf -> p_println .)
    RRETURN         reduce using rule 20 (instructionf -> p_println .)
    RBREAK          reduce using rule 20 (instructionf -> p_println .)
    RCONTINUE       reduce using rule 20 (instructionf -> p_println .)
    END             reduce using rule 20 (instructionf -> p_println .)
    RELSE           reduce using rule 20 (instructionf -> p_println .)
    RELSEIF         reduce using rule 20 (instructionf -> p_println .)


state 104

    (21) instructionf -> declarationf .

    PRINT           reduce using rule 21 (instructionf -> declarationf .)
    PRINTLN         reduce using rule 21 (instructionf -> declarationf .)
    ID              reduce using rule 21 (instructionf -> declarationf .)
    GLOBAL          reduce using rule 21 (instructionf -> declarationf .)
    LOCAL           reduce using rule 21 (instructionf -> declarationf .)
    RIF             reduce using rule 21 (instructionf -> declarationf .)
    RWHILE          reduce using rule 21 (instructionf -> declarationf .)
    RFOR            reduce using rule 21 (instructionf -> declarationf .)
    RRETURN         reduce using rule 21 (instructionf -> declarationf .)
    RBREAK          reduce using rule 21 (instructionf -> declarationf .)
    RCONTINUE       reduce using rule 21 (instructionf -> declarationf .)
    END             reduce using rule 21 (instructionf -> declarationf .)
    RELSE           reduce using rule 21 (instructionf -> declarationf .)
    RELSEIF         reduce using rule 21 (instructionf -> declarationf .)


state 105

    (22) instructionf -> callFuncSt .

    PRINT           reduce using rule 22 (instructionf -> callFuncSt .)
    PRINTLN         reduce using rule 22 (instructionf -> callFuncSt .)
    ID              reduce using rule 22 (instructionf -> callFuncSt .)
    GLOBAL          reduce using rule 22 (instructionf -> callFuncSt .)
    LOCAL           reduce using rule 22 (instructionf -> callFuncSt .)
    RIF             reduce using rule 22 (instructionf -> callFuncSt .)
    RWHILE          reduce using rule 22 (instructionf -> callFuncSt .)
    RFOR            reduce using rule 22 (instructionf -> callFuncSt .)
    RRETURN         reduce using rule 22 (instructionf -> callFuncSt .)
    RBREAK          reduce using rule 22 (instructionf -> callFuncSt .)
    RCONTINUE       reduce using rule 22 (instructionf -> callFuncSt .)
    END             reduce using rule 22 (instructionf -> callFuncSt .)
    RELSE           reduce using rule 22 (instructionf -> callFuncSt .)
    RELSEIF         reduce using rule 22 (instructionf -> callFuncSt .)


state 106

    (23) instructionf -> ifSt .

    PRINT           reduce using rule 23 (instructionf -> ifSt .)
    PRINTLN         reduce using rule 23 (instructionf -> ifSt .)
    ID              reduce using rule 23 (instructionf -> ifSt .)
    GLOBAL          reduce using rule 23 (instructionf -> ifSt .)
    LOCAL           reduce using rule 23 (instructionf -> ifSt .)
    RIF             reduce using rule 23 (instructionf -> ifSt .)
    RWHILE          reduce using rule 23 (instructionf -> ifSt .)
    RFOR            reduce using rule 23 (instructionf -> ifSt .)
    RRETURN         reduce using rule 23 (instructionf -> ifSt .)
    RBREAK          reduce using rule 23 (instructionf -> ifSt .)
    RCONTINUE       reduce using rule 23 (instructionf -> ifSt .)
    END             reduce using rule 23 (instructionf -> ifSt .)
    RELSE           reduce using rule 23 (instructionf -> ifSt .)
    RELSEIF         reduce using rule 23 (instructionf -> ifSt .)


state 107

    (24) instructionf -> whileSt .

    PRINT           reduce using rule 24 (instructionf -> whileSt .)
    PRINTLN         reduce using rule 24 (instructionf -> whileSt .)
    ID              reduce using rule 24 (instructionf -> whileSt .)
    GLOBAL          reduce using rule 24 (instructionf -> whileSt .)
    LOCAL           reduce using rule 24 (instructionf -> whileSt .)
    RIF             reduce using rule 24 (instructionf -> whileSt .)
    RWHILE          reduce using rule 24 (instructionf -> whileSt .)
    RFOR            reduce using rule 24 (instructionf -> whileSt .)
    RRETURN         reduce using rule 24 (instructionf -> whileSt .)
    RBREAK          reduce using rule 24 (instructionf -> whileSt .)
    RCONTINUE       reduce using rule 24 (instructionf -> whileSt .)
    END             reduce using rule 24 (instructionf -> whileSt .)
    RELSE           reduce using rule 24 (instructionf -> whileSt .)
    RELSEIF         reduce using rule 24 (instructionf -> whileSt .)


state 108

    (25) instructionf -> forSt .

    PRINT           reduce using rule 25 (instructionf -> forSt .)
    PRINTLN         reduce using rule 25 (instructionf -> forSt .)
    ID              reduce using rule 25 (instructionf -> forSt .)
    GLOBAL          reduce using rule 25 (instructionf -> forSt .)
    LOCAL           reduce using rule 25 (instructionf -> forSt .)
    RIF             reduce using rule 25 (instructionf -> forSt .)
    RWHILE          reduce using rule 25 (instructionf -> forSt .)
    RFOR            reduce using rule 25 (instructionf -> forSt .)
    RRETURN         reduce using rule 25 (instructionf -> forSt .)
    RBREAK          reduce using rule 25 (instructionf -> forSt .)
    RCONTINUE       reduce using rule 25 (instructionf -> forSt .)
    END             reduce using rule 25 (instructionf -> forSt .)
    RELSE           reduce using rule 25 (instructionf -> forSt .)
    RELSEIF         reduce using rule 25 (instructionf -> forSt .)


state 109

    (26) instructionf -> returnST .

    PRINT           reduce using rule 26 (instructionf -> returnST .)
    PRINTLN         reduce using rule 26 (instructionf -> returnST .)
    ID              reduce using rule 26 (instructionf -> returnST .)
    GLOBAL          reduce using rule 26 (instructionf -> returnST .)
    LOCAL           reduce using rule 26 (instructionf -> returnST .)
    RIF             reduce using rule 26 (instructionf -> returnST .)
    RWHILE          reduce using rule 26 (instructionf -> returnST .)
    RFOR            reduce using rule 26 (instructionf -> returnST .)
    RRETURN         reduce using rule 26 (instructionf -> returnST .)
    RBREAK          reduce using rule 26 (instructionf -> returnST .)
    RCONTINUE       reduce using rule 26 (instructionf -> returnST .)
    END             reduce using rule 26 (instructionf -> returnST .)
    RELSE           reduce using rule 26 (instructionf -> returnST .)
    RELSEIF         reduce using rule 26 (instructionf -> returnST .)


state 110

    (27) instructionf -> breakST .

    PRINT           reduce using rule 27 (instructionf -> breakST .)
    PRINTLN         reduce using rule 27 (instructionf -> breakST .)
    ID              reduce using rule 27 (instructionf -> breakST .)
    GLOBAL          reduce using rule 27 (instructionf -> breakST .)
    LOCAL           reduce using rule 27 (instructionf -> breakST .)
    RIF             reduce using rule 27 (instructionf -> breakST .)
    RWHILE          reduce using rule 27 (instructionf -> breakST .)
    RFOR            reduce using rule 27 (instructionf -> breakST .)
    RRETURN         reduce using rule 27 (instructionf -> breakST .)
    RBREAK          reduce using rule 27 (instructionf -> breakST .)
    RCONTINUE       reduce using rule 27 (instructionf -> breakST .)
    END             reduce using rule 27 (instructionf -> breakST .)
    RELSE           reduce using rule 27 (instructionf -> breakST .)
    RELSEIF         reduce using rule 27 (instructionf -> breakST .)


state 111

    (28) instructionf -> continueST .

    PRINT           reduce using rule 28 (instructionf -> continueST .)
    PRINTLN         reduce using rule 28 (instructionf -> continueST .)
    ID              reduce using rule 28 (instructionf -> continueST .)
    GLOBAL          reduce using rule 28 (instructionf -> continueST .)
    LOCAL           reduce using rule 28 (instructionf -> continueST .)
    RIF             reduce using rule 28 (instructionf -> continueST .)
    RWHILE          reduce using rule 28 (instructionf -> continueST .)
    RFOR            reduce using rule 28 (instructionf -> continueST .)
    RRETURN         reduce using rule 28 (instructionf -> continueST .)
    RBREAK          reduce using rule 28 (instructionf -> continueST .)
    RCONTINUE       reduce using rule 28 (instructionf -> continueST .)
    END             reduce using rule 28 (instructionf -> continueST .)
    RELSE           reduce using rule 28 (instructionf -> continueST .)
    RELSEIF         reduce using rule 28 (instructionf -> continueST .)


state 112

    (57) declarationf -> ID . IGUAL exp PTCOMA
    (58) declarationf -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) callFuncSt -> ID . parametersCallFunc PTCOMA
    (93) parametersCallFunc -> . PARIZQ listValues PARDER
    (94) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 197
    PARIZQ          shift and go to state 32

    parametersCallFunc             shift and go to state 31

state 113

    (59) declarationf -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> GLOBAL . ID IGUAL exp PTCOMA
    (61) declarationf -> GLOBAL . ID PTCOMA
    (67) declarationf -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA

    ID              shift and go to state 198


state 114

    (62) declarationf -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> LOCAL . ID IGUAL exp PTCOMA
    (64) declarationf -> LOCAL . ID PTCOMA
    (69) declarationf -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA

    ID              shift and go to state 199


state 115

    (140) exp -> MENOS exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 140 (exp -> MENOS exp .)
    MAS             reduce using rule 140 (exp -> MENOS exp .)
    MENOS           reduce using rule 140 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 140 (exp -> MENOS exp .)
    DIVISION        reduce using rule 140 (exp -> MENOS exp .)
    POTENCIA        reduce using rule 140 (exp -> MENOS exp .)
    MODULO          reduce using rule 140 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 140 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 140 (exp -> MENOS exp .)
    MAYOR           reduce using rule 140 (exp -> MENOS exp .)
    MENOR           reduce using rule 140 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 140 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 140 (exp -> MENOS exp .)
    ANDD            reduce using rule 140 (exp -> MENOS exp .)
    ORR             reduce using rule 140 (exp -> MENOS exp .)
    PRINT           reduce using rule 140 (exp -> MENOS exp .)
    PRINTLN         reduce using rule 140 (exp -> MENOS exp .)
    ID              reduce using rule 140 (exp -> MENOS exp .)
    GLOBAL          reduce using rule 140 (exp -> MENOS exp .)
    LOCAL           reduce using rule 140 (exp -> MENOS exp .)
    RIF             reduce using rule 140 (exp -> MENOS exp .)
    RWHILE          reduce using rule 140 (exp -> MENOS exp .)
    RFOR            reduce using rule 140 (exp -> MENOS exp .)
    RRETURN         reduce using rule 140 (exp -> MENOS exp .)
    RBREAK          reduce using rule 140 (exp -> MENOS exp .)
    RCONTINUE       reduce using rule 140 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 140 (exp -> MENOS exp .)
    PARDER          reduce using rule 140 (exp -> MENOS exp .)
    COMA            reduce using rule 140 (exp -> MENOS exp .)
    DOSPT           reduce using rule 140 (exp -> MENOS exp .)
    CORDER          reduce using rule 140 (exp -> MENOS exp .)
    RELSE           reduce using rule 140 (exp -> MENOS exp .)
    RELSEIF         reduce using rule 140 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! MULTIPLICACION  [ shift and go to state 88 ]
  ! DIVISION        [ shift and go to state 89 ]
  ! POTENCIA        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 116

    (149) exp -> NOTT exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 149 (exp -> NOTT exp .)
    ANDD            reduce using rule 149 (exp -> NOTT exp .)
    ORR             reduce using rule 149 (exp -> NOTT exp .)
    PRINT           reduce using rule 149 (exp -> NOTT exp .)
    PRINTLN         reduce using rule 149 (exp -> NOTT exp .)
    ID              reduce using rule 149 (exp -> NOTT exp .)
    GLOBAL          reduce using rule 149 (exp -> NOTT exp .)
    LOCAL           reduce using rule 149 (exp -> NOTT exp .)
    RIF             reduce using rule 149 (exp -> NOTT exp .)
    RWHILE          reduce using rule 149 (exp -> NOTT exp .)
    RFOR            reduce using rule 149 (exp -> NOTT exp .)
    RRETURN         reduce using rule 149 (exp -> NOTT exp .)
    RBREAK          reduce using rule 149 (exp -> NOTT exp .)
    RCONTINUE       reduce using rule 149 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 149 (exp -> NOTT exp .)
    PARDER          reduce using rule 149 (exp -> NOTT exp .)
    COMA            reduce using rule 149 (exp -> NOTT exp .)
    DOSPT           reduce using rule 149 (exp -> NOTT exp .)
    CORDER          reduce using rule 149 (exp -> NOTT exp .)
    RELSE           reduce using rule 149 (exp -> NOTT exp .)
    RELSEIF         reduce using rule 149 (exp -> NOTT exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97

  ! MAS             [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 149 (exp -> NOTT exp .) ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 117

    (150) exp -> ID parametersCallFunc .

    END             reduce using rule 150 (exp -> ID parametersCallFunc .)
    MAS             reduce using rule 150 (exp -> ID parametersCallFunc .)
    MENOS           reduce using rule 150 (exp -> ID parametersCallFunc .)
    MULTIPLICACION  reduce using rule 150 (exp -> ID parametersCallFunc .)
    DIVISION        reduce using rule 150 (exp -> ID parametersCallFunc .)
    POTENCIA        reduce using rule 150 (exp -> ID parametersCallFunc .)
    MODULO          reduce using rule 150 (exp -> ID parametersCallFunc .)
    IGUALIGUAL      reduce using rule 150 (exp -> ID parametersCallFunc .)
    DISTINTO        reduce using rule 150 (exp -> ID parametersCallFunc .)
    MAYOR           reduce using rule 150 (exp -> ID parametersCallFunc .)
    MENOR           reduce using rule 150 (exp -> ID parametersCallFunc .)
    MAYORIGUAL      reduce using rule 150 (exp -> ID parametersCallFunc .)
    MENORIGUAL      reduce using rule 150 (exp -> ID parametersCallFunc .)
    ANDD            reduce using rule 150 (exp -> ID parametersCallFunc .)
    ORR             reduce using rule 150 (exp -> ID parametersCallFunc .)
    PRINT           reduce using rule 150 (exp -> ID parametersCallFunc .)
    PRINTLN         reduce using rule 150 (exp -> ID parametersCallFunc .)
    ID              reduce using rule 150 (exp -> ID parametersCallFunc .)
    GLOBAL          reduce using rule 150 (exp -> ID parametersCallFunc .)
    LOCAL           reduce using rule 150 (exp -> ID parametersCallFunc .)
    RIF             reduce using rule 150 (exp -> ID parametersCallFunc .)
    RWHILE          reduce using rule 150 (exp -> ID parametersCallFunc .)
    RFOR            reduce using rule 150 (exp -> ID parametersCallFunc .)
    RRETURN         reduce using rule 150 (exp -> ID parametersCallFunc .)
    RBREAK          reduce using rule 150 (exp -> ID parametersCallFunc .)
    RCONTINUE       reduce using rule 150 (exp -> ID parametersCallFunc .)
    PTCOMA          reduce using rule 150 (exp -> ID parametersCallFunc .)
    PARDER          reduce using rule 150 (exp -> ID parametersCallFunc .)
    COMA            reduce using rule 150 (exp -> ID parametersCallFunc .)
    DOSPT           reduce using rule 150 (exp -> ID parametersCallFunc .)
    CORDER          reduce using rule 150 (exp -> ID parametersCallFunc .)
    RELSE           reduce using rule 150 (exp -> ID parametersCallFunc .)
    RELSEIF         reduce using rule 150 (exp -> ID parametersCallFunc .)


state 118

    (184) exp -> ID listArray .
    (132) listArray -> listArray . CORIZQ exp CORDER

    END             reduce using rule 184 (exp -> ID listArray .)
    MAS             reduce using rule 184 (exp -> ID listArray .)
    MENOS           reduce using rule 184 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 184 (exp -> ID listArray .)
    DIVISION        reduce using rule 184 (exp -> ID listArray .)
    POTENCIA        reduce using rule 184 (exp -> ID listArray .)
    MODULO          reduce using rule 184 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 184 (exp -> ID listArray .)
    DISTINTO        reduce using rule 184 (exp -> ID listArray .)
    MAYOR           reduce using rule 184 (exp -> ID listArray .)
    MENOR           reduce using rule 184 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 184 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 184 (exp -> ID listArray .)
    ANDD            reduce using rule 184 (exp -> ID listArray .)
    ORR             reduce using rule 184 (exp -> ID listArray .)
    PRINT           reduce using rule 184 (exp -> ID listArray .)
    PRINTLN         reduce using rule 184 (exp -> ID listArray .)
    ID              reduce using rule 184 (exp -> ID listArray .)
    GLOBAL          reduce using rule 184 (exp -> ID listArray .)
    LOCAL           reduce using rule 184 (exp -> ID listArray .)
    RIF             reduce using rule 184 (exp -> ID listArray .)
    RWHILE          reduce using rule 184 (exp -> ID listArray .)
    RFOR            reduce using rule 184 (exp -> ID listArray .)
    RRETURN         reduce using rule 184 (exp -> ID listArray .)
    RBREAK          reduce using rule 184 (exp -> ID listArray .)
    RCONTINUE       reduce using rule 184 (exp -> ID listArray .)
    PTCOMA          reduce using rule 184 (exp -> ID listArray .)
    PARDER          reduce using rule 184 (exp -> ID listArray .)
    COMA            reduce using rule 184 (exp -> ID listArray .)
    DOSPT           reduce using rule 184 (exp -> ID listArray .)
    CORDER          reduce using rule 184 (exp -> ID listArray .)
    RELSE           reduce using rule 184 (exp -> ID listArray .)
    RELSEIF         reduce using rule 184 (exp -> ID listArray .)
    CORIZQ          shift and go to state 200


state 119

    (133) listArray -> CORIZQ . exp CORDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 201

state 120

    (151) exp -> UPPERCASE PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 202

state 121

    (175) exp -> PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 203
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 122

    (152) exp -> LOWERCASE PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 204

state 123

    (153) exp -> LOG PARIZQ . exp COMA exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 205

state 124

    (154) exp -> LOG10 PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 206

state 125

    (155) exp -> SIN PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 207

state 126

    (156) exp -> COS PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 208

state 127

    (157) exp -> TAN PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 209

state 128

    (158) exp -> SQRT PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 210

state 129

    (159) exp -> PARSE PARIZQ . typeDef COMA exp PARDER
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 211

state 130

    (160) exp -> TRUNC PARIZQ . typeDef COMA exp PARDER
    (161) exp -> TRUNC PARIZQ . exp PARDER
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    typeDef                        shift and go to state 218
    exp                            shift and go to state 219

state 131

    (162) exp -> MFLOAT PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 220

state 132

    (163) exp -> MSTRING PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 221

state 133

    (164) exp -> TYPEOF PARIZQ . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 222

state 134

    (185) exp -> CORIZQ listValues . CORDER
    (186) exp -> CORIZQ listValues . CORDER DOSPT DOSPT typeDef
    (95) listValues -> listValues . COMA exp

    CORDER          shift and go to state 223
    COMA            shift and go to state 165


state 135

    (187) exp -> CORIZQ CORDER .

    END             reduce using rule 187 (exp -> CORIZQ CORDER .)
    MAS             reduce using rule 187 (exp -> CORIZQ CORDER .)
    MENOS           reduce using rule 187 (exp -> CORIZQ CORDER .)
    MULTIPLICACION  reduce using rule 187 (exp -> CORIZQ CORDER .)
    DIVISION        reduce using rule 187 (exp -> CORIZQ CORDER .)
    POTENCIA        reduce using rule 187 (exp -> CORIZQ CORDER .)
    MODULO          reduce using rule 187 (exp -> CORIZQ CORDER .)
    IGUALIGUAL      reduce using rule 187 (exp -> CORIZQ CORDER .)
    DISTINTO        reduce using rule 187 (exp -> CORIZQ CORDER .)
    MAYOR           reduce using rule 187 (exp -> CORIZQ CORDER .)
    MENOR           reduce using rule 187 (exp -> CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 187 (exp -> CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 187 (exp -> CORIZQ CORDER .)
    ANDD            reduce using rule 187 (exp -> CORIZQ CORDER .)
    ORR             reduce using rule 187 (exp -> CORIZQ CORDER .)
    PRINT           reduce using rule 187 (exp -> CORIZQ CORDER .)
    PRINTLN         reduce using rule 187 (exp -> CORIZQ CORDER .)
    ID              reduce using rule 187 (exp -> CORIZQ CORDER .)
    GLOBAL          reduce using rule 187 (exp -> CORIZQ CORDER .)
    LOCAL           reduce using rule 187 (exp -> CORIZQ CORDER .)
    RIF             reduce using rule 187 (exp -> CORIZQ CORDER .)
    RWHILE          reduce using rule 187 (exp -> CORIZQ CORDER .)
    RFOR            reduce using rule 187 (exp -> CORIZQ CORDER .)
    RRETURN         reduce using rule 187 (exp -> CORIZQ CORDER .)
    RBREAK          reduce using rule 187 (exp -> CORIZQ CORDER .)
    RCONTINUE       reduce using rule 187 (exp -> CORIZQ CORDER .)
    PTCOMA          reduce using rule 187 (exp -> CORIZQ CORDER .)
    PARDER          reduce using rule 187 (exp -> CORIZQ CORDER .)
    COMA            reduce using rule 187 (exp -> CORIZQ CORDER .)
    DOSPT           reduce using rule 187 (exp -> CORIZQ CORDER .)
    CORDER          reduce using rule 187 (exp -> CORIZQ CORDER .)
    RELSE           reduce using rule 187 (exp -> CORIZQ CORDER .)
    RELSEIF         reduce using rule 187 (exp -> CORIZQ CORDER .)


state 136

    (119) whileSt -> RWHILE exp blockc .

    PRINT           reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    PRINTLN         reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    ID              reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    GLOBAL          reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    LOCAL           reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    FUNCTION        reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RIF             reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RWHILE          reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RFOR            reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RRETURN         reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RBREAK          reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RCONTINUE       reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    $end            reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    END             reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RELSE           reduce using rule 119 (whileSt -> RWHILE exp blockc .)
    RELSEIF         reduce using rule 119 (whileSt -> RWHILE exp blockc .)


state 137

    (124) blockc -> instructionsc . END PTCOMA
    (6) instructionsc -> instructionsc . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 224
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    instructionc                   shift and go to state 225
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 138

    (125) blockc -> END . PTCOMA

    PTCOMA          shift and go to state 226


state 139

    (7) instructionsc -> instructionc .

    END             reduce using rule 7 (instructionsc -> instructionc .)
    PRINT           reduce using rule 7 (instructionsc -> instructionc .)
    PRINTLN         reduce using rule 7 (instructionsc -> instructionc .)
    ID              reduce using rule 7 (instructionsc -> instructionc .)
    LOCAL           reduce using rule 7 (instructionsc -> instructionc .)
    GLOBAL          reduce using rule 7 (instructionsc -> instructionc .)
    RIF             reduce using rule 7 (instructionsc -> instructionc .)
    RWHILE          reduce using rule 7 (instructionsc -> instructionc .)
    RFOR            reduce using rule 7 (instructionsc -> instructionc .)
    RRETURN         reduce using rule 7 (instructionsc -> instructionc .)
    RBREAK          reduce using rule 7 (instructionsc -> instructionc .)
    RCONTINUE       reduce using rule 7 (instructionsc -> instructionc .)
    RELSE           reduce using rule 7 (instructionsc -> instructionc .)
    RELSEIF         reduce using rule 7 (instructionsc -> instructionc .)


state 140

    (29) instructionc -> p_print .

    END             reduce using rule 29 (instructionc -> p_print .)
    PRINT           reduce using rule 29 (instructionc -> p_print .)
    PRINTLN         reduce using rule 29 (instructionc -> p_print .)
    ID              reduce using rule 29 (instructionc -> p_print .)
    LOCAL           reduce using rule 29 (instructionc -> p_print .)
    GLOBAL          reduce using rule 29 (instructionc -> p_print .)
    RIF             reduce using rule 29 (instructionc -> p_print .)
    RWHILE          reduce using rule 29 (instructionc -> p_print .)
    RFOR            reduce using rule 29 (instructionc -> p_print .)
    RRETURN         reduce using rule 29 (instructionc -> p_print .)
    RBREAK          reduce using rule 29 (instructionc -> p_print .)
    RCONTINUE       reduce using rule 29 (instructionc -> p_print .)
    RELSE           reduce using rule 29 (instructionc -> p_print .)
    RELSEIF         reduce using rule 29 (instructionc -> p_print .)


state 141

    (30) instructionc -> p_println .

    END             reduce using rule 30 (instructionc -> p_println .)
    PRINT           reduce using rule 30 (instructionc -> p_println .)
    PRINTLN         reduce using rule 30 (instructionc -> p_println .)
    ID              reduce using rule 30 (instructionc -> p_println .)
    LOCAL           reduce using rule 30 (instructionc -> p_println .)
    GLOBAL          reduce using rule 30 (instructionc -> p_println .)
    RIF             reduce using rule 30 (instructionc -> p_println .)
    RWHILE          reduce using rule 30 (instructionc -> p_println .)
    RFOR            reduce using rule 30 (instructionc -> p_println .)
    RRETURN         reduce using rule 30 (instructionc -> p_println .)
    RBREAK          reduce using rule 30 (instructionc -> p_println .)
    RCONTINUE       reduce using rule 30 (instructionc -> p_println .)
    RELSE           reduce using rule 30 (instructionc -> p_println .)
    RELSEIF         reduce using rule 30 (instructionc -> p_println .)


state 142

    (31) instructionc -> declarationc .

    END             reduce using rule 31 (instructionc -> declarationc .)
    PRINT           reduce using rule 31 (instructionc -> declarationc .)
    PRINTLN         reduce using rule 31 (instructionc -> declarationc .)
    ID              reduce using rule 31 (instructionc -> declarationc .)
    LOCAL           reduce using rule 31 (instructionc -> declarationc .)
    GLOBAL          reduce using rule 31 (instructionc -> declarationc .)
    RIF             reduce using rule 31 (instructionc -> declarationc .)
    RWHILE          reduce using rule 31 (instructionc -> declarationc .)
    RFOR            reduce using rule 31 (instructionc -> declarationc .)
    RRETURN         reduce using rule 31 (instructionc -> declarationc .)
    RBREAK          reduce using rule 31 (instructionc -> declarationc .)
    RCONTINUE       reduce using rule 31 (instructionc -> declarationc .)
    RELSE           reduce using rule 31 (instructionc -> declarationc .)
    RELSEIF         reduce using rule 31 (instructionc -> declarationc .)


state 143

    (32) instructionc -> callFuncSt .

    END             reduce using rule 32 (instructionc -> callFuncSt .)
    PRINT           reduce using rule 32 (instructionc -> callFuncSt .)
    PRINTLN         reduce using rule 32 (instructionc -> callFuncSt .)
    ID              reduce using rule 32 (instructionc -> callFuncSt .)
    LOCAL           reduce using rule 32 (instructionc -> callFuncSt .)
    GLOBAL          reduce using rule 32 (instructionc -> callFuncSt .)
    RIF             reduce using rule 32 (instructionc -> callFuncSt .)
    RWHILE          reduce using rule 32 (instructionc -> callFuncSt .)
    RFOR            reduce using rule 32 (instructionc -> callFuncSt .)
    RRETURN         reduce using rule 32 (instructionc -> callFuncSt .)
    RBREAK          reduce using rule 32 (instructionc -> callFuncSt .)
    RCONTINUE       reduce using rule 32 (instructionc -> callFuncSt .)
    RELSE           reduce using rule 32 (instructionc -> callFuncSt .)
    RELSEIF         reduce using rule 32 (instructionc -> callFuncSt .)


state 144

    (33) instructionc -> ifStc .

    END             reduce using rule 33 (instructionc -> ifStc .)
    PRINT           reduce using rule 33 (instructionc -> ifStc .)
    PRINTLN         reduce using rule 33 (instructionc -> ifStc .)
    ID              reduce using rule 33 (instructionc -> ifStc .)
    LOCAL           reduce using rule 33 (instructionc -> ifStc .)
    GLOBAL          reduce using rule 33 (instructionc -> ifStc .)
    RIF             reduce using rule 33 (instructionc -> ifStc .)
    RWHILE          reduce using rule 33 (instructionc -> ifStc .)
    RFOR            reduce using rule 33 (instructionc -> ifStc .)
    RRETURN         reduce using rule 33 (instructionc -> ifStc .)
    RBREAK          reduce using rule 33 (instructionc -> ifStc .)
    RCONTINUE       reduce using rule 33 (instructionc -> ifStc .)
    RELSE           reduce using rule 33 (instructionc -> ifStc .)
    RELSEIF         reduce using rule 33 (instructionc -> ifStc .)


state 145

    (34) instructionc -> whileSt .

    END             reduce using rule 34 (instructionc -> whileSt .)
    PRINT           reduce using rule 34 (instructionc -> whileSt .)
    PRINTLN         reduce using rule 34 (instructionc -> whileSt .)
    ID              reduce using rule 34 (instructionc -> whileSt .)
    LOCAL           reduce using rule 34 (instructionc -> whileSt .)
    GLOBAL          reduce using rule 34 (instructionc -> whileSt .)
    RIF             reduce using rule 34 (instructionc -> whileSt .)
    RWHILE          reduce using rule 34 (instructionc -> whileSt .)
    RFOR            reduce using rule 34 (instructionc -> whileSt .)
    RRETURN         reduce using rule 34 (instructionc -> whileSt .)
    RBREAK          reduce using rule 34 (instructionc -> whileSt .)
    RCONTINUE       reduce using rule 34 (instructionc -> whileSt .)
    RELSE           reduce using rule 34 (instructionc -> whileSt .)
    RELSEIF         reduce using rule 34 (instructionc -> whileSt .)


state 146

    (35) instructionc -> forSt .

    END             reduce using rule 35 (instructionc -> forSt .)
    PRINT           reduce using rule 35 (instructionc -> forSt .)
    PRINTLN         reduce using rule 35 (instructionc -> forSt .)
    ID              reduce using rule 35 (instructionc -> forSt .)
    LOCAL           reduce using rule 35 (instructionc -> forSt .)
    GLOBAL          reduce using rule 35 (instructionc -> forSt .)
    RIF             reduce using rule 35 (instructionc -> forSt .)
    RWHILE          reduce using rule 35 (instructionc -> forSt .)
    RFOR            reduce using rule 35 (instructionc -> forSt .)
    RRETURN         reduce using rule 35 (instructionc -> forSt .)
    RBREAK          reduce using rule 35 (instructionc -> forSt .)
    RCONTINUE       reduce using rule 35 (instructionc -> forSt .)
    RELSE           reduce using rule 35 (instructionc -> forSt .)
    RELSEIF         reduce using rule 35 (instructionc -> forSt .)


state 147

    (36) instructionc -> returnST .

    END             reduce using rule 36 (instructionc -> returnST .)
    PRINT           reduce using rule 36 (instructionc -> returnST .)
    PRINTLN         reduce using rule 36 (instructionc -> returnST .)
    ID              reduce using rule 36 (instructionc -> returnST .)
    LOCAL           reduce using rule 36 (instructionc -> returnST .)
    GLOBAL          reduce using rule 36 (instructionc -> returnST .)
    RIF             reduce using rule 36 (instructionc -> returnST .)
    RWHILE          reduce using rule 36 (instructionc -> returnST .)
    RFOR            reduce using rule 36 (instructionc -> returnST .)
    RRETURN         reduce using rule 36 (instructionc -> returnST .)
    RBREAK          reduce using rule 36 (instructionc -> returnST .)
    RCONTINUE       reduce using rule 36 (instructionc -> returnST .)
    RELSE           reduce using rule 36 (instructionc -> returnST .)
    RELSEIF         reduce using rule 36 (instructionc -> returnST .)


state 148

    (37) instructionc -> breakST .

    END             reduce using rule 37 (instructionc -> breakST .)
    PRINT           reduce using rule 37 (instructionc -> breakST .)
    PRINTLN         reduce using rule 37 (instructionc -> breakST .)
    ID              reduce using rule 37 (instructionc -> breakST .)
    LOCAL           reduce using rule 37 (instructionc -> breakST .)
    GLOBAL          reduce using rule 37 (instructionc -> breakST .)
    RIF             reduce using rule 37 (instructionc -> breakST .)
    RWHILE          reduce using rule 37 (instructionc -> breakST .)
    RFOR            reduce using rule 37 (instructionc -> breakST .)
    RRETURN         reduce using rule 37 (instructionc -> breakST .)
    RBREAK          reduce using rule 37 (instructionc -> breakST .)
    RCONTINUE       reduce using rule 37 (instructionc -> breakST .)
    RELSE           reduce using rule 37 (instructionc -> breakST .)
    RELSEIF         reduce using rule 37 (instructionc -> breakST .)


state 149

    (38) instructionc -> continueST .

    END             reduce using rule 38 (instructionc -> continueST .)
    PRINT           reduce using rule 38 (instructionc -> continueST .)
    PRINTLN         reduce using rule 38 (instructionc -> continueST .)
    ID              reduce using rule 38 (instructionc -> continueST .)
    LOCAL           reduce using rule 38 (instructionc -> continueST .)
    GLOBAL          reduce using rule 38 (instructionc -> continueST .)
    RIF             reduce using rule 38 (instructionc -> continueST .)
    RWHILE          reduce using rule 38 (instructionc -> continueST .)
    RFOR            reduce using rule 38 (instructionc -> continueST .)
    RRETURN         reduce using rule 38 (instructionc -> continueST .)
    RBREAK          reduce using rule 38 (instructionc -> continueST .)
    RCONTINUE       reduce using rule 38 (instructionc -> continueST .)
    RELSE           reduce using rule 38 (instructionc -> continueST .)
    RELSEIF         reduce using rule 38 (instructionc -> continueST .)


state 150

    (71) declarationc -> ID . IGUAL exp PTCOMA
    (72) declarationc -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> ID . IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (92) callFuncSt -> ID . parametersCallFunc PTCOMA
    (93) parametersCallFunc -> . PARIZQ listValues PARDER
    (94) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 227
    PARIZQ          shift and go to state 32

    parametersCallFunc             shift and go to state 31

state 151

    (73) declarationc -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> LOCAL . ID IGUAL exp PTCOMA
    (75) declarationc -> LOCAL . ID PTCOMA
    (83) declarationc -> LOCAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> LOCAL . ID IGUAL CORIZQ exps CORDER PTCOMA

    ID              shift and go to state 228


state 152

    (76) declarationc -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> GLOBAL . ID IGUAL exp PTCOMA
    (78) declarationc -> GLOBAL . ID PTCOMA
    (81) declarationc -> GLOBAL . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL . ID IGUAL CORIZQ exps CORDER PTCOMA

    ID              shift and go to state 229


state 153

    (108) ifStc -> RIF . exp END PTCOMA
    (109) ifStc -> RIF . exp blockifc END PTCOMA
    (110) ifStc -> RIF . exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> RIF . exp blockifc RELSE END PTCOMA
    (112) ifStc -> RIF . exp blockifc elseifStc END PTCOMA
    (113) ifStc -> RIF . exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> RIF . exp blockifc elseifStc RELSE END PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 230

state 154

    (120) forSt -> RFOR parameter RIN . exp DOSPT exp blockc
    (121) forSt -> RFOR parameter RIN . exp blockc
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 231

state 155

    (90) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 232


state 156

    (128) returnST -> RRETURN exp PTCOMA .

    PRINT           reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    PRINTLN         reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    ID              reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    GLOBAL          reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    LOCAL           reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    FUNCTION        reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RIF             reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RWHILE          reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RFOR            reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RRETURN         reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RBREAK          reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RCONTINUE       reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    $end            reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    END             reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RELSE           reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)
    RELSEIF         reduce using rule 128 (returnST -> RRETURN exp PTCOMA .)


state 157

    (39) p_print -> PRINT PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 233


state 158

    (41) exps -> exps COMA . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 234

state 159

    (40) p_println -> PRINTLN PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 235


state 160

    (43) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 43 (declaration -> ID IGUAL exp PTCOMA .)


state 161

    (44) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 236


state 162

    (51) declaration -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (52) declaration -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 237
    COMA            shift and go to state 158


state 163

    (42) exps -> exp .
    (96) listValues -> exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

  ! reduce/reduce conflict for CORDER resolved using rule 42 (exps -> exp .)
  ! reduce/reduce conflict for COMA resolved using rule 42 (exps -> exp .)
    CORDER          reduce using rule 42 (exps -> exp .)
    COMA            reduce using rule 42 (exps -> exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99

  ! CORDER          [ reduce using rule 96 (listValues -> exp .) ]
  ! COMA            [ reduce using rule 96 (listValues -> exp .) ]


state 164

    (93) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    END             reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAS             reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENOS           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MULTIPLICACION  reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DIVISION        reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    POTENCIA        reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MODULO          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    IGUALIGUAL      reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DISTINTO        reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAYOR           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENOR           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MAYORIGUAL      reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    MENORIGUAL      reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ANDD            reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ORR             reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PRINT           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PRINTLN         reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    ID              reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    GLOBAL          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    LOCAL           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RIF             reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RWHILE          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RFOR            reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RRETURN         reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RBREAK          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RCONTINUE       reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    PARDER          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    COMA            reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    DOSPT           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    CORDER          reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RELSE           reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)
    RELSEIF         reduce using rule 93 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 165

    (95) listValues -> listValues COMA . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 238

state 166

    (45) declaration -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (46) declaration -> GLOBAL ID IGUAL exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    DOSPT           shift and go to state 239
    PTCOMA          shift and go to state 240
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 167

    (53) declaration -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 241
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 168

    (48) declaration -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (49) declaration -> LOCAL ID IGUAL exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    DOSPT           shift and go to state 242
    PTCOMA          shift and go to state 243
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 169

    (55) declaration -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 244
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 170

    (85) function -> FUNCTION ID parametersFunc blockf .

    PRINT           reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    PRINTLN         reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    ID              reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    GLOBAL          reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    LOCAL           reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    FUNCTION        reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    RIF             reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    RWHILE          reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    RFOR            reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    RRETURN         reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    RBREAK          reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    RCONTINUE       reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)
    $end            reduce using rule 85 (function -> FUNCTION ID parametersFunc blockf .)


state 171

    (122) blockf -> instructionsf . END PTCOMA
    (4) instructionsf -> instructionsf . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 245
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    instructionf                   shift and go to state 196
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 172

    (123) blockf -> END . PTCOMA

    PTCOMA          shift and go to state 246


state 173

    (86) parametersFunc -> PARIZQ parameters . PARDER
    (88) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 247
    COMA            shift and go to state 248


state 174

    (87) parametersFunc -> PARIZQ PARDER .

    END             reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    RRETURN         reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    RBREAK          reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)
    RCONTINUE       reduce using rule 87 (parametersFunc -> PARIZQ PARDER .)


state 175

    (89) parameters -> parameter .

    PARDER          reduce using rule 89 (parameters -> parameter .)
    COMA            reduce using rule 89 (parameters -> parameter .)


state 176

    (97) ifSt -> RIF exp END PTCOMA .

    PRINT           reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    ID              reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    FUNCTION        reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RIF             reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RRETURN         reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RBREAK          reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RCONTINUE       reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    $end            reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    END             reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 97 (ifSt -> RIF exp END PTCOMA .)


state 177

    (98) ifSt -> RIF exp blockiff END . PTCOMA

    PTCOMA          shift and go to state 249


state 178

    (99) ifSt -> RIF exp blockiff RELSE . blockiff END PTCOMA
    (100) ifSt -> RIF exp blockiff RELSE . END PTCOMA
    (126) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 251
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockiff                       shift and go to state 250
    instructionsf                  shift and go to state 100
    instructionf                   shift and go to state 101
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 179

    (101) ifSt -> RIF exp blockiff elseifSt . END PTCOMA
    (102) ifSt -> RIF exp blockiff elseifSt . RELSE blockiff END PTCOMA
    (103) ifSt -> RIF exp blockiff elseifSt . RELSE END PTCOMA
    (104) elseifSt -> elseifSt . conelseif
    (106) conelseif -> . RELSEIF exp blockiff
    (107) conelseif -> . RELSEIF exp

    END             shift and go to state 252
    RELSE           shift and go to state 253
    RELSEIF         shift and go to state 181

    conelseif                      shift and go to state 254

state 180

    (105) elseifSt -> conelseif .

    END             reduce using rule 105 (elseifSt -> conelseif .)
    RELSE           reduce using rule 105 (elseifSt -> conelseif .)
    RELSEIF         reduce using rule 105 (elseifSt -> conelseif .)


state 181

    (106) conelseif -> RELSEIF . exp blockiff
    (107) conelseif -> RELSEIF . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 255

state 182

    (134) exp -> exp MAS exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 134 (exp -> exp MAS exp .)
    MAS             reduce using rule 134 (exp -> exp MAS exp .)
    MENOS           reduce using rule 134 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 134 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 134 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 134 (exp -> exp MAS exp .)
    MENOR           reduce using rule 134 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 134 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 134 (exp -> exp MAS exp .)
    ANDD            reduce using rule 134 (exp -> exp MAS exp .)
    ORR             reduce using rule 134 (exp -> exp MAS exp .)
    PRINT           reduce using rule 134 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 134 (exp -> exp MAS exp .)
    ID              reduce using rule 134 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 134 (exp -> exp MAS exp .)
    LOCAL           reduce using rule 134 (exp -> exp MAS exp .)
    RIF             reduce using rule 134 (exp -> exp MAS exp .)
    RWHILE          reduce using rule 134 (exp -> exp MAS exp .)
    RFOR            reduce using rule 134 (exp -> exp MAS exp .)
    RRETURN         reduce using rule 134 (exp -> exp MAS exp .)
    RBREAK          reduce using rule 134 (exp -> exp MAS exp .)
    RCONTINUE       reduce using rule 134 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 134 (exp -> exp MAS exp .)
    PARDER          reduce using rule 134 (exp -> exp MAS exp .)
    COMA            reduce using rule 134 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 134 (exp -> exp MAS exp .)
    CORDER          reduce using rule 134 (exp -> exp MAS exp .)
    RELSE           reduce using rule 134 (exp -> exp MAS exp .)
    RELSEIF         reduce using rule 134 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MULTIPLICACION  [ reduce using rule 134 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 134 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 134 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 134 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 183

    (135) exp -> exp MENOS exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 135 (exp -> exp MENOS exp .)
    MAS             reduce using rule 135 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 135 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 135 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 135 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 135 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 135 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 135 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 135 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 135 (exp -> exp MENOS exp .)
    ORR             reduce using rule 135 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 135 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 135 (exp -> exp MENOS exp .)
    ID              reduce using rule 135 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 135 (exp -> exp MENOS exp .)
    LOCAL           reduce using rule 135 (exp -> exp MENOS exp .)
    RIF             reduce using rule 135 (exp -> exp MENOS exp .)
    RWHILE          reduce using rule 135 (exp -> exp MENOS exp .)
    RFOR            reduce using rule 135 (exp -> exp MENOS exp .)
    RRETURN         reduce using rule 135 (exp -> exp MENOS exp .)
    RBREAK          reduce using rule 135 (exp -> exp MENOS exp .)
    RCONTINUE       reduce using rule 135 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 135 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 135 (exp -> exp MENOS exp .)
    COMA            reduce using rule 135 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 135 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 135 (exp -> exp MENOS exp .)
    RELSE           reduce using rule 135 (exp -> exp MENOS exp .)
    RELSEIF         reduce using rule 135 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MULTIPLICACION  [ reduce using rule 135 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 135 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 135 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 135 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 184

    (136) exp -> exp MULTIPLICACION exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    PRINTLN         reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    ID              reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    GLOBAL          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    LOCAL           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RIF             reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RWHILE          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RFOR            reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RRETURN         reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RBREAK          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RCONTINUE       reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RELSE           reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    RELSEIF         reduce using rule 136 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 90

  ! POTENCIA        [ reduce using rule 136 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! MULTIPLICACION  [ shift and go to state 88 ]
  ! DIVISION        [ shift and go to state 89 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 185

    (137) exp -> exp DIVISION exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 137 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 137 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 137 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 137 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 137 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 137 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 137 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 137 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 137 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 137 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 137 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 137 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 137 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 137 (exp -> exp DIVISION exp .)
    PRINT           reduce using rule 137 (exp -> exp DIVISION exp .)
    PRINTLN         reduce using rule 137 (exp -> exp DIVISION exp .)
    ID              reduce using rule 137 (exp -> exp DIVISION exp .)
    GLOBAL          reduce using rule 137 (exp -> exp DIVISION exp .)
    LOCAL           reduce using rule 137 (exp -> exp DIVISION exp .)
    RIF             reduce using rule 137 (exp -> exp DIVISION exp .)
    RWHILE          reduce using rule 137 (exp -> exp DIVISION exp .)
    RFOR            reduce using rule 137 (exp -> exp DIVISION exp .)
    RRETURN         reduce using rule 137 (exp -> exp DIVISION exp .)
    RBREAK          reduce using rule 137 (exp -> exp DIVISION exp .)
    RCONTINUE       reduce using rule 137 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 137 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 137 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 137 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 137 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 137 (exp -> exp DIVISION exp .)
    RELSE           reduce using rule 137 (exp -> exp DIVISION exp .)
    RELSEIF         reduce using rule 137 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 90

  ! POTENCIA        [ reduce using rule 137 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! MULTIPLICACION  [ shift and go to state 88 ]
  ! DIVISION        [ shift and go to state 89 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 186

    (138) exp -> exp POTENCIA exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 138 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 138 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 138 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 138 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 138 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 138 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 138 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 138 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 138 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 138 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 138 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 138 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 138 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 138 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 138 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 138 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 138 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 138 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 138 (exp -> exp POTENCIA exp .)
    LOCAL           reduce using rule 138 (exp -> exp POTENCIA exp .)
    RIF             reduce using rule 138 (exp -> exp POTENCIA exp .)
    RWHILE          reduce using rule 138 (exp -> exp POTENCIA exp .)
    RFOR            reduce using rule 138 (exp -> exp POTENCIA exp .)
    RRETURN         reduce using rule 138 (exp -> exp POTENCIA exp .)
    RBREAK          reduce using rule 138 (exp -> exp POTENCIA exp .)
    RCONTINUE       reduce using rule 138 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 138 (exp -> exp POTENCIA exp .)
    PARDER          reduce using rule 138 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 138 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 138 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 138 (exp -> exp POTENCIA exp .)
    RELSE           reduce using rule 138 (exp -> exp POTENCIA exp .)
    RELSEIF         reduce using rule 138 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! MULTIPLICACION  [ shift and go to state 88 ]
  ! DIVISION        [ shift and go to state 89 ]
  ! POTENCIA        [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 187

    (139) exp -> exp MODULO exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 139 (exp -> exp MODULO exp .)
    MAS             reduce using rule 139 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 139 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 139 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 139 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 139 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 139 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 139 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 139 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 139 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 139 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 139 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 139 (exp -> exp MODULO exp .)
    ORR             reduce using rule 139 (exp -> exp MODULO exp .)
    PRINT           reduce using rule 139 (exp -> exp MODULO exp .)
    PRINTLN         reduce using rule 139 (exp -> exp MODULO exp .)
    ID              reduce using rule 139 (exp -> exp MODULO exp .)
    GLOBAL          reduce using rule 139 (exp -> exp MODULO exp .)
    LOCAL           reduce using rule 139 (exp -> exp MODULO exp .)
    RIF             reduce using rule 139 (exp -> exp MODULO exp .)
    RWHILE          reduce using rule 139 (exp -> exp MODULO exp .)
    RFOR            reduce using rule 139 (exp -> exp MODULO exp .)
    RRETURN         reduce using rule 139 (exp -> exp MODULO exp .)
    RBREAK          reduce using rule 139 (exp -> exp MODULO exp .)
    RCONTINUE       reduce using rule 139 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 139 (exp -> exp MODULO exp .)
    PARDER          reduce using rule 139 (exp -> exp MODULO exp .)
    COMA            reduce using rule 139 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 139 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 139 (exp -> exp MODULO exp .)
    RELSE           reduce using rule 139 (exp -> exp MODULO exp .)
    RELSEIF         reduce using rule 139 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 90

  ! POTENCIA        [ reduce using rule 139 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 86 ]
  ! MENOS           [ shift and go to state 87 ]
  ! MULTIPLICACION  [ shift and go to state 88 ]
  ! DIVISION        [ shift and go to state 89 ]
  ! MODULO          [ shift and go to state 91 ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 188

    (141) exp -> exp IGUALIGUAL exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    ANDD            reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    ORR             reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    PRINT           reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    PRINTLN         reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    ID              reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    GLOBAL          reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    LOCAL           reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RIF             reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RWHILE          reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RFOR            reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RRETURN         reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RBREAK          reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RCONTINUE       reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RELSE           reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    RELSEIF         reduce using rule 141 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 141 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 141 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 141 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 141 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 141 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 141 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 189

    (142) exp -> exp DISTINTO exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 142 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 142 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 142 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 142 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 142 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 142 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 142 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 142 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 142 (exp -> exp DISTINTO exp .)
    PRINT           reduce using rule 142 (exp -> exp DISTINTO exp .)
    PRINTLN         reduce using rule 142 (exp -> exp DISTINTO exp .)
    ID              reduce using rule 142 (exp -> exp DISTINTO exp .)
    GLOBAL          reduce using rule 142 (exp -> exp DISTINTO exp .)
    LOCAL           reduce using rule 142 (exp -> exp DISTINTO exp .)
    RIF             reduce using rule 142 (exp -> exp DISTINTO exp .)
    RWHILE          reduce using rule 142 (exp -> exp DISTINTO exp .)
    RFOR            reduce using rule 142 (exp -> exp DISTINTO exp .)
    RRETURN         reduce using rule 142 (exp -> exp DISTINTO exp .)
    RBREAK          reduce using rule 142 (exp -> exp DISTINTO exp .)
    RCONTINUE       reduce using rule 142 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 142 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 142 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 142 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 142 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 142 (exp -> exp DISTINTO exp .)
    RELSE           reduce using rule 142 (exp -> exp DISTINTO exp .)
    RELSEIF         reduce using rule 142 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 142 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 142 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 142 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 142 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 142 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 142 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 190

    (143) exp -> exp MAYOR exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 143 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 143 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 143 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 143 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 143 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 143 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 143 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 143 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 143 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 143 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 143 (exp -> exp MAYOR exp .)
    ID              reduce using rule 143 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 143 (exp -> exp MAYOR exp .)
    LOCAL           reduce using rule 143 (exp -> exp MAYOR exp .)
    RIF             reduce using rule 143 (exp -> exp MAYOR exp .)
    RWHILE          reduce using rule 143 (exp -> exp MAYOR exp .)
    RFOR            reduce using rule 143 (exp -> exp MAYOR exp .)
    RRETURN         reduce using rule 143 (exp -> exp MAYOR exp .)
    RBREAK          reduce using rule 143 (exp -> exp MAYOR exp .)
    RCONTINUE       reduce using rule 143 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 143 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 143 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 143 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 143 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 143 (exp -> exp MAYOR exp .)
    RELSE           reduce using rule 143 (exp -> exp MAYOR exp .)
    RELSEIF         reduce using rule 143 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 143 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 143 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 143 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 143 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 143 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 143 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 191

    (144) exp -> exp MENOR exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 144 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 144 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 144 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 144 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 144 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 144 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 144 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 144 (exp -> exp MENOR exp .)
    ORR             reduce using rule 144 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 144 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 144 (exp -> exp MENOR exp .)
    ID              reduce using rule 144 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 144 (exp -> exp MENOR exp .)
    LOCAL           reduce using rule 144 (exp -> exp MENOR exp .)
    RIF             reduce using rule 144 (exp -> exp MENOR exp .)
    RWHILE          reduce using rule 144 (exp -> exp MENOR exp .)
    RFOR            reduce using rule 144 (exp -> exp MENOR exp .)
    RRETURN         reduce using rule 144 (exp -> exp MENOR exp .)
    RBREAK          reduce using rule 144 (exp -> exp MENOR exp .)
    RCONTINUE       reduce using rule 144 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 144 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 144 (exp -> exp MENOR exp .)
    COMA            reduce using rule 144 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 144 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 144 (exp -> exp MENOR exp .)
    RELSE           reduce using rule 144 (exp -> exp MENOR exp .)
    RELSEIF         reduce using rule 144 (exp -> exp MENOR exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 144 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 144 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 144 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 144 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 144 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 144 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 192

    (145) exp -> exp MAYORIGUAL exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    LOCAL           reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RIF             reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RWHILE          reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RFOR            reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RRETURN         reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RBREAK          reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RCONTINUE       reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RELSE           reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    RELSEIF         reduce using rule 145 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 145 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 145 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 145 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 145 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 145 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 145 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 193

    (146) exp -> exp MENORIGUAL exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    LOCAL           reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RIF             reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RWHILE          reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RFOR            reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RRETURN         reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RBREAK          reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RCONTINUE       reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RELSE           reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    RELSEIF         reduce using rule 146 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91

  ! MAS             [ reduce using rule 146 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 146 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 146 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 146 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 146 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 146 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 92 ]
  ! DISTINTO        [ shift and go to state 93 ]
  ! MAYOR           [ shift and go to state 94 ]
  ! MENOR           [ shift and go to state 95 ]
  ! MAYORIGUAL      [ shift and go to state 96 ]
  ! MENORIGUAL      [ shift and go to state 97 ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 194

    (147) exp -> exp ANDD exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 147 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 147 (exp -> exp ANDD exp .)
    PRINT           reduce using rule 147 (exp -> exp ANDD exp .)
    PRINTLN         reduce using rule 147 (exp -> exp ANDD exp .)
    ID              reduce using rule 147 (exp -> exp ANDD exp .)
    GLOBAL          reduce using rule 147 (exp -> exp ANDD exp .)
    LOCAL           reduce using rule 147 (exp -> exp ANDD exp .)
    RIF             reduce using rule 147 (exp -> exp ANDD exp .)
    RWHILE          reduce using rule 147 (exp -> exp ANDD exp .)
    RFOR            reduce using rule 147 (exp -> exp ANDD exp .)
    RRETURN         reduce using rule 147 (exp -> exp ANDD exp .)
    RBREAK          reduce using rule 147 (exp -> exp ANDD exp .)
    RCONTINUE       reduce using rule 147 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 147 (exp -> exp ANDD exp .)
    PARDER          reduce using rule 147 (exp -> exp ANDD exp .)
    COMA            reduce using rule 147 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 147 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 147 (exp -> exp ANDD exp .)
    RELSE           reduce using rule 147 (exp -> exp ANDD exp .)
    RELSEIF         reduce using rule 147 (exp -> exp ANDD exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ORR             shift and go to state 99

  ! MAS             [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 147 (exp -> exp ANDD exp .) ]
  ! ANDD            [ shift and go to state 98 ]


state 195

    (148) exp -> exp ORR exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    END             reduce using rule 148 (exp -> exp ORR exp .)
    ANDD            reduce using rule 148 (exp -> exp ORR exp .)
    ORR             reduce using rule 148 (exp -> exp ORR exp .)
    PRINT           reduce using rule 148 (exp -> exp ORR exp .)
    PRINTLN         reduce using rule 148 (exp -> exp ORR exp .)
    ID              reduce using rule 148 (exp -> exp ORR exp .)
    GLOBAL          reduce using rule 148 (exp -> exp ORR exp .)
    LOCAL           reduce using rule 148 (exp -> exp ORR exp .)
    RIF             reduce using rule 148 (exp -> exp ORR exp .)
    RWHILE          reduce using rule 148 (exp -> exp ORR exp .)
    RFOR            reduce using rule 148 (exp -> exp ORR exp .)
    RRETURN         reduce using rule 148 (exp -> exp ORR exp .)
    RBREAK          reduce using rule 148 (exp -> exp ORR exp .)
    RCONTINUE       reduce using rule 148 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 148 (exp -> exp ORR exp .)
    PARDER          reduce using rule 148 (exp -> exp ORR exp .)
    COMA            reduce using rule 148 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 148 (exp -> exp ORR exp .)
    CORDER          reduce using rule 148 (exp -> exp ORR exp .)
    RELSE           reduce using rule 148 (exp -> exp ORR exp .)
    RELSEIF         reduce using rule 148 (exp -> exp ORR exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97

  ! MAS             [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 148 (exp -> exp ORR exp .) ]
  ! ANDD            [ shift and go to state 98 ]
  ! ORR             [ shift and go to state 99 ]


state 196

    (4) instructionsf -> instructionsf instructionf .

    PRINT           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    PRINTLN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    ID              reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    GLOBAL          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    LOCAL           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RIF             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RWHILE          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RFOR            reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RRETURN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RBREAK          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RCONTINUE       reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    END             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSE           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSEIF         reduce using rule 4 (instructionsf -> instructionsf instructionf .)


state 197

    (57) declarationf -> ID IGUAL . exp PTCOMA
    (58) declarationf -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (65) declarationf -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (66) declarationf -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 257
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 256

state 198

    (59) declarationf -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> GLOBAL ID . IGUAL exp PTCOMA
    (61) declarationf -> GLOBAL ID . PTCOMA
    (67) declarationf -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA

    IGUAL           shift and go to state 258
    PTCOMA          shift and go to state 259


state 199

    (62) declarationf -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> LOCAL ID . IGUAL exp PTCOMA
    (64) declarationf -> LOCAL ID . PTCOMA
    (69) declarationf -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA

    IGUAL           shift and go to state 260
    PTCOMA          shift and go to state 261


state 200

    (132) listArray -> listArray CORIZQ . exp CORDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 262

state 201

    (133) listArray -> CORIZQ exp . CORDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    CORDER          shift and go to state 263
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 202

    (151) exp -> UPPERCASE PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 264
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 203

    (175) exp -> PARIZQ exp PARDER .

    END             reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    PRINT           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    ID              reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    LOCAL           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RIF             reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RWHILE          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RFOR            reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RRETURN         reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RBREAK          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    PARDER          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RELSE           reduce using rule 175 (exp -> PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 175 (exp -> PARIZQ exp PARDER .)


state 204

    (152) exp -> LOWERCASE PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 265
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 205

    (153) exp -> LOG PARIZQ exp . COMA exp PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    COMA            shift and go to state 266
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 206

    (154) exp -> LOG10 PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 267
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 207

    (155) exp -> SIN PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 268
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 208

    (156) exp -> COS PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 269
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 209

    (157) exp -> TAN PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 270
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 210

    (158) exp -> SQRT PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 271
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 211

    (159) exp -> PARSE PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 272


state 212

    (165) typeDef -> RINT .

    COMA            reduce using rule 165 (typeDef -> RINT .)
    RIN             reduce using rule 165 (typeDef -> RINT .)
    PARDER          reduce using rule 165 (typeDef -> RINT .)
    PTCOMA          reduce using rule 165 (typeDef -> RINT .)
    END             reduce using rule 165 (typeDef -> RINT .)
    MAS             reduce using rule 165 (typeDef -> RINT .)
    MENOS           reduce using rule 165 (typeDef -> RINT .)
    MULTIPLICACION  reduce using rule 165 (typeDef -> RINT .)
    DIVISION        reduce using rule 165 (typeDef -> RINT .)
    POTENCIA        reduce using rule 165 (typeDef -> RINT .)
    MODULO          reduce using rule 165 (typeDef -> RINT .)
    IGUALIGUAL      reduce using rule 165 (typeDef -> RINT .)
    DISTINTO        reduce using rule 165 (typeDef -> RINT .)
    MAYOR           reduce using rule 165 (typeDef -> RINT .)
    MENOR           reduce using rule 165 (typeDef -> RINT .)
    MAYORIGUAL      reduce using rule 165 (typeDef -> RINT .)
    MENORIGUAL      reduce using rule 165 (typeDef -> RINT .)
    ANDD            reduce using rule 165 (typeDef -> RINT .)
    ORR             reduce using rule 165 (typeDef -> RINT .)
    PRINT           reduce using rule 165 (typeDef -> RINT .)
    PRINTLN         reduce using rule 165 (typeDef -> RINT .)
    ID              reduce using rule 165 (typeDef -> RINT .)
    GLOBAL          reduce using rule 165 (typeDef -> RINT .)
    LOCAL           reduce using rule 165 (typeDef -> RINT .)
    RIF             reduce using rule 165 (typeDef -> RINT .)
    RWHILE          reduce using rule 165 (typeDef -> RINT .)
    RFOR            reduce using rule 165 (typeDef -> RINT .)
    RRETURN         reduce using rule 165 (typeDef -> RINT .)
    RBREAK          reduce using rule 165 (typeDef -> RINT .)
    RCONTINUE       reduce using rule 165 (typeDef -> RINT .)
    DOSPT           reduce using rule 165 (typeDef -> RINT .)
    CORDER          reduce using rule 165 (typeDef -> RINT .)
    RELSE           reduce using rule 165 (typeDef -> RINT .)
    RELSEIF         reduce using rule 165 (typeDef -> RINT .)


state 213

    (166) typeDef -> RFLOAT .

    COMA            reduce using rule 166 (typeDef -> RFLOAT .)
    RIN             reduce using rule 166 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 166 (typeDef -> RFLOAT .)
    PTCOMA          reduce using rule 166 (typeDef -> RFLOAT .)
    END             reduce using rule 166 (typeDef -> RFLOAT .)
    MAS             reduce using rule 166 (typeDef -> RFLOAT .)
    MENOS           reduce using rule 166 (typeDef -> RFLOAT .)
    MULTIPLICACION  reduce using rule 166 (typeDef -> RFLOAT .)
    DIVISION        reduce using rule 166 (typeDef -> RFLOAT .)
    POTENCIA        reduce using rule 166 (typeDef -> RFLOAT .)
    MODULO          reduce using rule 166 (typeDef -> RFLOAT .)
    IGUALIGUAL      reduce using rule 166 (typeDef -> RFLOAT .)
    DISTINTO        reduce using rule 166 (typeDef -> RFLOAT .)
    MAYOR           reduce using rule 166 (typeDef -> RFLOAT .)
    MENOR           reduce using rule 166 (typeDef -> RFLOAT .)
    MAYORIGUAL      reduce using rule 166 (typeDef -> RFLOAT .)
    MENORIGUAL      reduce using rule 166 (typeDef -> RFLOAT .)
    ANDD            reduce using rule 166 (typeDef -> RFLOAT .)
    ORR             reduce using rule 166 (typeDef -> RFLOAT .)
    PRINT           reduce using rule 166 (typeDef -> RFLOAT .)
    PRINTLN         reduce using rule 166 (typeDef -> RFLOAT .)
    ID              reduce using rule 166 (typeDef -> RFLOAT .)
    GLOBAL          reduce using rule 166 (typeDef -> RFLOAT .)
    LOCAL           reduce using rule 166 (typeDef -> RFLOAT .)
    RIF             reduce using rule 166 (typeDef -> RFLOAT .)
    RWHILE          reduce using rule 166 (typeDef -> RFLOAT .)
    RFOR            reduce using rule 166 (typeDef -> RFLOAT .)
    RRETURN         reduce using rule 166 (typeDef -> RFLOAT .)
    RBREAK          reduce using rule 166 (typeDef -> RFLOAT .)
    RCONTINUE       reduce using rule 166 (typeDef -> RFLOAT .)
    DOSPT           reduce using rule 166 (typeDef -> RFLOAT .)
    CORDER          reduce using rule 166 (typeDef -> RFLOAT .)
    RELSE           reduce using rule 166 (typeDef -> RFLOAT .)
    RELSEIF         reduce using rule 166 (typeDef -> RFLOAT .)


state 214

    (167) typeDef -> RSTRING .

    COMA            reduce using rule 167 (typeDef -> RSTRING .)
    RIN             reduce using rule 167 (typeDef -> RSTRING .)
    PARDER          reduce using rule 167 (typeDef -> RSTRING .)
    PTCOMA          reduce using rule 167 (typeDef -> RSTRING .)
    END             reduce using rule 167 (typeDef -> RSTRING .)
    MAS             reduce using rule 167 (typeDef -> RSTRING .)
    MENOS           reduce using rule 167 (typeDef -> RSTRING .)
    MULTIPLICACION  reduce using rule 167 (typeDef -> RSTRING .)
    DIVISION        reduce using rule 167 (typeDef -> RSTRING .)
    POTENCIA        reduce using rule 167 (typeDef -> RSTRING .)
    MODULO          reduce using rule 167 (typeDef -> RSTRING .)
    IGUALIGUAL      reduce using rule 167 (typeDef -> RSTRING .)
    DISTINTO        reduce using rule 167 (typeDef -> RSTRING .)
    MAYOR           reduce using rule 167 (typeDef -> RSTRING .)
    MENOR           reduce using rule 167 (typeDef -> RSTRING .)
    MAYORIGUAL      reduce using rule 167 (typeDef -> RSTRING .)
    MENORIGUAL      reduce using rule 167 (typeDef -> RSTRING .)
    ANDD            reduce using rule 167 (typeDef -> RSTRING .)
    ORR             reduce using rule 167 (typeDef -> RSTRING .)
    PRINT           reduce using rule 167 (typeDef -> RSTRING .)
    PRINTLN         reduce using rule 167 (typeDef -> RSTRING .)
    ID              reduce using rule 167 (typeDef -> RSTRING .)
    GLOBAL          reduce using rule 167 (typeDef -> RSTRING .)
    LOCAL           reduce using rule 167 (typeDef -> RSTRING .)
    RIF             reduce using rule 167 (typeDef -> RSTRING .)
    RWHILE          reduce using rule 167 (typeDef -> RSTRING .)
    RFOR            reduce using rule 167 (typeDef -> RSTRING .)
    RRETURN         reduce using rule 167 (typeDef -> RSTRING .)
    RBREAK          reduce using rule 167 (typeDef -> RSTRING .)
    RCONTINUE       reduce using rule 167 (typeDef -> RSTRING .)
    DOSPT           reduce using rule 167 (typeDef -> RSTRING .)
    CORDER          reduce using rule 167 (typeDef -> RSTRING .)
    RELSE           reduce using rule 167 (typeDef -> RSTRING .)
    RELSEIF         reduce using rule 167 (typeDef -> RSTRING .)


state 215

    (168) typeDef -> RCHAR .

    COMA            reduce using rule 168 (typeDef -> RCHAR .)
    RIN             reduce using rule 168 (typeDef -> RCHAR .)
    PARDER          reduce using rule 168 (typeDef -> RCHAR .)
    PTCOMA          reduce using rule 168 (typeDef -> RCHAR .)
    END             reduce using rule 168 (typeDef -> RCHAR .)
    MAS             reduce using rule 168 (typeDef -> RCHAR .)
    MENOS           reduce using rule 168 (typeDef -> RCHAR .)
    MULTIPLICACION  reduce using rule 168 (typeDef -> RCHAR .)
    DIVISION        reduce using rule 168 (typeDef -> RCHAR .)
    POTENCIA        reduce using rule 168 (typeDef -> RCHAR .)
    MODULO          reduce using rule 168 (typeDef -> RCHAR .)
    IGUALIGUAL      reduce using rule 168 (typeDef -> RCHAR .)
    DISTINTO        reduce using rule 168 (typeDef -> RCHAR .)
    MAYOR           reduce using rule 168 (typeDef -> RCHAR .)
    MENOR           reduce using rule 168 (typeDef -> RCHAR .)
    MAYORIGUAL      reduce using rule 168 (typeDef -> RCHAR .)
    MENORIGUAL      reduce using rule 168 (typeDef -> RCHAR .)
    ANDD            reduce using rule 168 (typeDef -> RCHAR .)
    ORR             reduce using rule 168 (typeDef -> RCHAR .)
    PRINT           reduce using rule 168 (typeDef -> RCHAR .)
    PRINTLN         reduce using rule 168 (typeDef -> RCHAR .)
    ID              reduce using rule 168 (typeDef -> RCHAR .)
    GLOBAL          reduce using rule 168 (typeDef -> RCHAR .)
    LOCAL           reduce using rule 168 (typeDef -> RCHAR .)
    RIF             reduce using rule 168 (typeDef -> RCHAR .)
    RWHILE          reduce using rule 168 (typeDef -> RCHAR .)
    RFOR            reduce using rule 168 (typeDef -> RCHAR .)
    RRETURN         reduce using rule 168 (typeDef -> RCHAR .)
    RBREAK          reduce using rule 168 (typeDef -> RCHAR .)
    RCONTINUE       reduce using rule 168 (typeDef -> RCHAR .)
    DOSPT           reduce using rule 168 (typeDef -> RCHAR .)
    CORDER          reduce using rule 168 (typeDef -> RCHAR .)
    RELSE           reduce using rule 168 (typeDef -> RCHAR .)
    RELSEIF         reduce using rule 168 (typeDef -> RCHAR .)


state 216

    (169) typeDef -> RBOOL .

    COMA            reduce using rule 169 (typeDef -> RBOOL .)
    RIN             reduce using rule 169 (typeDef -> RBOOL .)
    PARDER          reduce using rule 169 (typeDef -> RBOOL .)
    PTCOMA          reduce using rule 169 (typeDef -> RBOOL .)
    END             reduce using rule 169 (typeDef -> RBOOL .)
    MAS             reduce using rule 169 (typeDef -> RBOOL .)
    MENOS           reduce using rule 169 (typeDef -> RBOOL .)
    MULTIPLICACION  reduce using rule 169 (typeDef -> RBOOL .)
    DIVISION        reduce using rule 169 (typeDef -> RBOOL .)
    POTENCIA        reduce using rule 169 (typeDef -> RBOOL .)
    MODULO          reduce using rule 169 (typeDef -> RBOOL .)
    IGUALIGUAL      reduce using rule 169 (typeDef -> RBOOL .)
    DISTINTO        reduce using rule 169 (typeDef -> RBOOL .)
    MAYOR           reduce using rule 169 (typeDef -> RBOOL .)
    MENOR           reduce using rule 169 (typeDef -> RBOOL .)
    MAYORIGUAL      reduce using rule 169 (typeDef -> RBOOL .)
    MENORIGUAL      reduce using rule 169 (typeDef -> RBOOL .)
    ANDD            reduce using rule 169 (typeDef -> RBOOL .)
    ORR             reduce using rule 169 (typeDef -> RBOOL .)
    PRINT           reduce using rule 169 (typeDef -> RBOOL .)
    PRINTLN         reduce using rule 169 (typeDef -> RBOOL .)
    ID              reduce using rule 169 (typeDef -> RBOOL .)
    GLOBAL          reduce using rule 169 (typeDef -> RBOOL .)
    LOCAL           reduce using rule 169 (typeDef -> RBOOL .)
    RIF             reduce using rule 169 (typeDef -> RBOOL .)
    RWHILE          reduce using rule 169 (typeDef -> RBOOL .)
    RFOR            reduce using rule 169 (typeDef -> RBOOL .)
    RRETURN         reduce using rule 169 (typeDef -> RBOOL .)
    RBREAK          reduce using rule 169 (typeDef -> RBOOL .)
    RCONTINUE       reduce using rule 169 (typeDef -> RBOOL .)
    DOSPT           reduce using rule 169 (typeDef -> RBOOL .)
    CORDER          reduce using rule 169 (typeDef -> RBOOL .)
    RELSE           reduce using rule 169 (typeDef -> RBOOL .)
    RELSEIF         reduce using rule 169 (typeDef -> RBOOL .)


state 217

    (170) typeDef -> RARRAY . LLAIZQ RINT LLADER
    (171) typeDef -> RARRAY . LLAIZQ RFLOAT LLADER
    (172) typeDef -> RARRAY . LLAIZQ RSTRING LLADER
    (173) typeDef -> RARRAY . LLAIZQ RCHAR LLADER
    (174) typeDef -> RARRAY . LLAIZQ RBOOL LLADER

    LLAIZQ          shift and go to state 273


state 218

    (160) exp -> TRUNC PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 274


state 219

    (161) exp -> TRUNC PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 275
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 220

    (162) exp -> MFLOAT PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 276
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 221

    (163) exp -> MSTRING PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 277
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 222

    (164) exp -> TYPEOF PARIZQ exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 278
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 223

    (185) exp -> CORIZQ listValues CORDER .
    (186) exp -> CORIZQ listValues CORDER . DOSPT DOSPT typeDef

  ! shift/reduce conflict for DOSPT resolved as shift
    END             reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    PRINT           reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    PRINTLN         reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    ID              reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    GLOBAL          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    LOCAL           reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RIF             reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RWHILE          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RFOR            reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RRETURN         reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RBREAK          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RCONTINUE       reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    PARDER          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RELSE           reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    RELSEIF         reduce using rule 185 (exp -> CORIZQ listValues CORDER .)
    DOSPT           shift and go to state 279

  ! DOSPT           [ reduce using rule 185 (exp -> CORIZQ listValues CORDER .) ]


state 224

    (124) blockc -> instructionsc END . PTCOMA

    PTCOMA          shift and go to state 280


state 225

    (6) instructionsc -> instructionsc instructionc .

    END             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINT           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINTLN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    ID              reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    LOCAL           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    GLOBAL          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RIF             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RWHILE          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RFOR            reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RRETURN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RBREAK          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RCONTINUE       reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSE           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSEIF         reduce using rule 6 (instructionsc -> instructionsc instructionc .)


state 226

    (125) blockc -> END PTCOMA .

    PRINT           reduce using rule 125 (blockc -> END PTCOMA .)
    PRINTLN         reduce using rule 125 (blockc -> END PTCOMA .)
    ID              reduce using rule 125 (blockc -> END PTCOMA .)
    GLOBAL          reduce using rule 125 (blockc -> END PTCOMA .)
    LOCAL           reduce using rule 125 (blockc -> END PTCOMA .)
    FUNCTION        reduce using rule 125 (blockc -> END PTCOMA .)
    RIF             reduce using rule 125 (blockc -> END PTCOMA .)
    RWHILE          reduce using rule 125 (blockc -> END PTCOMA .)
    RFOR            reduce using rule 125 (blockc -> END PTCOMA .)
    RRETURN         reduce using rule 125 (blockc -> END PTCOMA .)
    RBREAK          reduce using rule 125 (blockc -> END PTCOMA .)
    RCONTINUE       reduce using rule 125 (blockc -> END PTCOMA .)
    $end            reduce using rule 125 (blockc -> END PTCOMA .)
    END             reduce using rule 125 (blockc -> END PTCOMA .)
    RELSE           reduce using rule 125 (blockc -> END PTCOMA .)
    RELSEIF         reduce using rule 125 (blockc -> END PTCOMA .)


state 227

    (71) declarationc -> ID IGUAL . exp PTCOMA
    (72) declarationc -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (79) declarationc -> ID IGUAL . CORIZQ exps CORDER PTCOMA
    (80) declarationc -> ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 282
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 281

state 228

    (73) declarationc -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> LOCAL ID . IGUAL exp PTCOMA
    (75) declarationc -> LOCAL ID . PTCOMA
    (83) declarationc -> LOCAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> LOCAL ID . IGUAL CORIZQ exps CORDER PTCOMA

    IGUAL           shift and go to state 283
    PTCOMA          shift and go to state 284


state 229

    (76) declarationc -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> GLOBAL ID . IGUAL exp PTCOMA
    (78) declarationc -> GLOBAL ID . PTCOMA
    (81) declarationc -> GLOBAL ID . IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID . IGUAL CORIZQ exps CORDER PTCOMA

    IGUAL           shift and go to state 285
    PTCOMA          shift and go to state 286


state 230

    (108) ifStc -> RIF exp . END PTCOMA
    (109) ifStc -> RIF exp . blockifc END PTCOMA
    (110) ifStc -> RIF exp . blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> RIF exp . blockifc RELSE END PTCOMA
    (112) ifStc -> RIF exp . blockifc elseifStc END PTCOMA
    (113) ifStc -> RIF exp . blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> RIF exp . blockifc elseifStc RELSE END PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (127) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 287
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockifc                       shift and go to state 288
    instructionsc                  shift and go to state 289
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 231

    (120) forSt -> RFOR parameter RIN exp . DOSPT exp blockc
    (121) forSt -> RFOR parameter RIN exp . blockc
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (124) blockc -> . instructionsc END PTCOMA
    (125) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    DOSPT           shift and go to state 290
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    END             shift and go to state 138
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockc                         shift and go to state 291
    instructionsc                  shift and go to state 137
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 232

    (90) parameter -> ID DOSPT DOSPT . typeDef
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 292

state 233

    (39) p_print -> PRINT PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RRETURN         reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RBREAK          reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RCONTINUE       reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 39 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)


state 234

    (41) exps -> exps COMA exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          reduce using rule 41 (exps -> exps COMA exp .)
    COMA            reduce using rule 41 (exps -> exps COMA exp .)
    CORDER          reduce using rule 41 (exps -> exps COMA exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 235

    (40) p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RRETURN         reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RBREAK          reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RCONTINUE       reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 40 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)


state 236

    (44) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 293

state 237

    (51) declaration -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (52) declaration -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 294
    DOSPT           shift and go to state 295


state 238

    (95) listValues -> listValues COMA exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          reduce using rule 95 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 95 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 95 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 239

    (45) declaration -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 296


state 240

    (46) declaration -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 46 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)


state 241

    (53) declaration -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 297
    COMA            shift and go to state 158


state 242

    (48) declaration -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 298


state 243

    (49) declaration -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 49 (declaration -> LOCAL ID IGUAL exp PTCOMA .)


state 244

    (55) declaration -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 299
    COMA            shift and go to state 158


state 245

    (122) blockf -> instructionsf END . PTCOMA

    PTCOMA          shift and go to state 300


state 246

    (123) blockf -> END PTCOMA .

    PRINT           reduce using rule 123 (blockf -> END PTCOMA .)
    PRINTLN         reduce using rule 123 (blockf -> END PTCOMA .)
    ID              reduce using rule 123 (blockf -> END PTCOMA .)
    GLOBAL          reduce using rule 123 (blockf -> END PTCOMA .)
    LOCAL           reduce using rule 123 (blockf -> END PTCOMA .)
    FUNCTION        reduce using rule 123 (blockf -> END PTCOMA .)
    RIF             reduce using rule 123 (blockf -> END PTCOMA .)
    RWHILE          reduce using rule 123 (blockf -> END PTCOMA .)
    RFOR            reduce using rule 123 (blockf -> END PTCOMA .)
    RRETURN         reduce using rule 123 (blockf -> END PTCOMA .)
    RBREAK          reduce using rule 123 (blockf -> END PTCOMA .)
    RCONTINUE       reduce using rule 123 (blockf -> END PTCOMA .)
    $end            reduce using rule 123 (blockf -> END PTCOMA .)


state 247

    (86) parametersFunc -> PARIZQ parameters PARDER .

    END             reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    GLOBAL          reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    LOCAL           reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    RFOR            reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    RRETURN         reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    RBREAK          reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)
    RCONTINUE       reduce using rule 86 (parametersFunc -> PARIZQ parameters PARDER .)


state 248

    (88) parameters -> parameters COMA . parameter
    (90) parameter -> . ID DOSPT DOSPT typeDef
    (91) parameter -> . ID

    ID              shift and go to state 64

    parameter                      shift and go to state 301

state 249

    (98) ifSt -> RIF exp blockiff END PTCOMA .

    PRINT           reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    PRINTLN         reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    ID              reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    GLOBAL          reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    LOCAL           reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    FUNCTION        reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RIF             reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RWHILE          reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RFOR            reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RRETURN         reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RBREAK          reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    $end            reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    END             reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSE           reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSEIF         reduce using rule 98 (ifSt -> RIF exp blockiff END PTCOMA .)


state 250

    (99) ifSt -> RIF exp blockiff RELSE blockiff . END PTCOMA

    END             shift and go to state 302


state 251

    (100) ifSt -> RIF exp blockiff RELSE END . PTCOMA

    PTCOMA          shift and go to state 303


state 252

    (101) ifSt -> RIF exp blockiff elseifSt END . PTCOMA

    PTCOMA          shift and go to state 304


state 253

    (102) ifSt -> RIF exp blockiff elseifSt RELSE . blockiff END PTCOMA
    (103) ifSt -> RIF exp blockiff elseifSt RELSE . END PTCOMA
    (126) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 306
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockiff                       shift and go to state 305
    instructionsf                  shift and go to state 100
    instructionf                   shift and go to state 101
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 254

    (104) elseifSt -> elseifSt conelseif .

    END             reduce using rule 104 (elseifSt -> elseifSt conelseif .)
    RELSE           reduce using rule 104 (elseifSt -> elseifSt conelseif .)
    RELSEIF         reduce using rule 104 (elseifSt -> elseifSt conelseif .)


state 255

    (106) conelseif -> RELSEIF exp . blockiff
    (107) conelseif -> RELSEIF exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (126) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (19) instructionf -> . p_print
    (20) instructionf -> . p_println
    (21) instructionf -> . declarationf
    (22) instructionf -> . callFuncSt
    (23) instructionf -> . ifSt
    (24) instructionf -> . whileSt
    (25) instructionf -> . forSt
    (26) instructionf -> . returnST
    (27) instructionf -> . breakST
    (28) instructionf -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (57) declarationf -> . ID IGUAL exp PTCOMA
    (58) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (59) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (61) declarationf -> . GLOBAL ID PTCOMA
    (62) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (64) declarationf -> . LOCAL ID PTCOMA
    (65) declarationf -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (66) declarationf -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (67) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (69) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (97) ifSt -> . RIF exp END PTCOMA
    (98) ifSt -> . RIF exp blockiff END PTCOMA
    (99) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (100) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (101) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (102) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (103) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 107 (conelseif -> RELSEIF exp .)
    RELSE           reduce using rule 107 (conelseif -> RELSEIF exp .)
    RELSEIF         reduce using rule 107 (conelseif -> RELSEIF exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 112
    GLOBAL          shift and go to state 113
    LOCAL           shift and go to state 114
    RIF             shift and go to state 21
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockiff                       shift and go to state 307
    instructionsf                  shift and go to state 100
    instructionf                   shift and go to state 101
    p_print                        shift and go to state 102
    p_println                      shift and go to state 103
    declarationf                   shift and go to state 104
    callFuncSt                     shift and go to state 105
    ifSt                           shift and go to state 106
    whileSt                        shift and go to state 107
    forSt                          shift and go to state 108
    returnST                       shift and go to state 109
    breakST                        shift and go to state 110
    continueST                     shift and go to state 111

state 256

    (57) declarationf -> ID IGUAL exp . PTCOMA
    (58) declarationf -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PTCOMA          shift and go to state 308
    DOSPT           shift and go to state 309
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 257

    (65) declarationf -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (66) declarationf -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 310
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 258

    (59) declarationf -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> GLOBAL ID IGUAL . exp PTCOMA
    (67) declarationf -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 312
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 311

state 259

    (61) declarationf -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    END             reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 61 (declarationf -> GLOBAL ID PTCOMA .)


state 260

    (62) declarationf -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> LOCAL ID IGUAL . exp PTCOMA
    (69) declarationf -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 314
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 313

state 261

    (64) declarationf -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    ID              reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    END             reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 64 (declarationf -> LOCAL ID PTCOMA .)


state 262

    (132) listArray -> listArray CORIZQ exp . CORDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    CORDER          shift and go to state 315
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 263

    (133) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    END             reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    PRINT           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    ID              reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    LOCAL           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RIF             reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RWHILE          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RFOR            reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RRETURN         reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RBREAK          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RCONTINUE       reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RELSE           reduce using rule 133 (listArray -> CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 133 (listArray -> CORIZQ exp CORDER .)


state 264

    (151) exp -> UPPERCASE PARIZQ exp PARDER .

    END             reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RRETURN         reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RBREAK          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 151 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 265

    (152) exp -> LOWERCASE PARIZQ exp PARDER .

    END             reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RRETURN         reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RBREAK          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 152 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 266

    (153) exp -> LOG PARIZQ exp COMA . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 316

state 267

    (154) exp -> LOG10 PARIZQ exp PARDER .

    END             reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MAS             reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOS           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    DIVISION        reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MODULO          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYOR           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOR           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    ANDD            reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    ORR             reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINT           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    ID              reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    LOCAL           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RIF             reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RWHILE          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RFOR            reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RRETURN         reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RBREAK          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    PARDER          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    COMA            reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    DOSPT           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    CORDER          reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSE           reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 154 (exp -> LOG10 PARIZQ exp PARDER .)


state 268

    (155) exp -> SIN PARIZQ exp PARDER .

    END             reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MAS             reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MENOS           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MODULO          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MENOR           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    ANDD            reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    ORR             reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    PRINT           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    ID              reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RIF             reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RFOR            reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RRETURN         reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RBREAK          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    PARDER          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    COMA            reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    CORDER          reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RELSE           reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 155 (exp -> SIN PARIZQ exp PARDER .)


state 269

    (156) exp -> COS PARIZQ exp PARDER .

    END             reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MAS             reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MENOS           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    DIVISION        reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MODULO          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MAYOR           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MENOR           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    ANDD            reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    ORR             reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    PRINT           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    ID              reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    LOCAL           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RIF             reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RWHILE          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RFOR            reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RRETURN         reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RBREAK          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    PARDER          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    COMA            reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    DOSPT           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    CORDER          reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RELSE           reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 156 (exp -> COS PARIZQ exp PARDER .)


state 270

    (157) exp -> TAN PARIZQ exp PARDER .

    END             reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MAS             reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MENOS           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MODULO          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MENOR           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    ANDD            reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    ORR             reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    PRINT           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    ID              reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RIF             reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RFOR            reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RRETURN         reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RBREAK          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    PARDER          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    COMA            reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    CORDER          reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RELSE           reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 157 (exp -> TAN PARIZQ exp PARDER .)


state 271

    (158) exp -> SQRT PARIZQ exp PARDER .

    END             reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MAS             reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MENOS           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MODULO          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MENOR           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    ANDD            reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    ORR             reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    PRINT           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    ID              reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RIF             reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RFOR            reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RRETURN         reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RBREAK          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    PARDER          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    COMA            reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    CORDER          reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RELSE           reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 158 (exp -> SQRT PARIZQ exp PARDER .)


state 272

    (159) exp -> PARSE PARIZQ typeDef COMA . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 317

state 273

    (170) typeDef -> RARRAY LLAIZQ . RINT LLADER
    (171) typeDef -> RARRAY LLAIZQ . RFLOAT LLADER
    (172) typeDef -> RARRAY LLAIZQ . RSTRING LLADER
    (173) typeDef -> RARRAY LLAIZQ . RCHAR LLADER
    (174) typeDef -> RARRAY LLAIZQ . RBOOL LLADER

    RINT            shift and go to state 318
    RFLOAT          shift and go to state 319
    RSTRING         shift and go to state 320
    RCHAR           shift and go to state 321
    RBOOL           shift and go to state 322


state 274

    (160) exp -> TRUNC PARIZQ typeDef COMA . exp PARDER
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 323

state 275

    (161) exp -> TRUNC PARIZQ exp PARDER .

    END             reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MAS             reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MENOS           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    DIVISION        reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MODULO          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MAYOR           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MENOR           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    ANDD            reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    ORR             reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    PRINT           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    ID              reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    LOCAL           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RIF             reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RWHILE          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RFOR            reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RRETURN         reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RBREAK          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    PARDER          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    COMA            reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    DOSPT           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    CORDER          reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RELSE           reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 161 (exp -> TRUNC PARIZQ exp PARDER .)


state 276

    (162) exp -> MFLOAT PARIZQ exp PARDER .

    END             reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAS             reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOS           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MODULO          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOR           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    ANDD            reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    ORR             reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINT           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    ID              reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RIF             reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RFOR            reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RRETURN         reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RBREAK          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    PARDER          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    COMA            reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    CORDER          reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSE           reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 162 (exp -> MFLOAT PARIZQ exp PARDER .)


state 277

    (163) exp -> MSTRING PARIZQ exp PARDER .

    END             reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MAS             reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOS           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    DIVISION        reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MODULO          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYOR           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOR           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    ANDD            reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    ORR             reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINT           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    ID              reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    LOCAL           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RIF             reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RWHILE          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RFOR            reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RRETURN         reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RBREAK          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    PARDER          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    COMA            reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    DOSPT           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    CORDER          reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSE           reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 163 (exp -> MSTRING PARIZQ exp PARDER .)


state 278

    (164) exp -> TYPEOF PARIZQ exp PARDER .

    END             reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAS             reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOS           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    DIVISION        reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MODULO          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYOR           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOR           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    ANDD            reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    ORR             reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINT           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    ID              reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    LOCAL           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RIF             reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RWHILE          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RFOR            reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RRETURN         reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RBREAK          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RCONTINUE       reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    PARDER          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    COMA            reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    DOSPT           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    CORDER          reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSE           reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 164 (exp -> TYPEOF PARIZQ exp PARDER .)


state 279

    (186) exp -> CORIZQ listValues CORDER DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 324


state 280

    (124) blockc -> instructionsc END PTCOMA .

    PRINT           reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    PRINTLN         reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    ID              reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    GLOBAL          reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    LOCAL           reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    FUNCTION        reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RIF             reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RWHILE          reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RFOR            reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RRETURN         reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RBREAK          reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RCONTINUE       reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    $end            reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    END             reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RELSE           reduce using rule 124 (blockc -> instructionsc END PTCOMA .)
    RELSEIF         reduce using rule 124 (blockc -> instructionsc END PTCOMA .)


state 281

    (71) declarationc -> ID IGUAL exp . PTCOMA
    (72) declarationc -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PTCOMA          shift and go to state 325
    DOSPT           shift and go to state 326
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 282

    (79) declarationc -> ID IGUAL CORIZQ . exps CORDER PTCOMA
    (80) declarationc -> ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 327
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 283

    (73) declarationc -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> LOCAL ID IGUAL . exp PTCOMA
    (83) declarationc -> LOCAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> LOCAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 329
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 328

state 284

    (75) declarationc -> LOCAL ID PTCOMA .

    END             reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    PRINT           reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    ID              reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RRETURN         reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RBREAK          reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RCONTINUE       reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 75 (declarationc -> LOCAL ID PTCOMA .)


state 285

    (76) declarationc -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> GLOBAL ID IGUAL . exp PTCOMA
    (81) declarationc -> GLOBAL ID IGUAL . CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID IGUAL . CORIZQ exps CORDER PTCOMA
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORIZQ          shift and go to state 331
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60

    exp                            shift and go to state 330

state 286

    (78) declarationc -> GLOBAL ID PTCOMA .

    END             reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    PRINT           reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RRETURN         reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RBREAK          reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RCONTINUE       reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 78 (declarationc -> GLOBAL ID PTCOMA .)


state 287

    (108) ifStc -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 332


state 288

    (109) ifStc -> RIF exp blockifc . END PTCOMA
    (110) ifStc -> RIF exp blockifc . RELSE blockifc END PTCOMA
    (111) ifStc -> RIF exp blockifc . RELSE END PTCOMA
    (112) ifStc -> RIF exp blockifc . elseifStc END PTCOMA
    (113) ifStc -> RIF exp blockifc . elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> RIF exp blockifc . elseifStc RELSE END PTCOMA
    (115) elseifStc -> . elseifStc conelseifc
    (116) elseifStc -> . conelseifc
    (117) conelseifc -> . RELSEIF exp blockifc
    (118) conelseifc -> . RELSEIF exp

    END             shift and go to state 333
    RELSE           shift and go to state 334
    RELSEIF         shift and go to state 337

    elseifStc                      shift and go to state 335
    conelseifc                     shift and go to state 336

state 289

    (127) blockifc -> instructionsc .
    (6) instructionsc -> instructionsc . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 127 (blockifc -> instructionsc .)
    RELSE           reduce using rule 127 (blockifc -> instructionsc .)
    RELSEIF         reduce using rule 127 (blockifc -> instructionsc .)
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    instructionc                   shift and go to state 225
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 290

    (120) forSt -> RFOR parameter RIN exp DOSPT . exp blockc
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 338

state 291

    (121) forSt -> RFOR parameter RIN exp blockc .

    PRINT           reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    PRINTLN         reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    ID              reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    GLOBAL          reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    LOCAL           reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    FUNCTION        reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RIF             reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RWHILE          reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RFOR            reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RRETURN         reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RBREAK          reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RCONTINUE       reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    $end            reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    END             reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RELSE           reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)
    RELSEIF         reduce using rule 121 (forSt -> RFOR parameter RIN exp blockc .)


state 292

    (90) parameter -> ID DOSPT DOSPT typeDef .

    RIN             reduce using rule 90 (parameter -> ID DOSPT DOSPT typeDef .)
    PARDER          reduce using rule 90 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 90 (parameter -> ID DOSPT DOSPT typeDef .)


state 293

    (44) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 339


state 294

    (51) declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 51 (declaration -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 295

    (52) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 340


state 296

    (45) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 341

state 297

    (53) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (54) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 342
    PTCOMA          shift and go to state 343


state 298

    (48) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 344

state 299

    (55) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (56) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 345
    PTCOMA          shift and go to state 346


state 300

    (122) blockf -> instructionsf END PTCOMA .

    PRINT           reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    PRINTLN         reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    ID              reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    GLOBAL          reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    LOCAL           reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    FUNCTION        reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    RIF             reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    RWHILE          reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    RFOR            reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    RRETURN         reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    RBREAK          reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    RCONTINUE       reduce using rule 122 (blockf -> instructionsf END PTCOMA .)
    $end            reduce using rule 122 (blockf -> instructionsf END PTCOMA .)


state 301

    (88) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 88 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 88 (parameters -> parameters COMA parameter .)


state 302

    (99) ifSt -> RIF exp blockiff RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 347


state 303

    (100) ifSt -> RIF exp blockiff RELSE END PTCOMA .

    PRINT           reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    PRINTLN         reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    ID              reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    GLOBAL          reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    LOCAL           reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    FUNCTION        reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RIF             reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RWHILE          reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RFOR            reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RRETURN         reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RBREAK          reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    $end            reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    END             reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSE           reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSEIF         reduce using rule 100 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)


state 304

    (101) ifSt -> RIF exp blockiff elseifSt END PTCOMA .

    PRINT           reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    PRINTLN         reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    ID              reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    GLOBAL          reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    LOCAL           reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    FUNCTION        reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RIF             reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RWHILE          reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RFOR            reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RRETURN         reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RBREAK          reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RCONTINUE       reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    $end            reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    END             reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSE           reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSEIF         reduce using rule 101 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)


state 305

    (102) ifSt -> RIF exp blockiff elseifSt RELSE blockiff . END PTCOMA

    END             shift and go to state 348


state 306

    (103) ifSt -> RIF exp blockiff elseifSt RELSE END . PTCOMA

    PTCOMA          shift and go to state 349


state 307

    (106) conelseif -> RELSEIF exp blockiff .

    END             reduce using rule 106 (conelseif -> RELSEIF exp blockiff .)
    RELSE           reduce using rule 106 (conelseif -> RELSEIF exp blockiff .)
    RELSEIF         reduce using rule 106 (conelseif -> RELSEIF exp blockiff .)


state 308

    (57) declarationf -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 57 (declarationf -> ID IGUAL exp PTCOMA .)


state 309

    (58) declarationf -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 350


state 310

    (65) declarationf -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (66) declarationf -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 351
    COMA            shift and go to state 158


state 311

    (59) declarationf -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (60) declarationf -> GLOBAL ID IGUAL exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    DOSPT           shift and go to state 352
    PTCOMA          shift and go to state 353
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 312

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 354
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 313

    (62) declarationf -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (63) declarationf -> LOCAL ID IGUAL exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    DOSPT           shift and go to state 355
    PTCOMA          shift and go to state 356
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 314

    (69) declarationf -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 357
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 315

    (132) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    END             reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    PRINT           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    ID              reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    LOCAL           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RIF             reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RWHILE          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RFOR            reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RRETURN         reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RBREAK          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RCONTINUE       reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RELSE           reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 132 (listArray -> listArray CORIZQ exp CORDER .)


state 316

    (153) exp -> LOG PARIZQ exp COMA exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 358
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 317

    (159) exp -> PARSE PARIZQ typeDef COMA exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 359
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 318

    (170) typeDef -> RARRAY LLAIZQ RINT . LLADER

    LLADER          shift and go to state 360


state 319

    (171) typeDef -> RARRAY LLAIZQ RFLOAT . LLADER

    LLADER          shift and go to state 361


state 320

    (172) typeDef -> RARRAY LLAIZQ RSTRING . LLADER

    LLADER          shift and go to state 362


state 321

    (173) typeDef -> RARRAY LLAIZQ RCHAR . LLADER

    LLADER          shift and go to state 363


state 322

    (174) typeDef -> RARRAY LLAIZQ RBOOL . LLADER

    LLADER          shift and go to state 364


state 323

    (160) exp -> TRUNC PARIZQ typeDef COMA exp . PARDER
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    PARDER          shift and go to state 365
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 324

    (186) exp -> CORIZQ listValues CORDER DOSPT DOSPT . typeDef
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 366

state 325

    (71) declarationc -> ID IGUAL exp PTCOMA .

    END             reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 71 (declarationc -> ID IGUAL exp PTCOMA .)


state 326

    (72) declarationc -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 367


state 327

    (79) declarationc -> ID IGUAL CORIZQ exps . CORDER PTCOMA
    (80) declarationc -> ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 368
    COMA            shift and go to state 158


state 328

    (73) declarationc -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> LOCAL ID IGUAL exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    DOSPT           shift and go to state 369
    PTCOMA          shift and go to state 370
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 329

    (83) declarationc -> LOCAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> LOCAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 371
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 330

    (76) declarationc -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> GLOBAL ID IGUAL exp . PTCOMA
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp

    DOSPT           shift and go to state 372
    PTCOMA          shift and go to state 373
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99


state 331

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ . exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID IGUAL CORIZQ . exps CORDER PTCOMA
    (185) exp -> CORIZQ . listValues CORDER
    (186) exp -> CORIZQ . listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> CORIZQ . CORDER
    (41) exps -> . exps COMA exp
    (42) exps -> . exp
    (95) listValues -> . listValues COMA exp
    (96) listValues -> . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    CORDER          shift and go to state 135
    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exps                           shift and go to state 374
    listValues                     shift and go to state 134
    exp                            shift and go to state 163

state 332

    (108) ifStc -> RIF exp END PTCOMA .

    END             reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    PRINT           reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    ID              reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RIF             reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RRETURN         reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RBREAK          reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RCONTINUE       reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 108 (ifStc -> RIF exp END PTCOMA .)


state 333

    (109) ifStc -> RIF exp blockifc END . PTCOMA

    PTCOMA          shift and go to state 375


state 334

    (110) ifStc -> RIF exp blockifc RELSE . blockifc END PTCOMA
    (111) ifStc -> RIF exp blockifc RELSE . END PTCOMA
    (127) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 377
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockifc                       shift and go to state 376
    instructionsc                  shift and go to state 289
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 335

    (112) ifStc -> RIF exp blockifc elseifStc . END PTCOMA
    (113) ifStc -> RIF exp blockifc elseifStc . RELSE blockifc END PTCOMA
    (114) ifStc -> RIF exp blockifc elseifStc . RELSE END PTCOMA
    (115) elseifStc -> elseifStc . conelseifc
    (117) conelseifc -> . RELSEIF exp blockifc
    (118) conelseifc -> . RELSEIF exp

    END             shift and go to state 378
    RELSE           shift and go to state 379
    RELSEIF         shift and go to state 337

    conelseifc                     shift and go to state 380

state 336

    (116) elseifStc -> conelseifc .

    END             reduce using rule 116 (elseifStc -> conelseifc .)
    RELSE           reduce using rule 116 (elseifStc -> conelseifc .)
    RELSEIF         reduce using rule 116 (elseifStc -> conelseifc .)


state 337

    (117) conelseifc -> RELSEIF . exp blockifc
    (118) conelseifc -> RELSEIF . exp
    (134) exp -> . exp MAS exp
    (135) exp -> . exp MENOS exp
    (136) exp -> . exp MULTIPLICACION exp
    (137) exp -> . exp DIVISION exp
    (138) exp -> . exp POTENCIA exp
    (139) exp -> . exp MODULO exp
    (140) exp -> . MENOS exp
    (141) exp -> . exp IGUALIGUAL exp
    (142) exp -> . exp DISTINTO exp
    (143) exp -> . exp MAYOR exp
    (144) exp -> . exp MENOR exp
    (145) exp -> . exp MAYORIGUAL exp
    (146) exp -> . exp MENORIGUAL exp
    (147) exp -> . exp ANDD exp
    (148) exp -> . exp ORR exp
    (149) exp -> . NOTT exp
    (150) exp -> . ID parametersCallFunc
    (151) exp -> . UPPERCASE PARIZQ exp PARDER
    (152) exp -> . LOWERCASE PARIZQ exp PARDER
    (153) exp -> . LOG PARIZQ exp COMA exp PARDER
    (154) exp -> . LOG10 PARIZQ exp PARDER
    (155) exp -> . SIN PARIZQ exp PARDER
    (156) exp -> . COS PARIZQ exp PARDER
    (157) exp -> . TAN PARIZQ exp PARDER
    (158) exp -> . SQRT PARIZQ exp PARDER
    (159) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (160) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (161) exp -> . TRUNC PARIZQ exp PARDER
    (162) exp -> . MFLOAT PARIZQ exp PARDER
    (163) exp -> . MSTRING PARIZQ exp PARDER
    (164) exp -> . TYPEOF PARIZQ exp PARDER
    (175) exp -> . PARIZQ exp PARDER
    (176) exp -> . ENTERO
    (177) exp -> . DECIMAL
    (178) exp -> . STRING
    (179) exp -> . CHAR
    (180) exp -> . VERDADERO
    (181) exp -> . FALSO
    (182) exp -> . NULO
    (183) exp -> . ID
    (184) exp -> . ID listArray
    (185) exp -> . CORIZQ listValues CORDER
    (186) exp -> . CORIZQ listValues CORDER DOSPT DOSPT typeDef
    (187) exp -> . CORIZQ CORDER

    MENOS           shift and go to state 37
    NOTT            shift and go to state 38
    ID              shift and go to state 39
    UPPERCASE       shift and go to state 40
    LOWERCASE       shift and go to state 42
    LOG             shift and go to state 43
    LOG10           shift and go to state 44
    SIN             shift and go to state 45
    COS             shift and go to state 46
    TAN             shift and go to state 47
    SQRT            shift and go to state 48
    PARSE           shift and go to state 49
    TRUNC           shift and go to state 50
    MFLOAT          shift and go to state 51
    MSTRING         shift and go to state 52
    TYPEOF          shift and go to state 53
    PARIZQ          shift and go to state 41
    ENTERO          shift and go to state 54
    DECIMAL         shift and go to state 55
    STRING          shift and go to state 56
    CHAR            shift and go to state 57
    VERDADERO       shift and go to state 58
    FALSO           shift and go to state 59
    NULO            shift and go to state 60
    CORIZQ          shift and go to state 61

    exp                            shift and go to state 381

state 338

    (120) forSt -> RFOR parameter RIN exp DOSPT exp . blockc
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (124) blockc -> . instructionsc END PTCOMA
    (125) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    END             shift and go to state 138
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockc                         shift and go to state 382
    instructionsc                  shift and go to state 137
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 339

    (44) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 44 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 340

    (52) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 383

state 341

    (45) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 384


state 342

    (53) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 385


state 343

    (54) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 54 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 344

    (48) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 386


state 345

    (55) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 387


state 346

    (56) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    FUNCTION        reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    $end            reduce using rule 56 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 347

    (99) ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    ID              reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RRETURN         reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RBREAK          reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    $end            reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    END             reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 99 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)


state 348

    (102) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 388


state 349

    (103) ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .

    PRINT           reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    PRINTLN         reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    ID              reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    GLOBAL          reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    LOCAL           reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    FUNCTION        reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RIF             reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RWHILE          reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RFOR            reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RRETURN         reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RBREAK          reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    $end            reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    END             reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSE           reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSEIF         reduce using rule 103 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)


state 350

    (58) declarationf -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 389

state 351

    (65) declarationf -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (66) declarationf -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 390
    DOSPT           shift and go to state 391


state 352

    (59) declarationf -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 392


state 353

    (60) declarationf -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 60 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)


state 354

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 393
    COMA            shift and go to state 158


state 355

    (62) declarationf -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 394


state 356

    (63) declarationf -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 63 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)


state 357

    (69) declarationf -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 395
    COMA            shift and go to state 158


state 358

    (153) exp -> LOG PARIZQ exp COMA exp PARDER .

    END             reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    POTENCIA        reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MODULO          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ANDD            reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ORR             reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINT           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINTLN         reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ID              reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    GLOBAL          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    LOCAL           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RIF             reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RWHILE          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RFOR            reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RRETURN         reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RBREAK          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RCONTINUE       reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DOSPT           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    CORDER          reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSE           reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSEIF         reduce using rule 153 (exp -> LOG PARIZQ exp COMA exp PARDER .)


state 359

    (159) exp -> PARSE PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RRETURN         reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RBREAK          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RCONTINUE       reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 159 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)


state 360

    (170) typeDef -> RARRAY LLAIZQ RINT LLADER .

    COMA            reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RIN             reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PARDER          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PTCOMA          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    END             reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAS             reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENOS           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MULTIPLICACION  reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DIVISION        reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    POTENCIA        reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MODULO          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    IGUALIGUAL      reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DISTINTO        reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAYOR           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENOR           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MAYORIGUAL      reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    MENORIGUAL      reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ANDD            reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ORR             reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PRINT           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    PRINTLN         reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    ID              reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    GLOBAL          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    LOCAL           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RIF             reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RWHILE          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RFOR            reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RRETURN         reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RBREAK          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RCONTINUE       reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    DOSPT           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    CORDER          reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RELSE           reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)
    RELSEIF         reduce using rule 170 (typeDef -> RARRAY LLAIZQ RINT LLADER .)


state 361

    (171) typeDef -> RARRAY LLAIZQ RFLOAT LLADER .

    COMA            reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RIN             reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PARDER          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PTCOMA          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    END             reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAS             reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENOS           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MULTIPLICACION  reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DIVISION        reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    POTENCIA        reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MODULO          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    IGUALIGUAL      reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DISTINTO        reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAYOR           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENOR           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MAYORIGUAL      reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    MENORIGUAL      reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ANDD            reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ORR             reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PRINT           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    PRINTLN         reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    ID              reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    GLOBAL          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    LOCAL           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RIF             reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RWHILE          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RFOR            reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RRETURN         reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RBREAK          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RCONTINUE       reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    DOSPT           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    CORDER          reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RELSE           reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)
    RELSEIF         reduce using rule 171 (typeDef -> RARRAY LLAIZQ RFLOAT LLADER .)


state 362

    (172) typeDef -> RARRAY LLAIZQ RSTRING LLADER .

    COMA            reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RIN             reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PARDER          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PTCOMA          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    END             reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAS             reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENOS           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MULTIPLICACION  reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DIVISION        reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    POTENCIA        reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MODULO          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    IGUALIGUAL      reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DISTINTO        reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAYOR           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENOR           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MAYORIGUAL      reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    MENORIGUAL      reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ANDD            reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ORR             reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PRINT           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    PRINTLN         reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    ID              reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    GLOBAL          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    LOCAL           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RIF             reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RWHILE          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RFOR            reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RRETURN         reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RBREAK          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RCONTINUE       reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    DOSPT           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    CORDER          reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RELSE           reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)
    RELSEIF         reduce using rule 172 (typeDef -> RARRAY LLAIZQ RSTRING LLADER .)


state 363

    (173) typeDef -> RARRAY LLAIZQ RCHAR LLADER .

    COMA            reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RIN             reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PARDER          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PTCOMA          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    END             reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAS             reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENOS           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MULTIPLICACION  reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DIVISION        reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    POTENCIA        reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MODULO          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    IGUALIGUAL      reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DISTINTO        reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAYOR           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENOR           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MAYORIGUAL      reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    MENORIGUAL      reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ANDD            reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ORR             reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PRINT           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    PRINTLN         reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    ID              reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    GLOBAL          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    LOCAL           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RIF             reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RWHILE          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RFOR            reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RRETURN         reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RBREAK          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RCONTINUE       reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    DOSPT           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    CORDER          reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RELSE           reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)
    RELSEIF         reduce using rule 173 (typeDef -> RARRAY LLAIZQ RCHAR LLADER .)


state 364

    (174) typeDef -> RARRAY LLAIZQ RBOOL LLADER .

    COMA            reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RIN             reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PARDER          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PTCOMA          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    END             reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAS             reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENOS           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MULTIPLICACION  reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DIVISION        reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    POTENCIA        reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MODULO          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    IGUALIGUAL      reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DISTINTO        reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAYOR           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENOR           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MAYORIGUAL      reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    MENORIGUAL      reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ANDD            reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ORR             reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PRINT           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    PRINTLN         reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    ID              reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    GLOBAL          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    LOCAL           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RIF             reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RWHILE          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RFOR            reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RRETURN         reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RBREAK          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RCONTINUE       reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    DOSPT           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    CORDER          reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RELSE           reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)
    RELSEIF         reduce using rule 174 (typeDef -> RARRAY LLAIZQ RBOOL LLADER .)


state 365

    (160) exp -> TRUNC PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RRETURN         reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RBREAK          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RCONTINUE       reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 160 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)


state 366

    (186) exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .

    END             reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAS             reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENOS           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MULTIPLICACION  reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DIVISION        reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    POTENCIA        reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MODULO          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    IGUALIGUAL      reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DISTINTO        reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAYOR           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENOR           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MAYORIGUAL      reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    MENORIGUAL      reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ANDD            reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ORR             reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PRINT           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PRINTLN         reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    ID              reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    GLOBAL          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    LOCAL           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RIF             reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RWHILE          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RFOR            reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RRETURN         reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RBREAK          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RCONTINUE       reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PTCOMA          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    PARDER          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    COMA            reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    DOSPT           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    CORDER          reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RELSE           reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)
    RELSEIF         reduce using rule 186 (exp -> CORIZQ listValues CORDER DOSPT DOSPT typeDef .)


state 367

    (72) declarationc -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 396

state 368

    (79) declarationc -> ID IGUAL CORIZQ exps CORDER . PTCOMA
    (80) declarationc -> ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA

    PTCOMA          shift and go to state 397
    DOSPT           shift and go to state 398


state 369

    (73) declarationc -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 399


state 370

    (74) declarationc -> LOCAL ID IGUAL exp PTCOMA .

    END             reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 74 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)


state 371

    (83) declarationc -> LOCAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> LOCAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 400
    COMA            shift and go to state 158


state 372

    (76) declarationc -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 401


state 373

    (77) declarationc -> GLOBAL ID IGUAL exp PTCOMA .

    END             reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RRETURN         reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RBREAK          reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RCONTINUE       reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 77 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)


state 374

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ exps . CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID IGUAL CORIZQ exps . CORDER PTCOMA
    (41) exps -> exps . COMA exp

    CORDER          shift and go to state 402
    COMA            shift and go to state 158


state 375

    (109) ifStc -> RIF exp blockifc END PTCOMA .

    END             reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINT           reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINTLN         reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    ID              reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    LOCAL           reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    GLOBAL          reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RIF             reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RWHILE          reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RFOR            reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RRETURN         reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RBREAK          reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSE           reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSEIF         reduce using rule 109 (ifStc -> RIF exp blockifc END PTCOMA .)


state 376

    (110) ifStc -> RIF exp blockifc RELSE blockifc . END PTCOMA

    END             shift and go to state 403


state 377

    (111) ifStc -> RIF exp blockifc RELSE END . PTCOMA

    PTCOMA          shift and go to state 404


state 378

    (112) ifStc -> RIF exp blockifc elseifStc END . PTCOMA

    PTCOMA          shift and go to state 405


state 379

    (113) ifStc -> RIF exp blockifc elseifStc RELSE . blockifc END PTCOMA
    (114) ifStc -> RIF exp blockifc elseifStc RELSE . END PTCOMA
    (127) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             shift and go to state 407
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockifc                       shift and go to state 406
    instructionsc                  shift and go to state 289
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 380

    (115) elseifStc -> elseifStc conelseifc .

    END             reduce using rule 115 (elseifStc -> elseifStc conelseifc .)
    RELSE           reduce using rule 115 (elseifStc -> elseifStc conelseifc .)
    RELSEIF         reduce using rule 115 (elseifStc -> elseifStc conelseifc .)


state 381

    (117) conelseifc -> RELSEIF exp . blockifc
    (118) conelseifc -> RELSEIF exp .
    (134) exp -> exp . MAS exp
    (135) exp -> exp . MENOS exp
    (136) exp -> exp . MULTIPLICACION exp
    (137) exp -> exp . DIVISION exp
    (138) exp -> exp . POTENCIA exp
    (139) exp -> exp . MODULO exp
    (141) exp -> exp . IGUALIGUAL exp
    (142) exp -> exp . DISTINTO exp
    (143) exp -> exp . MAYOR exp
    (144) exp -> exp . MENOR exp
    (145) exp -> exp . MAYORIGUAL exp
    (146) exp -> exp . MENORIGUAL exp
    (147) exp -> exp . ANDD exp
    (148) exp -> exp . ORR exp
    (127) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (29) instructionc -> . p_print
    (30) instructionc -> . p_println
    (31) instructionc -> . declarationc
    (32) instructionc -> . callFuncSt
    (33) instructionc -> . ifStc
    (34) instructionc -> . whileSt
    (35) instructionc -> . forSt
    (36) instructionc -> . returnST
    (37) instructionc -> . breakST
    (38) instructionc -> . continueST
    (39) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (40) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (71) declarationc -> . ID IGUAL exp PTCOMA
    (72) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (73) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (74) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (75) declarationc -> . LOCAL ID PTCOMA
    (76) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (77) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (78) declarationc -> . GLOBAL ID PTCOMA
    (79) declarationc -> . ID IGUAL CORIZQ exps CORDER PTCOMA
    (80) declarationc -> . ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (81) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> . GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (83) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> . LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA
    (92) callFuncSt -> . ID parametersCallFunc PTCOMA
    (108) ifStc -> . RIF exp END PTCOMA
    (109) ifStc -> . RIF exp blockifc END PTCOMA
    (110) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (111) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (112) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (113) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (114) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (119) whileSt -> . RWHILE exp blockc
    (120) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (121) forSt -> . RFOR parameter RIN exp blockc
    (128) returnST -> . RRETURN exp PTCOMA
    (129) returnST -> . RRETURN PTCOMA
    (130) breakST -> . RBREAK PTCOMA
    (131) continueST -> . RCONTINUE PTCOMA

    END             reduce using rule 118 (conelseifc -> RELSEIF exp .)
    RELSE           reduce using rule 118 (conelseifc -> RELSEIF exp .)
    RELSEIF         reduce using rule 118 (conelseifc -> RELSEIF exp .)
    MAS             shift and go to state 86
    MENOS           shift and go to state 87
    MULTIPLICACION  shift and go to state 88
    DIVISION        shift and go to state 89
    POTENCIA        shift and go to state 90
    MODULO          shift and go to state 91
    IGUALIGUAL      shift and go to state 92
    DISTINTO        shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    MAYORIGUAL      shift and go to state 96
    MENORIGUAL      shift and go to state 97
    ANDD            shift and go to state 98
    ORR             shift and go to state 99
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    ID              shift and go to state 150
    LOCAL           shift and go to state 151
    GLOBAL          shift and go to state 152
    RIF             shift and go to state 153
    RWHILE          shift and go to state 22
    RFOR            shift and go to state 23
    RRETURN         shift and go to state 24
    RBREAK          shift and go to state 25
    RCONTINUE       shift and go to state 26

    blockifc                       shift and go to state 408
    instructionsc                  shift and go to state 289
    instructionc                   shift and go to state 139
    p_print                        shift and go to state 140
    p_println                      shift and go to state 141
    declarationc                   shift and go to state 142
    callFuncSt                     shift and go to state 143
    ifStc                          shift and go to state 144
    whileSt                        shift and go to state 145
    forSt                          shift and go to state 146
    returnST                       shift and go to state 147
    breakST                        shift and go to state 148
    continueST                     shift and go to state 149

state 382

    (120) forSt -> RFOR parameter RIN exp DOSPT exp blockc .

    PRINT           reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    PRINTLN         reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    ID              reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    GLOBAL          reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    LOCAL           reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    FUNCTION        reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RIF             reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RWHILE          reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RFOR            reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RRETURN         reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RBREAK          reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RCONTINUE       reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    $end            reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    END             reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RELSE           reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RELSEIF         reduce using rule 120 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)


state 383

    (52) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 409


state 384

    (45) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 45 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 385

    (53) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 410

state 386

    (48) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 48 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 387

    (55) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 411

state 388

    (102) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    ID              reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RRETURN         reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RBREAK          reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RCONTINUE       reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    $end            reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    END             reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 102 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)


state 389

    (58) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 412


state 390

    (65) declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 65 (declarationf -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 391

    (66) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 413


state 392

    (59) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 414

state 393

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (68) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 415
    PTCOMA          shift and go to state 416


state 394

    (62) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 417

state 395

    (69) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (70) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 418
    PTCOMA          shift and go to state 419


state 396

    (72) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 420


state 397

    (79) declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 79 (declarationc -> ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 398

    (80) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 421


state 399

    (73) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 422

state 400

    (83) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (84) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 423
    PTCOMA          shift and go to state 424


state 401

    (76) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 425

state 402

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER . DOSPT DOSPT typeDef PTCOMA
    (82) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER . PTCOMA

    DOSPT           shift and go to state 426
    PTCOMA          shift and go to state 427


state 403

    (110) ifStc -> RIF exp blockifc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 428


state 404

    (111) ifStc -> RIF exp blockifc RELSE END PTCOMA .

    END             reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINT           reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    ID              reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    LOCAL           reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RIF             reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RWHILE          reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RFOR            reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RRETURN         reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RBREAK          reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSE           reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 111 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)


state 405

    (112) ifStc -> RIF exp blockifc elseifStc END PTCOMA .

    END             reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINT           reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINTLN         reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    ID              reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    LOCAL           reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    GLOBAL          reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RIF             reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RWHILE          reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RFOR            reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RRETURN         reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RBREAK          reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RCONTINUE       reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSE           reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSEIF         reduce using rule 112 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)


state 406

    (113) ifStc -> RIF exp blockifc elseifStc RELSE blockifc . END PTCOMA

    END             shift and go to state 429


state 407

    (114) ifStc -> RIF exp blockifc elseifStc RELSE END . PTCOMA

    PTCOMA          shift and go to state 430


state 408

    (117) conelseifc -> RELSEIF exp blockifc .

    END             reduce using rule 117 (conelseifc -> RELSEIF exp blockifc .)
    RELSE           reduce using rule 117 (conelseifc -> RELSEIF exp blockifc .)
    RELSEIF         reduce using rule 117 (conelseifc -> RELSEIF exp blockifc .)


state 409

    (52) declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 52 (declaration -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 410

    (53) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 431


state 411

    (55) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 432


state 412

    (58) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 58 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 413

    (66) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 433

state 414

    (59) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 434


state 415

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 435


state 416

    (68) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 68 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 417

    (62) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 436


state 418

    (69) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 437


state 419

    (70) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    PRINT           reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    END             reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 70 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 420

    (72) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 72 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 421

    (80) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 438

state 422

    (73) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 439


state 423

    (83) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 440


state 424

    (84) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 84 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 425

    (76) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 441


state 426

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 442


state 427

    (82) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .

    END             reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINT           reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    PRINTLN         reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    ID              reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    LOCAL           reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    GLOBAL          reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RIF             reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RWHILE          reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RFOR            reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RRETURN         reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RBREAK          reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RCONTINUE       reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSE           reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)
    RELSEIF         reduce using rule 82 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER PTCOMA .)


state 428

    (110) ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .

    END             reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RRETURN         reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RBREAK          reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 110 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)


state 429

    (113) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 443


state 430

    (114) ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .

    END             reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINT           reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    ID              reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    LOCAL           reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RIF             reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RWHILE          reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RFOR            reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RRETURN         reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RBREAK          reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RCONTINUE       reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSE           reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 114 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)


state 431

    (53) declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 53 (declaration -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 432

    (55) declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 55 (declaration -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 433

    (66) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 444


state 434

    (59) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 59 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 435

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 445

state 436

    (62) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 62 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 437

    (69) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 446

state 438

    (80) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 447


state 439

    (73) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 73 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 440

    (83) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 448

state 441

    (76) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 76 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 442

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT . typeDef PTCOMA
    (165) typeDef -> . RINT
    (166) typeDef -> . RFLOAT
    (167) typeDef -> . RSTRING
    (168) typeDef -> . RCHAR
    (169) typeDef -> . RBOOL
    (170) typeDef -> . RARRAY LLAIZQ RINT LLADER
    (171) typeDef -> . RARRAY LLAIZQ RFLOAT LLADER
    (172) typeDef -> . RARRAY LLAIZQ RSTRING LLADER
    (173) typeDef -> . RARRAY LLAIZQ RCHAR LLADER
    (174) typeDef -> . RARRAY LLAIZQ RBOOL LLADER

    RINT            shift and go to state 212
    RFLOAT          shift and go to state 213
    RSTRING         shift and go to state 214
    RCHAR           shift and go to state 215
    RBOOL           shift and go to state 216
    RARRAY          shift and go to state 217

    typeDef                        shift and go to state 449

state 443

    (113) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .

    END             reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RRETURN         reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RBREAK          reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RCONTINUE       reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 113 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)


state 444

    (66) declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 66 (declarationf -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 445

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 450


state 446

    (69) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 451


state 447

    (80) declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 80 (declarationc -> ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 448

    (83) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 452


state 449

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 453


state 450

    (67) declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 67 (declarationf -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 451

    (69) declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 69 (declarationf -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 452

    (83) declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 83 (declarationc -> LOCAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)


state 453

    (81) declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RRETURN         reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RBREAK          reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RCONTINUE       reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 81 (declarationc -> GLOBAL ID IGUAL CORIZQ exps CORDER DOSPT DOSPT typeDef PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOSPT in state 223 resolved as shift
WARNING: reduce/reduce conflict in state 163 resolved using rule (exps -> exp)
WARNING: rejected rule (listValues -> exp) in state 163
