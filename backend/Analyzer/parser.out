Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LLAVEDER
    LLAVEIZQ

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> p_print
Rule 5     instruction -> p_println
Rule 6     instruction -> declaration
Rule 7     instruction -> function
Rule 8     instruction -> callFuncSt
Rule 9     instruction -> whileSt
Rule 10    instruction -> ifSt
Rule 11    empty -> <empty>
Rule 12    p_print -> PRINT PARIZQ exp PARDER PTCOMA
Rule 13    p_println -> PRINTLN PARIZQ exp PARDER PTCOMA
Rule 14    declaration -> ID IGUAL exp PTCOMA
Rule 15    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 16    function -> FUNCTION ID parametersFunc block
Rule 17    parametersFunc -> PARIZQ parameters PARDER
Rule 18    parametersFunc -> PARIZQ PARDER
Rule 19    parameters -> parameters COMA parameter
Rule 20    parameters -> parameter
Rule 21    parameter -> ID DOSPT DOSPT typeDef
Rule 22    parameter -> ID
Rule 23    callFuncSt -> ID parametersCallFunc PTCOMA
Rule 24    parametersCallFunc -> PARIZQ listValues PARDER
Rule 25    parametersCallFunc -> PARIZQ PARDER
Rule 26    listValues -> listValues COMA exp
Rule 27    listValues -> exp
Rule 28    block -> instructions END PTCOMA
Rule 29    block -> END PTCOMA
Rule 30    whileSt -> RWHILE PARIZQ exp PARDER block
Rule 31    ifSt -> RIF PARIZQ exp PARDER block elseSt
Rule 32    elseSt -> RELSE block
Rule 33    elseSt -> ifSt
Rule 34    decArray -> CORIZQ CORDER
Rule 35    decArray -> empty
Rule 36    exp -> exp MAS exp
Rule 37    exp -> exp MENOS exp
Rule 38    exp -> exp MULTIPLICACION exp
Rule 39    exp -> exp DIVISION exp
Rule 40    exp -> exp POTENCIA exp
Rule 41    exp -> exp MODULO exp
Rule 42    exp -> exp MAYOR exp
Rule 43    exp -> exp MENOR exp
Rule 44    exp -> exp IGUALIGUAL exp
Rule 45    exp -> exp MAYORIGUAL exp
Rule 46    exp -> exp MENORIGUAL exp
Rule 47    exp -> exp DISTINTO exp
Rule 48    exp -> exp ANDD exp
Rule 49    exp -> exp ORR exp
Rule 50    exp -> NOTT exp
Rule 51    exp -> UPPERCASE PARIZQ exp PARDER
Rule 52    exp -> LOWERCASE PARIZQ exp PARDER
Rule 53    exp -> SIN PARIZQ exp PARDER
Rule 54    exp -> COS PARIZQ exp PARDER
Rule 55    exp -> TAN PARIZQ exp PARDER
Rule 56    exp -> SQRT PARIZQ exp PARDER
Rule 57    exp -> LOG10 PARIZQ exp PARDER
Rule 58    exp -> LOG PARIZQ exp COMA exp PARDER
Rule 59    typeDef -> RINT
Rule 60    typeDef -> RFLOAT
Rule 61    typeDef -> RSTRING
Rule 62    typeDef -> RCHAR
Rule 63    typeDef -> RBOOL
Rule 64    exp -> PARIZQ exp PARDER
Rule 65    exp -> ENTERO
Rule 66    exp -> DECIMAL
Rule 67    exp -> STRING
Rule 68    exp -> CHAR
Rule 69    exp -> VERDADERO
Rule 70    exp -> FALSO
Rule 71    exp -> NULO
Rule 72    exp -> ID
Rule 73    exp -> ID listArray
Rule 74    exp -> CORIZQ listValues CORDER
Rule 75    listArray -> listArray CORIZQ exp CORDER
Rule 76    listArray -> CORIZQ exp CORDER

Terminals, with rules where they appear

ANDD                 : 48
CHAR                 : 68
COMA                 : 19 26 58
CORDER               : 34 74 75 76
CORIZQ               : 34 74 75 76
COS                  : 54
DECIMAL              : 66
DISTINTO             : 47
DIVISION             : 39
DOSPT                : 15 15 21 21
END                  : 28 29
ENTERO               : 65
FALSO                : 70
FUNCTION             : 16
ID                   : 14 15 16 21 22 23 72 73
IGUAL                : 14 15
IGUALIGUAL           : 44
LLAVEDER             : 
LLAVEIZQ             : 
LOG                  : 58
LOG10                : 57
LOWERCASE            : 52
MAS                  : 36
MAYOR                : 42
MAYORIGUAL           : 45
MENOR                : 43
MENORIGUAL           : 46
MENOS                : 37
MODULO               : 41
MULTIPLICACION       : 38
NOTT                 : 50
NULO                 : 71
ORR                  : 49
PARDER               : 12 13 17 18 24 25 30 31 51 52 53 54 55 56 57 58 64
PARIZQ               : 12 13 17 18 24 25 30 31 51 52 53 54 55 56 57 58 64
POTENCIA             : 40
PRINT                : 12
PRINTLN              : 13
PTCOMA               : 12 13 14 15 23 28 29
RBOOL                : 63
RCHAR                : 62
RELSE                : 32
RFLOAT               : 60
RIF                  : 31
RINT                 : 59
RSTRING              : 61
RWHILE               : 30
SIN                  : 53
SQRT                 : 56
STRING               : 67
TAN                  : 55
UPPERCASE            : 51
VERDADERO            : 69
error                : 

Nonterminals, with rules where they appear

block                : 16 30 31 32
callFuncSt           : 8
decArray             : 
declaration          : 6
elseSt               : 31
empty                : 35
exp                  : 12 13 14 15 26 27 30 31 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52 53 54 55 56 57 58 58 64 75 76
function             : 7
ifSt                 : 10 33
initial              : 0
instruction          : 2 3
instructions         : 1 2 28
listArray            : 73 75
listValues           : 24 26 74
p_print              : 4
p_println            : 5
parameter            : 19 20
parameters           : 17 19
parametersCallFunc   : 23
parametersFunc       : 16
typeDef              : 15 21
whileSt              : 9

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    instruction                    shift and go to state 17
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    END             reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> p_print .

    PRINT           reduce using rule 4 (instruction -> p_print .)
    PRINTLN         reduce using rule 4 (instruction -> p_print .)
    ID              reduce using rule 4 (instruction -> p_print .)
    FUNCTION        reduce using rule 4 (instruction -> p_print .)
    RWHILE          reduce using rule 4 (instruction -> p_print .)
    RIF             reduce using rule 4 (instruction -> p_print .)
    $end            reduce using rule 4 (instruction -> p_print .)
    END             reduce using rule 4 (instruction -> p_print .)


state 5

    (5) instruction -> p_println .

    PRINT           reduce using rule 5 (instruction -> p_println .)
    PRINTLN         reduce using rule 5 (instruction -> p_println .)
    ID              reduce using rule 5 (instruction -> p_println .)
    FUNCTION        reduce using rule 5 (instruction -> p_println .)
    RWHILE          reduce using rule 5 (instruction -> p_println .)
    RIF             reduce using rule 5 (instruction -> p_println .)
    $end            reduce using rule 5 (instruction -> p_println .)
    END             reduce using rule 5 (instruction -> p_println .)


state 6

    (6) instruction -> declaration .

    PRINT           reduce using rule 6 (instruction -> declaration .)
    PRINTLN         reduce using rule 6 (instruction -> declaration .)
    ID              reduce using rule 6 (instruction -> declaration .)
    FUNCTION        reduce using rule 6 (instruction -> declaration .)
    RWHILE          reduce using rule 6 (instruction -> declaration .)
    RIF             reduce using rule 6 (instruction -> declaration .)
    $end            reduce using rule 6 (instruction -> declaration .)
    END             reduce using rule 6 (instruction -> declaration .)


state 7

    (7) instruction -> function .

    PRINT           reduce using rule 7 (instruction -> function .)
    PRINTLN         reduce using rule 7 (instruction -> function .)
    ID              reduce using rule 7 (instruction -> function .)
    FUNCTION        reduce using rule 7 (instruction -> function .)
    RWHILE          reduce using rule 7 (instruction -> function .)
    RIF             reduce using rule 7 (instruction -> function .)
    $end            reduce using rule 7 (instruction -> function .)
    END             reduce using rule 7 (instruction -> function .)


state 8

    (8) instruction -> callFuncSt .

    PRINT           reduce using rule 8 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 8 (instruction -> callFuncSt .)
    ID              reduce using rule 8 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 8 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 8 (instruction -> callFuncSt .)
    RIF             reduce using rule 8 (instruction -> callFuncSt .)
    $end            reduce using rule 8 (instruction -> callFuncSt .)
    END             reduce using rule 8 (instruction -> callFuncSt .)


state 9

    (9) instruction -> whileSt .

    PRINT           reduce using rule 9 (instruction -> whileSt .)
    PRINTLN         reduce using rule 9 (instruction -> whileSt .)
    ID              reduce using rule 9 (instruction -> whileSt .)
    FUNCTION        reduce using rule 9 (instruction -> whileSt .)
    RWHILE          reduce using rule 9 (instruction -> whileSt .)
    RIF             reduce using rule 9 (instruction -> whileSt .)
    $end            reduce using rule 9 (instruction -> whileSt .)
    END             reduce using rule 9 (instruction -> whileSt .)


state 10

    (10) instruction -> ifSt .

    PRINT           reduce using rule 10 (instruction -> ifSt .)
    PRINTLN         reduce using rule 10 (instruction -> ifSt .)
    ID              reduce using rule 10 (instruction -> ifSt .)
    FUNCTION        reduce using rule 10 (instruction -> ifSt .)
    RWHILE          reduce using rule 10 (instruction -> ifSt .)
    RIF             reduce using rule 10 (instruction -> ifSt .)
    $end            reduce using rule 10 (instruction -> ifSt .)
    END             reduce using rule 10 (instruction -> ifSt .)


state 11

    (12) p_print -> PRINT . PARIZQ exp PARDER PTCOMA

    PARIZQ          shift and go to state 18


state 12

    (13) p_println -> PRINTLN . PARIZQ exp PARDER PTCOMA

    PARIZQ          shift and go to state 19


state 13

    (14) declaration -> ID . IGUAL exp PTCOMA
    (15) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (23) callFuncSt -> ID . parametersCallFunc PTCOMA
    (24) parametersCallFunc -> . PARIZQ listValues PARDER
    (25) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 20
    PARIZQ          shift and go to state 22

    parametersCallFunc             shift and go to state 21

state 14

    (16) function -> FUNCTION . ID parametersFunc block

    ID              shift and go to state 23


state 15

    (30) whileSt -> RWHILE . PARIZQ exp PARDER block

    PARIZQ          shift and go to state 24


state 16

    (31) ifSt -> RIF . PARIZQ exp PARDER block elseSt

    PARIZQ          shift and go to state 25


state 17

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    END             reduce using rule 2 (instructions -> instructions instruction .)


state 18

    (12) p_print -> PRINT PARIZQ . exp PARDER PTCOMA
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 27

state 19

    (13) p_println -> PRINTLN PARIZQ . exp PARDER PTCOMA
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 46

state 20

    (14) declaration -> ID IGUAL . exp PTCOMA
    (15) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 47

state 21

    (23) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 48


state 22

    (24) parametersCallFunc -> PARIZQ . listValues PARDER
    (25) parametersCallFunc -> PARIZQ . PARDER
    (26) listValues -> . listValues COMA exp
    (27) listValues -> . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    PARDER          shift and go to state 50
    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    listValues                     shift and go to state 49
    exp                            shift and go to state 51

state 23

    (16) function -> FUNCTION ID . parametersFunc block
    (17) parametersFunc -> . PARIZQ parameters PARDER
    (18) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 53

    parametersFunc                 shift and go to state 52

state 24

    (30) whileSt -> RWHILE PARIZQ . exp PARDER block
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 54

state 25

    (31) ifSt -> RIF PARIZQ . exp PARDER block elseSt
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 55

state 26

    (64) exp -> PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 56

state 27

    (12) p_print -> PRINT PARIZQ exp . PARDER PTCOMA
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 57
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 28

    (50) exp -> NOTT . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 72

state 29

    (51) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 73


state 30

    (52) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 74


state 31

    (53) exp -> SIN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 75


state 32

    (54) exp -> COS . PARIZQ exp PARDER

    PARIZQ          shift and go to state 76


state 33

    (55) exp -> TAN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 77


state 34

    (56) exp -> SQRT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 78


state 35

    (57) exp -> LOG10 . PARIZQ exp PARDER

    PARIZQ          shift and go to state 79


state 36

    (58) exp -> LOG . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 80


state 37

    (65) exp -> ENTERO .

    PARDER          reduce using rule 65 (exp -> ENTERO .)
    MAS             reduce using rule 65 (exp -> ENTERO .)
    MENOS           reduce using rule 65 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 65 (exp -> ENTERO .)
    DIVISION        reduce using rule 65 (exp -> ENTERO .)
    POTENCIA        reduce using rule 65 (exp -> ENTERO .)
    MODULO          reduce using rule 65 (exp -> ENTERO .)
    MAYOR           reduce using rule 65 (exp -> ENTERO .)
    MENOR           reduce using rule 65 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 65 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 65 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 65 (exp -> ENTERO .)
    DISTINTO        reduce using rule 65 (exp -> ENTERO .)
    ANDD            reduce using rule 65 (exp -> ENTERO .)
    ORR             reduce using rule 65 (exp -> ENTERO .)
    PTCOMA          reduce using rule 65 (exp -> ENTERO .)
    DOSPT           reduce using rule 65 (exp -> ENTERO .)
    COMA            reduce using rule 65 (exp -> ENTERO .)
    CORDER          reduce using rule 65 (exp -> ENTERO .)


state 38

    (66) exp -> DECIMAL .

    PARDER          reduce using rule 66 (exp -> DECIMAL .)
    MAS             reduce using rule 66 (exp -> DECIMAL .)
    MENOS           reduce using rule 66 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 66 (exp -> DECIMAL .)
    DIVISION        reduce using rule 66 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 66 (exp -> DECIMAL .)
    MODULO          reduce using rule 66 (exp -> DECIMAL .)
    MAYOR           reduce using rule 66 (exp -> DECIMAL .)
    MENOR           reduce using rule 66 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 66 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 66 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 66 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 66 (exp -> DECIMAL .)
    ANDD            reduce using rule 66 (exp -> DECIMAL .)
    ORR             reduce using rule 66 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 66 (exp -> DECIMAL .)
    DOSPT           reduce using rule 66 (exp -> DECIMAL .)
    COMA            reduce using rule 66 (exp -> DECIMAL .)
    CORDER          reduce using rule 66 (exp -> DECIMAL .)


state 39

    (67) exp -> STRING .

    PARDER          reduce using rule 67 (exp -> STRING .)
    MAS             reduce using rule 67 (exp -> STRING .)
    MENOS           reduce using rule 67 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 67 (exp -> STRING .)
    DIVISION        reduce using rule 67 (exp -> STRING .)
    POTENCIA        reduce using rule 67 (exp -> STRING .)
    MODULO          reduce using rule 67 (exp -> STRING .)
    MAYOR           reduce using rule 67 (exp -> STRING .)
    MENOR           reduce using rule 67 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 67 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 67 (exp -> STRING .)
    MENORIGUAL      reduce using rule 67 (exp -> STRING .)
    DISTINTO        reduce using rule 67 (exp -> STRING .)
    ANDD            reduce using rule 67 (exp -> STRING .)
    ORR             reduce using rule 67 (exp -> STRING .)
    PTCOMA          reduce using rule 67 (exp -> STRING .)
    DOSPT           reduce using rule 67 (exp -> STRING .)
    COMA            reduce using rule 67 (exp -> STRING .)
    CORDER          reduce using rule 67 (exp -> STRING .)


state 40

    (68) exp -> CHAR .

    PARDER          reduce using rule 68 (exp -> CHAR .)
    MAS             reduce using rule 68 (exp -> CHAR .)
    MENOS           reduce using rule 68 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 68 (exp -> CHAR .)
    DIVISION        reduce using rule 68 (exp -> CHAR .)
    POTENCIA        reduce using rule 68 (exp -> CHAR .)
    MODULO          reduce using rule 68 (exp -> CHAR .)
    MAYOR           reduce using rule 68 (exp -> CHAR .)
    MENOR           reduce using rule 68 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 68 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 68 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 68 (exp -> CHAR .)
    DISTINTO        reduce using rule 68 (exp -> CHAR .)
    ANDD            reduce using rule 68 (exp -> CHAR .)
    ORR             reduce using rule 68 (exp -> CHAR .)
    PTCOMA          reduce using rule 68 (exp -> CHAR .)
    DOSPT           reduce using rule 68 (exp -> CHAR .)
    COMA            reduce using rule 68 (exp -> CHAR .)
    CORDER          reduce using rule 68 (exp -> CHAR .)


state 41

    (69) exp -> VERDADERO .

    PARDER          reduce using rule 69 (exp -> VERDADERO .)
    MAS             reduce using rule 69 (exp -> VERDADERO .)
    MENOS           reduce using rule 69 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 69 (exp -> VERDADERO .)
    DIVISION        reduce using rule 69 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 69 (exp -> VERDADERO .)
    MODULO          reduce using rule 69 (exp -> VERDADERO .)
    MAYOR           reduce using rule 69 (exp -> VERDADERO .)
    MENOR           reduce using rule 69 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 69 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 69 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 69 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 69 (exp -> VERDADERO .)
    ANDD            reduce using rule 69 (exp -> VERDADERO .)
    ORR             reduce using rule 69 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 69 (exp -> VERDADERO .)
    DOSPT           reduce using rule 69 (exp -> VERDADERO .)
    COMA            reduce using rule 69 (exp -> VERDADERO .)
    CORDER          reduce using rule 69 (exp -> VERDADERO .)


state 42

    (70) exp -> FALSO .

    PARDER          reduce using rule 70 (exp -> FALSO .)
    MAS             reduce using rule 70 (exp -> FALSO .)
    MENOS           reduce using rule 70 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 70 (exp -> FALSO .)
    DIVISION        reduce using rule 70 (exp -> FALSO .)
    POTENCIA        reduce using rule 70 (exp -> FALSO .)
    MODULO          reduce using rule 70 (exp -> FALSO .)
    MAYOR           reduce using rule 70 (exp -> FALSO .)
    MENOR           reduce using rule 70 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 70 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 70 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 70 (exp -> FALSO .)
    DISTINTO        reduce using rule 70 (exp -> FALSO .)
    ANDD            reduce using rule 70 (exp -> FALSO .)
    ORR             reduce using rule 70 (exp -> FALSO .)
    PTCOMA          reduce using rule 70 (exp -> FALSO .)
    DOSPT           reduce using rule 70 (exp -> FALSO .)
    COMA            reduce using rule 70 (exp -> FALSO .)
    CORDER          reduce using rule 70 (exp -> FALSO .)


state 43

    (71) exp -> NULO .

    PARDER          reduce using rule 71 (exp -> NULO .)
    MAS             reduce using rule 71 (exp -> NULO .)
    MENOS           reduce using rule 71 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 71 (exp -> NULO .)
    DIVISION        reduce using rule 71 (exp -> NULO .)
    POTENCIA        reduce using rule 71 (exp -> NULO .)
    MODULO          reduce using rule 71 (exp -> NULO .)
    MAYOR           reduce using rule 71 (exp -> NULO .)
    MENOR           reduce using rule 71 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 71 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 71 (exp -> NULO .)
    MENORIGUAL      reduce using rule 71 (exp -> NULO .)
    DISTINTO        reduce using rule 71 (exp -> NULO .)
    ANDD            reduce using rule 71 (exp -> NULO .)
    ORR             reduce using rule 71 (exp -> NULO .)
    PTCOMA          reduce using rule 71 (exp -> NULO .)
    DOSPT           reduce using rule 71 (exp -> NULO .)
    COMA            reduce using rule 71 (exp -> NULO .)
    CORDER          reduce using rule 71 (exp -> NULO .)


state 44

    (72) exp -> ID .
    (73) exp -> ID . listArray
    (75) listArray -> . listArray CORIZQ exp CORDER
    (76) listArray -> . CORIZQ exp CORDER

    PARDER          reduce using rule 72 (exp -> ID .)
    MAS             reduce using rule 72 (exp -> ID .)
    MENOS           reduce using rule 72 (exp -> ID .)
    MULTIPLICACION  reduce using rule 72 (exp -> ID .)
    DIVISION        reduce using rule 72 (exp -> ID .)
    POTENCIA        reduce using rule 72 (exp -> ID .)
    MODULO          reduce using rule 72 (exp -> ID .)
    MAYOR           reduce using rule 72 (exp -> ID .)
    MENOR           reduce using rule 72 (exp -> ID .)
    IGUALIGUAL      reduce using rule 72 (exp -> ID .)
    MAYORIGUAL      reduce using rule 72 (exp -> ID .)
    MENORIGUAL      reduce using rule 72 (exp -> ID .)
    DISTINTO        reduce using rule 72 (exp -> ID .)
    ANDD            reduce using rule 72 (exp -> ID .)
    ORR             reduce using rule 72 (exp -> ID .)
    PTCOMA          reduce using rule 72 (exp -> ID .)
    DOSPT           reduce using rule 72 (exp -> ID .)
    COMA            reduce using rule 72 (exp -> ID .)
    CORDER          reduce using rule 72 (exp -> ID .)
    CORIZQ          shift and go to state 82

    listArray                      shift and go to state 81

state 45

    (74) exp -> CORIZQ . listValues CORDER
    (26) listValues -> . listValues COMA exp
    (27) listValues -> . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    listValues                     shift and go to state 83
    exp                            shift and go to state 51

state 46

    (13) p_println -> PRINTLN PARIZQ exp . PARDER PTCOMA
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 84
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 47

    (14) declaration -> ID IGUAL exp . PTCOMA
    (15) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PTCOMA          shift and go to state 85
    DOSPT           shift and go to state 86
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 48

    (23) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 23 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 49

    (24) parametersCallFunc -> PARIZQ listValues . PARDER
    (26) listValues -> listValues . COMA exp

    PARDER          shift and go to state 87
    COMA            shift and go to state 88


state 50

    (25) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 25 (parametersCallFunc -> PARIZQ PARDER .)


state 51

    (27) listValues -> exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 27 (listValues -> exp .)
    COMA            reduce using rule 27 (listValues -> exp .)
    CORDER          reduce using rule 27 (listValues -> exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 52

    (16) function -> FUNCTION ID parametersFunc . block
    (28) block -> . instructions END PTCOMA
    (29) block -> . END PTCOMA
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    END             shift and go to state 91
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    block                          shift and go to state 89
    instructions                   shift and go to state 90
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 53

    (17) parametersFunc -> PARIZQ . parameters PARDER
    (18) parametersFunc -> PARIZQ . PARDER
    (19) parameters -> . parameters COMA parameter
    (20) parameters -> . parameter
    (21) parameter -> . ID DOSPT DOSPT typeDef
    (22) parameter -> . ID

    PARDER          shift and go to state 93
    ID              shift and go to state 95

    parameters                     shift and go to state 92
    parameter                      shift and go to state 94

state 54

    (30) whileSt -> RWHILE PARIZQ exp . PARDER block
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 96
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 55

    (31) ifSt -> RIF PARIZQ exp . PARDER block elseSt
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 97
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 56

    (64) exp -> PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 98
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 57

    (12) p_print -> PRINT PARIZQ exp PARDER . PTCOMA

    PTCOMA          shift and go to state 99


state 58

    (36) exp -> exp MAS . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 100

state 59

    (37) exp -> exp MENOS . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 101

state 60

    (38) exp -> exp MULTIPLICACION . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 102

state 61

    (39) exp -> exp DIVISION . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 103

state 62

    (40) exp -> exp POTENCIA . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 104

state 63

    (41) exp -> exp MODULO . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 105

state 64

    (42) exp -> exp MAYOR . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 106

state 65

    (43) exp -> exp MENOR . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 107

state 66

    (44) exp -> exp IGUALIGUAL . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 108

state 67

    (45) exp -> exp MAYORIGUAL . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 109

state 68

    (46) exp -> exp MENORIGUAL . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 110

state 69

    (47) exp -> exp DISTINTO . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 111

state 70

    (48) exp -> exp ANDD . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 112

state 71

    (49) exp -> exp ORR . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 113

state 72

    (50) exp -> NOTT exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 50 (exp -> NOTT exp .)
    IGUALIGUAL      reduce using rule 50 (exp -> NOTT exp .)
    ANDD            reduce using rule 50 (exp -> NOTT exp .)
    ORR             reduce using rule 50 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 50 (exp -> NOTT exp .)
    DOSPT           reduce using rule 50 (exp -> NOTT exp .)
    COMA            reduce using rule 50 (exp -> NOTT exp .)
    CORDER          reduce using rule 50 (exp -> NOTT exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69

  ! MAS             [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 50 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 73

    (51) exp -> UPPERCASE PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 114

state 74

    (52) exp -> LOWERCASE PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 115

state 75

    (53) exp -> SIN PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 116

state 76

    (54) exp -> COS PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 117

state 77

    (55) exp -> TAN PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 118

state 78

    (56) exp -> SQRT PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 119

state 79

    (57) exp -> LOG10 PARIZQ . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 120

state 80

    (58) exp -> LOG PARIZQ . exp COMA exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 121

state 81

    (73) exp -> ID listArray .
    (75) listArray -> listArray . CORIZQ exp CORDER

    PARDER          reduce using rule 73 (exp -> ID listArray .)
    MAS             reduce using rule 73 (exp -> ID listArray .)
    MENOS           reduce using rule 73 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 73 (exp -> ID listArray .)
    DIVISION        reduce using rule 73 (exp -> ID listArray .)
    POTENCIA        reduce using rule 73 (exp -> ID listArray .)
    MODULO          reduce using rule 73 (exp -> ID listArray .)
    MAYOR           reduce using rule 73 (exp -> ID listArray .)
    MENOR           reduce using rule 73 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 73 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 73 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 73 (exp -> ID listArray .)
    DISTINTO        reduce using rule 73 (exp -> ID listArray .)
    ANDD            reduce using rule 73 (exp -> ID listArray .)
    ORR             reduce using rule 73 (exp -> ID listArray .)
    PTCOMA          reduce using rule 73 (exp -> ID listArray .)
    DOSPT           reduce using rule 73 (exp -> ID listArray .)
    COMA            reduce using rule 73 (exp -> ID listArray .)
    CORDER          reduce using rule 73 (exp -> ID listArray .)
    CORIZQ          shift and go to state 122


state 82

    (76) listArray -> CORIZQ . exp CORDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 123

state 83

    (74) exp -> CORIZQ listValues . CORDER
    (26) listValues -> listValues . COMA exp

    CORDER          shift and go to state 124
    COMA            shift and go to state 88


state 84

    (13) p_println -> PRINTLN PARIZQ exp PARDER . PTCOMA

    PTCOMA          shift and go to state 125


state 85

    (14) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 14 (declaration -> ID IGUAL exp PTCOMA .)


state 86

    (15) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 126


state 87

    (24) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 24 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 88

    (26) listValues -> listValues COMA . exp
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 127

state 89

    (16) function -> FUNCTION ID parametersFunc block .

    PRINT           reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    PRINTLN         reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    ID              reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    FUNCTION        reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    RWHILE          reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    RIF             reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    $end            reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)
    END             reduce using rule 16 (function -> FUNCTION ID parametersFunc block .)


state 90

    (28) block -> instructions . END PTCOMA
    (2) instructions -> instructions . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    END             shift and go to state 128
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    instruction                    shift and go to state 17
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 91

    (29) block -> END . PTCOMA

    PTCOMA          shift and go to state 129


state 92

    (17) parametersFunc -> PARIZQ parameters . PARDER
    (19) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 130
    COMA            shift and go to state 131


state 93

    (18) parametersFunc -> PARIZQ PARDER .

    END             reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)
    FUNCTION        reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 18 (parametersFunc -> PARIZQ PARDER .)


state 94

    (20) parameters -> parameter .

    PARDER          reduce using rule 20 (parameters -> parameter .)
    COMA            reduce using rule 20 (parameters -> parameter .)


state 95

    (21) parameter -> ID . DOSPT DOSPT typeDef
    (22) parameter -> ID .

    DOSPT           shift and go to state 132
    PARDER          reduce using rule 22 (parameter -> ID .)
    COMA            reduce using rule 22 (parameter -> ID .)


state 96

    (30) whileSt -> RWHILE PARIZQ exp PARDER . block
    (28) block -> . instructions END PTCOMA
    (29) block -> . END PTCOMA
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    END             shift and go to state 91
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    block                          shift and go to state 133
    instructions                   shift and go to state 90
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 97

    (31) ifSt -> RIF PARIZQ exp PARDER . block elseSt
    (28) block -> . instructions END PTCOMA
    (29) block -> . END PTCOMA
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    END             shift and go to state 91
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    block                          shift and go to state 134
    instructions                   shift and go to state 90
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 98

    (64) exp -> PARIZQ exp PARDER .

    PARDER          reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 64 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 64 (exp -> PARIZQ exp PARDER .)


state 99

    (12) p_print -> PRINT PARIZQ exp PARDER PTCOMA .

    PRINT           reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    PRINTLN         reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    ID              reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    FUNCTION        reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    RWHILE          reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    RIF             reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    $end            reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)
    END             reduce using rule 12 (p_print -> PRINT PARIZQ exp PARDER PTCOMA .)


state 100

    (36) exp -> exp MAS exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 36 (exp -> exp MAS exp .)
    MAS             reduce using rule 36 (exp -> exp MAS exp .)
    MENOS           reduce using rule 36 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 36 (exp -> exp MAS exp .)
    MENOR           reduce using rule 36 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 36 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 36 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 36 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 36 (exp -> exp MAS exp .)
    ANDD            reduce using rule 36 (exp -> exp MAS exp .)
    ORR             reduce using rule 36 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 36 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 36 (exp -> exp MAS exp .)
    COMA            reduce using rule 36 (exp -> exp MAS exp .)
    CORDER          reduce using rule 36 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MULTIPLICACION  [ reduce using rule 36 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 36 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 36 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 36 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 101

    (37) exp -> exp MENOS exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 37 (exp -> exp MENOS exp .)
    MAS             reduce using rule 37 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 37 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 37 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 37 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 37 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 37 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 37 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 37 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 37 (exp -> exp MENOS exp .)
    ORR             reduce using rule 37 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 37 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 37 (exp -> exp MENOS exp .)
    COMA            reduce using rule 37 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 37 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MULTIPLICACION  [ reduce using rule 37 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 37 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 37 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 37 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 102

    (38) exp -> exp MULTIPLICACION exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 38 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 62

  ! POTENCIA        [ reduce using rule 38 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MULTIPLICACION  [ shift and go to state 60 ]
  ! DIVISION        [ shift and go to state 61 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 103

    (39) exp -> exp DIVISION exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 39 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 39 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 39 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 39 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 39 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 39 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 39 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 39 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 39 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 39 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 39 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 39 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 39 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 39 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 39 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 39 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 39 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 39 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 62

  ! POTENCIA        [ reduce using rule 39 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MULTIPLICACION  [ shift and go to state 60 ]
  ! DIVISION        [ shift and go to state 61 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 104

    (40) exp -> exp POTENCIA exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 40 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 40 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 40 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 40 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 40 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 40 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 40 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 40 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 40 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 40 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 40 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 40 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 40 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 40 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 40 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 40 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 40 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 40 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 40 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MULTIPLICACION  [ shift and go to state 60 ]
  ! DIVISION        [ shift and go to state 61 ]
  ! POTENCIA        [ shift and go to state 62 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 105

    (41) exp -> exp MODULO exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 41 (exp -> exp MODULO exp .)
    MAS             reduce using rule 41 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 41 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 41 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 41 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 41 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 41 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 41 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 41 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 41 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 41 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 41 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 41 (exp -> exp MODULO exp .)
    ORR             reduce using rule 41 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 41 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 41 (exp -> exp MODULO exp .)
    COMA            reduce using rule 41 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 41 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 62

  ! POTENCIA        [ reduce using rule 41 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 58 ]
  ! MENOS           [ shift and go to state 59 ]
  ! MULTIPLICACION  [ shift and go to state 60 ]
  ! DIVISION        [ shift and go to state 61 ]
  ! MODULO          [ shift and go to state 63 ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 106

    (42) exp -> exp MAYOR exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 42 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 42 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 42 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 42 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 42 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 42 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 42 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 42 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 42 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 42 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 42 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 42 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 42 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 42 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 42 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 42 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 42 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 42 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 42 (exp -> exp MAYOR exp .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 107

    (43) exp -> exp MENOR exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 43 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 43 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 43 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 43 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 43 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 43 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 43 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 43 (exp -> exp MENOR exp .)
    ORR             reduce using rule 43 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 43 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 43 (exp -> exp MENOR exp .)
    COMA            reduce using rule 43 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 43 (exp -> exp MENOR exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 43 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 43 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 43 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 43 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 43 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 43 (exp -> exp MENOR exp .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 108

    (44) exp -> exp IGUALIGUAL exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for ANDD resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
    PARDER          reduce using rule 44 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 44 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 44 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 44 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 44 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71

  ! MAS             [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MAYOR           [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOR           [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MAYORIGUAL      [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! MENORIGUAL      [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! DISTINTO        [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! ANDD            [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]
  ! ORR             [ reduce using rule 44 (exp -> exp IGUALIGUAL exp .) ]


state 109

    (45) exp -> exp MAYORIGUAL exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 45 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 45 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 45 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 45 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 45 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 45 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 45 (exp -> exp MAYORIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 110

    (46) exp -> exp MENORIGUAL exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 46 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63

  ! MAS             [ reduce using rule 46 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 46 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 46 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 46 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 46 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 46 (exp -> exp MENORIGUAL exp .) ]
  ! MAYOR           [ shift and go to state 64 ]
  ! MENOR           [ shift and go to state 65 ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! MAYORIGUAL      [ shift and go to state 67 ]
  ! MENORIGUAL      [ shift and go to state 68 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 111

    (47) exp -> exp DISTINTO exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 47 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 47 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 47 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 47 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 47 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 47 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 47 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 47 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 47 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68

  ! MAS             [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MAYOR           [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MENOR           [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MAYORIGUAL      [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! MENORIGUAL      [ reduce using rule 47 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! DISTINTO        [ shift and go to state 69 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 112

    (48) exp -> exp ANDD exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 48 (exp -> exp ANDD exp .)
    IGUALIGUAL      reduce using rule 48 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 48 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 48 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 48 (exp -> exp ANDD exp .)
    COMA            reduce using rule 48 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 48 (exp -> exp ANDD exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ORR             shift and go to state 71

  ! MAS             [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 48 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! ANDD            [ shift and go to state 70 ]


state 113

    (49) exp -> exp ORR exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 49 (exp -> exp ORR exp .)
    IGUALIGUAL      reduce using rule 49 (exp -> exp ORR exp .)
    ANDD            reduce using rule 49 (exp -> exp ORR exp .)
    ORR             reduce using rule 49 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 49 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 49 (exp -> exp ORR exp .)
    COMA            reduce using rule 49 (exp -> exp ORR exp .)
    CORDER          reduce using rule 49 (exp -> exp ORR exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69

  ! MAS             [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 49 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 66 ]
  ! ANDD            [ shift and go to state 70 ]
  ! ORR             [ shift and go to state 71 ]


state 114

    (51) exp -> UPPERCASE PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 135
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 115

    (52) exp -> LOWERCASE PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 136
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 116

    (53) exp -> SIN PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 137
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 117

    (54) exp -> COS PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 138
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 118

    (55) exp -> TAN PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 139
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 119

    (56) exp -> SQRT PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 140
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 120

    (57) exp -> LOG10 PARIZQ exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 141
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 121

    (58) exp -> LOG PARIZQ exp . COMA exp PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    COMA            shift and go to state 142
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 122

    (75) listArray -> listArray CORIZQ . exp CORDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 143

state 123

    (76) listArray -> CORIZQ exp . CORDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    CORDER          shift and go to state 144
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 124

    (74) exp -> CORIZQ listValues CORDER .

    PARDER          reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    DOSPT           reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 74 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 74 (exp -> CORIZQ listValues CORDER .)


state 125

    (13) p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .

    PRINT           reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    PRINTLN         reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    ID              reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    FUNCTION        reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    RWHILE          reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    RIF             reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    $end            reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)
    END             reduce using rule 13 (p_println -> PRINTLN PARIZQ exp PARDER PTCOMA .)


state 126

    (15) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (59) typeDef -> . RINT
    (60) typeDef -> . RFLOAT
    (61) typeDef -> . RSTRING
    (62) typeDef -> . RCHAR
    (63) typeDef -> . RBOOL

    RINT            shift and go to state 146
    RFLOAT          shift and go to state 147
    RSTRING         shift and go to state 148
    RCHAR           shift and go to state 149
    RBOOL           shift and go to state 150

    typeDef                        shift and go to state 145

state 127

    (26) listValues -> listValues COMA exp .
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          reduce using rule 26 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 26 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 26 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 128

    (28) block -> instructions END . PTCOMA

    PTCOMA          shift and go to state 151


state 129

    (29) block -> END PTCOMA .

    PRINT           reduce using rule 29 (block -> END PTCOMA .)
    PRINTLN         reduce using rule 29 (block -> END PTCOMA .)
    ID              reduce using rule 29 (block -> END PTCOMA .)
    FUNCTION        reduce using rule 29 (block -> END PTCOMA .)
    RWHILE          reduce using rule 29 (block -> END PTCOMA .)
    RIF             reduce using rule 29 (block -> END PTCOMA .)
    $end            reduce using rule 29 (block -> END PTCOMA .)
    END             reduce using rule 29 (block -> END PTCOMA .)
    RELSE           reduce using rule 29 (block -> END PTCOMA .)


state 130

    (17) parametersFunc -> PARIZQ parameters PARDER .

    END             reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)
    FUNCTION        reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 17 (parametersFunc -> PARIZQ parameters PARDER .)


state 131

    (19) parameters -> parameters COMA . parameter
    (21) parameter -> . ID DOSPT DOSPT typeDef
    (22) parameter -> . ID

    ID              shift and go to state 95

    parameter                      shift and go to state 152

state 132

    (21) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 153


state 133

    (30) whileSt -> RWHILE PARIZQ exp PARDER block .

    PRINT           reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    PRINTLN         reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    ID              reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    FUNCTION        reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    RWHILE          reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    RIF             reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    $end            reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)
    END             reduce using rule 30 (whileSt -> RWHILE PARIZQ exp PARDER block .)


state 134

    (31) ifSt -> RIF PARIZQ exp PARDER block . elseSt
    (32) elseSt -> . RELSE block
    (33) elseSt -> . ifSt
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    RELSE           shift and go to state 155
    RIF             shift and go to state 16

    elseSt                         shift and go to state 154
    ifSt                           shift and go to state 156

state 135

    (51) exp -> UPPERCASE PARIZQ exp PARDER .

    PARDER          reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 51 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 136

    (52) exp -> LOWERCASE PARIZQ exp PARDER .

    PARDER          reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 52 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 137

    (53) exp -> SIN PARIZQ exp PARDER .

    PARDER          reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MAS             reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MENOS           reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MODULO          reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MENOR           reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    ANDD            reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    ORR             reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    COMA            reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)
    CORDER          reduce using rule 53 (exp -> SIN PARIZQ exp PARDER .)


state 138

    (54) exp -> COS PARIZQ exp PARDER .

    PARDER          reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MAS             reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MENOS           reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    DIVISION        reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MODULO          reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MAYOR           reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MENOR           reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    ANDD            reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    ORR             reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    DOSPT           reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    COMA            reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)
    CORDER          reduce using rule 54 (exp -> COS PARIZQ exp PARDER .)


state 139

    (55) exp -> TAN PARIZQ exp PARDER .

    PARDER          reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MAS             reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MENOS           reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MODULO          reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MENOR           reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    ANDD            reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    ORR             reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    COMA            reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)
    CORDER          reduce using rule 55 (exp -> TAN PARIZQ exp PARDER .)


state 140

    (56) exp -> SQRT PARIZQ exp PARDER .

    PARDER          reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MAS             reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MENOS           reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MODULO          reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MENOR           reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    ANDD            reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    ORR             reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    COMA            reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)
    CORDER          reduce using rule 56 (exp -> SQRT PARIZQ exp PARDER .)


state 141

    (57) exp -> LOG10 PARIZQ exp PARDER .

    PARDER          reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MAS             reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOS           reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    DIVISION        reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MODULO          reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYOR           reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOR           reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    ANDD            reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    ORR             reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    DOSPT           reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    COMA            reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)
    CORDER          reduce using rule 57 (exp -> LOG10 PARIZQ exp PARDER .)


state 142

    (58) exp -> LOG PARIZQ exp COMA . exp PARDER
    (36) exp -> . exp MAS exp
    (37) exp -> . exp MENOS exp
    (38) exp -> . exp MULTIPLICACION exp
    (39) exp -> . exp DIVISION exp
    (40) exp -> . exp POTENCIA exp
    (41) exp -> . exp MODULO exp
    (42) exp -> . exp MAYOR exp
    (43) exp -> . exp MENOR exp
    (44) exp -> . exp IGUALIGUAL exp
    (45) exp -> . exp MAYORIGUAL exp
    (46) exp -> . exp MENORIGUAL exp
    (47) exp -> . exp DISTINTO exp
    (48) exp -> . exp ANDD exp
    (49) exp -> . exp ORR exp
    (50) exp -> . NOTT exp
    (51) exp -> . UPPERCASE PARIZQ exp PARDER
    (52) exp -> . LOWERCASE PARIZQ exp PARDER
    (53) exp -> . SIN PARIZQ exp PARDER
    (54) exp -> . COS PARIZQ exp PARDER
    (55) exp -> . TAN PARIZQ exp PARDER
    (56) exp -> . SQRT PARIZQ exp PARDER
    (57) exp -> . LOG10 PARIZQ exp PARDER
    (58) exp -> . LOG PARIZQ exp COMA exp PARDER
    (64) exp -> . PARIZQ exp PARDER
    (65) exp -> . ENTERO
    (66) exp -> . DECIMAL
    (67) exp -> . STRING
    (68) exp -> . CHAR
    (69) exp -> . VERDADERO
    (70) exp -> . FALSO
    (71) exp -> . NULO
    (72) exp -> . ID
    (73) exp -> . ID listArray
    (74) exp -> . CORIZQ listValues CORDER

    NOTT            shift and go to state 28
    UPPERCASE       shift and go to state 29
    LOWERCASE       shift and go to state 30
    SIN             shift and go to state 31
    COS             shift and go to state 32
    TAN             shift and go to state 33
    SQRT            shift and go to state 34
    LOG10           shift and go to state 35
    LOG             shift and go to state 36
    PARIZQ          shift and go to state 26
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    STRING          shift and go to state 39
    CHAR            shift and go to state 40
    VERDADERO       shift and go to state 41
    FALSO           shift and go to state 42
    NULO            shift and go to state 43
    ID              shift and go to state 44
    CORIZQ          shift and go to state 45

    exp                            shift and go to state 157

state 143

    (75) listArray -> listArray CORIZQ exp . CORDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    CORDER          shift and go to state 158
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 144

    (76) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 76 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 76 (listArray -> CORIZQ exp CORDER .)


state 145

    (15) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 159


state 146

    (59) typeDef -> RINT .

    PTCOMA          reduce using rule 59 (typeDef -> RINT .)
    PARDER          reduce using rule 59 (typeDef -> RINT .)
    COMA            reduce using rule 59 (typeDef -> RINT .)


state 147

    (60) typeDef -> RFLOAT .

    PTCOMA          reduce using rule 60 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 60 (typeDef -> RFLOAT .)
    COMA            reduce using rule 60 (typeDef -> RFLOAT .)


state 148

    (61) typeDef -> RSTRING .

    PTCOMA          reduce using rule 61 (typeDef -> RSTRING .)
    PARDER          reduce using rule 61 (typeDef -> RSTRING .)
    COMA            reduce using rule 61 (typeDef -> RSTRING .)


state 149

    (62) typeDef -> RCHAR .

    PTCOMA          reduce using rule 62 (typeDef -> RCHAR .)
    PARDER          reduce using rule 62 (typeDef -> RCHAR .)
    COMA            reduce using rule 62 (typeDef -> RCHAR .)


state 150

    (63) typeDef -> RBOOL .

    PTCOMA          reduce using rule 63 (typeDef -> RBOOL .)
    PARDER          reduce using rule 63 (typeDef -> RBOOL .)
    COMA            reduce using rule 63 (typeDef -> RBOOL .)


state 151

    (28) block -> instructions END PTCOMA .

    PRINT           reduce using rule 28 (block -> instructions END PTCOMA .)
    PRINTLN         reduce using rule 28 (block -> instructions END PTCOMA .)
    ID              reduce using rule 28 (block -> instructions END PTCOMA .)
    FUNCTION        reduce using rule 28 (block -> instructions END PTCOMA .)
    RWHILE          reduce using rule 28 (block -> instructions END PTCOMA .)
    RIF             reduce using rule 28 (block -> instructions END PTCOMA .)
    $end            reduce using rule 28 (block -> instructions END PTCOMA .)
    END             reduce using rule 28 (block -> instructions END PTCOMA .)
    RELSE           reduce using rule 28 (block -> instructions END PTCOMA .)


state 152

    (19) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 19 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 19 (parameters -> parameters COMA parameter .)


state 153

    (21) parameter -> ID DOSPT DOSPT . typeDef
    (59) typeDef -> . RINT
    (60) typeDef -> . RFLOAT
    (61) typeDef -> . RSTRING
    (62) typeDef -> . RCHAR
    (63) typeDef -> . RBOOL

    RINT            shift and go to state 146
    RFLOAT          shift and go to state 147
    RSTRING         shift and go to state 148
    RCHAR           shift and go to state 149
    RBOOL           shift and go to state 150

    typeDef                        shift and go to state 160

state 154

    (31) ifSt -> RIF PARIZQ exp PARDER block elseSt .

    PRINT           reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    PRINTLN         reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    ID              reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    FUNCTION        reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    RWHILE          reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    RIF             reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    $end            reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)
    END             reduce using rule 31 (ifSt -> RIF PARIZQ exp PARDER block elseSt .)


state 155

    (32) elseSt -> RELSE . block
    (28) block -> . instructions END PTCOMA
    (29) block -> . END PTCOMA
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . p_print
    (5) instruction -> . p_println
    (6) instruction -> . declaration
    (7) instruction -> . function
    (8) instruction -> . callFuncSt
    (9) instruction -> . whileSt
    (10) instruction -> . ifSt
    (12) p_print -> . PRINT PARIZQ exp PARDER PTCOMA
    (13) p_println -> . PRINTLN PARIZQ exp PARDER PTCOMA
    (14) declaration -> . ID IGUAL exp PTCOMA
    (15) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (16) function -> . FUNCTION ID parametersFunc block
    (23) callFuncSt -> . ID parametersCallFunc PTCOMA
    (30) whileSt -> . RWHILE PARIZQ exp PARDER block
    (31) ifSt -> . RIF PARIZQ exp PARDER block elseSt

    END             shift and go to state 91
    PRINT           shift and go to state 11
    PRINTLN         shift and go to state 12
    ID              shift and go to state 13
    FUNCTION        shift and go to state 14
    RWHILE          shift and go to state 15
    RIF             shift and go to state 16

    block                          shift and go to state 161
    instructions                   shift and go to state 90
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    whileSt                        shift and go to state 9
    ifSt                           shift and go to state 10

state 156

    (33) elseSt -> ifSt .

    PRINT           reduce using rule 33 (elseSt -> ifSt .)
    PRINTLN         reduce using rule 33 (elseSt -> ifSt .)
    ID              reduce using rule 33 (elseSt -> ifSt .)
    FUNCTION        reduce using rule 33 (elseSt -> ifSt .)
    RWHILE          reduce using rule 33 (elseSt -> ifSt .)
    RIF             reduce using rule 33 (elseSt -> ifSt .)
    $end            reduce using rule 33 (elseSt -> ifSt .)
    END             reduce using rule 33 (elseSt -> ifSt .)


state 157

    (58) exp -> LOG PARIZQ exp COMA exp . PARDER
    (36) exp -> exp . MAS exp
    (37) exp -> exp . MENOS exp
    (38) exp -> exp . MULTIPLICACION exp
    (39) exp -> exp . DIVISION exp
    (40) exp -> exp . POTENCIA exp
    (41) exp -> exp . MODULO exp
    (42) exp -> exp . MAYOR exp
    (43) exp -> exp . MENOR exp
    (44) exp -> exp . IGUALIGUAL exp
    (45) exp -> exp . MAYORIGUAL exp
    (46) exp -> exp . MENORIGUAL exp
    (47) exp -> exp . DISTINTO exp
    (48) exp -> exp . ANDD exp
    (49) exp -> exp . ORR exp

    PARDER          shift and go to state 162
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    MULTIPLICACION  shift and go to state 60
    DIVISION        shift and go to state 61
    POTENCIA        shift and go to state 62
    MODULO          shift and go to state 63
    MAYOR           shift and go to state 64
    MENOR           shift and go to state 65
    IGUALIGUAL      shift and go to state 66
    MAYORIGUAL      shift and go to state 67
    MENORIGUAL      shift and go to state 68
    DISTINTO        shift and go to state 69
    ANDD            shift and go to state 70
    ORR             shift and go to state 71


state 158

    (75) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 75 (listArray -> listArray CORIZQ exp CORDER .)


state 159

    (15) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 15 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 160

    (21) parameter -> ID DOSPT DOSPT typeDef .

    PARDER          reduce using rule 21 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 21 (parameter -> ID DOSPT DOSPT typeDef .)


state 161

    (32) elseSt -> RELSE block .

    PRINT           reduce using rule 32 (elseSt -> RELSE block .)
    PRINTLN         reduce using rule 32 (elseSt -> RELSE block .)
    ID              reduce using rule 32 (elseSt -> RELSE block .)
    FUNCTION        reduce using rule 32 (elseSt -> RELSE block .)
    RWHILE          reduce using rule 32 (elseSt -> RELSE block .)
    RIF             reduce using rule 32 (elseSt -> RELSE block .)
    $end            reduce using rule 32 (elseSt -> RELSE block .)
    END             reduce using rule 32 (elseSt -> RELSE block .)


state 162

    (58) exp -> LOG PARIZQ exp COMA exp PARDER .

    PARDER          reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    POTENCIA        reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MODULO          reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ANDD            reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ORR             reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DOSPT           reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    CORDER          reduce using rule 58 (exp -> LOG PARIZQ exp COMA exp PARDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 108 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 108 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 108 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 108 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 108 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 108 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 108 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 108 resolved as shift
WARNING: shift/reduce conflict for ANDD in state 108 resolved as shift
WARNING: shift/reduce conflict for ORR in state 108 resolved as shift
