Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> initial
Rule 1     initial -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructionsf -> instructionsf instructionf
Rule 5     instructionsf -> instructionf
Rule 6     instructionsc -> instructionsc instructionc
Rule 7     instructionsc -> instructionc
Rule 8     instruction -> p_print
Rule 9     instruction -> p_println
Rule 10    instruction -> declaration
Rule 11    instruction -> function
Rule 12    instruction -> callFuncSt
Rule 13    instruction -> ifSt
Rule 14    instruction -> whileSt
Rule 15    instruction -> forSt
Rule 16    instructionf -> p_print
Rule 17    instructionf -> p_println
Rule 18    instructionf -> declarationf
Rule 19    instructionf -> callFuncSt
Rule 20    instructionf -> ifSt
Rule 21    instructionf -> whileSt
Rule 22    instructionf -> forSt
Rule 23    instructionc -> p_print
Rule 24    instructionc -> p_println
Rule 25    instructionc -> declarationc
Rule 26    instructionc -> callFuncSt
Rule 27    instructionc -> ifStc
Rule 28    instructionc -> whileSt
Rule 29    instructionc -> forSt
Rule 30    p_print -> PRINT PARIZQ exps PARDER PTCOMA
Rule 31    p_println -> PRINTLN PARIZQ exps PARDER PTCOMA
Rule 32    exps -> exps COMA exp
Rule 33    exps -> exp
Rule 34    declaration -> ID IGUAL exp PTCOMA
Rule 35    declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 36    declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 37    declaration -> GLOBAL ID IGUAL exp PTCOMA
Rule 38    declaration -> GLOBAL ID PTCOMA
Rule 39    declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 40    declaration -> LOCAL ID IGUAL exp PTCOMA
Rule 41    declaration -> LOCAL ID PTCOMA
Rule 42    declarationf -> ID IGUAL exp PTCOMA
Rule 43    declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 44    declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 45    declarationf -> GLOBAL ID IGUAL exp PTCOMA
Rule 46    declarationf -> GLOBAL ID PTCOMA
Rule 47    declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 48    declarationf -> LOCAL ID IGUAL exp PTCOMA
Rule 49    declarationf -> LOCAL ID PTCOMA
Rule 50    declarationc -> ID IGUAL exp PTCOMA
Rule 51    declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 52    declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 53    declarationc -> LOCAL ID IGUAL exp PTCOMA
Rule 54    declarationc -> LOCAL ID PTCOMA
Rule 55    declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
Rule 56    declarationc -> GLOBAL ID IGUAL exp PTCOMA
Rule 57    declarationc -> GLOBAL ID PTCOMA
Rule 58    function -> FUNCTION ID parametersFunc blockf
Rule 59    parametersFunc -> PARIZQ parameters PARDER
Rule 60    parametersFunc -> PARIZQ PARDER
Rule 61    parameters -> parameters COMA parameter
Rule 62    parameters -> parameter
Rule 63    parameter -> ID DOSPT DOSPT typeDef
Rule 64    parameter -> ID
Rule 65    callFuncSt -> ID parametersCallFunc PTCOMA
Rule 66    parametersCallFunc -> PARIZQ listValues PARDER
Rule 67    parametersCallFunc -> PARIZQ PARDER
Rule 68    listValues -> listValues COMA exp
Rule 69    listValues -> exp
Rule 70    ifSt -> RIF exp END PTCOMA
Rule 71    ifSt -> RIF exp blockiff END PTCOMA
Rule 72    ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA
Rule 73    ifSt -> RIF exp blockiff RELSE END PTCOMA
Rule 74    ifSt -> RIF exp blockiff elseifSt END PTCOMA
Rule 75    ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
Rule 76    ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA
Rule 77    elseifSt -> elseifSt conelseif
Rule 78    elseifSt -> conelseif
Rule 79    conelseif -> RELSEIF exp blockiff
Rule 80    conelseif -> RELSEIF exp
Rule 81    ifStc -> RIF exp END PTCOMA
Rule 82    ifStc -> RIF exp blockifc END PTCOMA
Rule 83    ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA
Rule 84    ifStc -> RIF exp blockifc RELSE END PTCOMA
Rule 85    ifStc -> RIF exp blockifc elseifStc END PTCOMA
Rule 86    ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
Rule 87    ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA
Rule 88    elseifStc -> elseifStc conelseifc
Rule 89    elseifStc -> conelseifc
Rule 90    conelseifc -> RELSEIF exp blockifc
Rule 91    conelseifc -> RELSEIF exp
Rule 92    whileSt -> RWHILE exp blockc
Rule 93    forSt -> RFOR parameter RIN exp DOSPT exp blockc
Rule 94    forSt -> RFOR parameter RIN exp blockc
Rule 95    blockf -> instructionsf END PTCOMA
Rule 96    blockf -> END PTCOMA
Rule 97    blockc -> instructionsc END PTCOMA
Rule 98    blockc -> END PTCOMA
Rule 99    blockiff -> instructionsf
Rule 100   blockifc -> instructionsc
Rule 101   exp -> exp MAS exp
Rule 102   exp -> exp MENOS exp
Rule 103   exp -> exp MULTIPLICACION exp
Rule 104   exp -> exp DIVISION exp
Rule 105   exp -> exp POTENCIA exp
Rule 106   exp -> exp MODULO exp
Rule 107   exp -> MENOS exp
Rule 108   exp -> exp IGUALIGUAL exp
Rule 109   exp -> exp DISTINTO exp
Rule 110   exp -> exp MAYOR exp
Rule 111   exp -> exp MENOR exp
Rule 112   exp -> exp MAYORIGUAL exp
Rule 113   exp -> exp MENORIGUAL exp
Rule 114   exp -> exp ANDD exp
Rule 115   exp -> exp ORR exp
Rule 116   exp -> NOTT exp
Rule 117   exp -> UPPERCASE PARIZQ exp PARDER
Rule 118   exp -> LOWERCASE PARIZQ exp PARDER
Rule 119   exp -> LOG PARIZQ exp COMA exp PARDER
Rule 120   exp -> LOG10 PARIZQ exp PARDER
Rule 121   exp -> SIN PARIZQ exp PARDER
Rule 122   exp -> COS PARIZQ exp PARDER
Rule 123   exp -> TAN PARIZQ exp PARDER
Rule 124   exp -> SQRT PARIZQ exp PARDER
Rule 125   exp -> PARSE PARIZQ typeDef COMA exp PARDER
Rule 126   exp -> TRUNC PARIZQ typeDef COMA exp PARDER
Rule 127   exp -> MFLOAT PARIZQ exp PARDER
Rule 128   exp -> MSTRING PARIZQ exp PARDER
Rule 129   exp -> TYPEOF PARIZQ exp PARDER
Rule 130   typeDef -> RINT
Rule 131   typeDef -> RFLOAT
Rule 132   typeDef -> RSTRING
Rule 133   typeDef -> RCHAR
Rule 134   typeDef -> RBOOL
Rule 135   exp -> PARIZQ exp PARDER
Rule 136   exp -> ENTERO
Rule 137   exp -> DECIMAL
Rule 138   exp -> STRING
Rule 139   exp -> CHAR
Rule 140   exp -> VERDADERO
Rule 141   exp -> FALSO
Rule 142   exp -> NULO
Rule 143   exp -> ID
Rule 144   exp -> ID listArray
Rule 145   exp -> CORIZQ listValues CORDER
Rule 146   listArray -> listArray CORIZQ exp CORDER
Rule 147   listArray -> CORIZQ exp CORDER

Terminals, with rules where they appear

ANDD                 : 114
CHAR                 : 139
COMA                 : 32 61 68 119 125 126
CORDER               : 145 146 147
CORIZQ               : 145 146 147
COS                  : 122
DECIMAL              : 137
DISTINTO             : 109
DIVISION             : 104
DOSPT                : 35 35 36 36 39 39 43 43 44 44 47 47 51 51 52 52 55 55 63 63 93
END                  : 70 71 72 73 74 75 76 81 82 83 84 85 86 87 95 96 97 98
ENTERO               : 136
FALSO                : 141
FUNCTION             : 58
GLOBAL               : 36 37 38 44 45 46 55 56 57
ID                   : 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 63 64 65 143 144
IGUAL                : 34 35 36 37 39 40 42 43 44 45 47 48 50 51 52 53 55 56
IGUALIGUAL           : 108
LOCAL                : 39 40 41 47 48 49 52 53 54
LOG                  : 119
LOG10                : 120
LOWERCASE            : 118
MAS                  : 101
MAYOR                : 110
MAYORIGUAL           : 112
MENOR                : 111
MENORIGUAL           : 113
MENOS                : 102 107
MFLOAT               : 127
MODULO               : 106
MSTRING              : 128
MULTIPLICACION       : 103
NOTT                 : 116
NULO                 : 142
ORR                  : 115
PARDER               : 30 31 59 60 66 67 117 118 119 120 121 122 123 124 125 126 127 128 129 135
PARIZQ               : 30 31 59 60 66 67 117 118 119 120 121 122 123 124 125 126 127 128 129 135
PARSE                : 125
POTENCIA             : 105
PRINT                : 30
PRINTLN              : 31
PTCOMA               : 30 31 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 65 70 71 72 73 74 75 76 81 82 83 84 85 86 87 95 96 97 98
RBOOL                : 134
RCHAR                : 133
RELSE                : 72 73 75 76 83 84 86 87
RELSEIF              : 79 80 90 91
RFLOAT               : 131
RFOR                 : 93 94
RIF                  : 70 71 72 73 74 75 76 81 82 83 84 85 86 87
RIN                  : 93 94
RINT                 : 130
RSTRING              : 132
RWHILE               : 92
SIN                  : 121
SQRT                 : 124
STRING               : 138
TAN                  : 123
TRUNC                : 126
TYPEOF               : 129
UPPERCASE            : 117
VERDADERO            : 140
error                : 

Nonterminals, with rules where they appear

blockc               : 92 93 94
blockf               : 58
blockifc             : 82 83 83 84 85 86 86 87 90
blockiff             : 71 72 72 73 74 75 75 76 79
callFuncSt           : 12 19 26
conelseif            : 77 78
conelseifc           : 88 89
declaration          : 10
declarationc         : 25
declarationf         : 18
elseifSt             : 74 75 76 77
elseifStc            : 85 86 87 88
exp                  : 32 33 34 35 36 37 39 40 42 43 44 45 47 48 50 51 52 53 55 56 68 69 70 71 72 73 74 75 76 79 80 81 82 83 84 85 86 87 90 91 92 93 93 94 101 101 102 102 103 103 104 104 105 105 106 106 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 117 118 119 119 120 121 122 123 124 125 126 127 128 129 135 146 147
exps                 : 30 31 32
forSt                : 15 22 29
function             : 11
ifSt                 : 13 20
ifStc                : 27
initial              : 0
instruction          : 2 3
instructionc         : 6 7
instructionf         : 4 5
instructions         : 1 2
instructionsc        : 6 97 100
instructionsf        : 4 95 99
listArray            : 144 146
listValues           : 66 68 145
p_print              : 8 16 23
p_println            : 9 17 24
parameter            : 61 62 93 94
parameters           : 59 61
parametersCallFunc   : 65
parametersFunc       : 58
typeDef              : 35 36 39 43 44 47 51 52 55 63 125 126
whileSt              : 14 21 28

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (15) instruction -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (34) declaration -> . ID IGUAL exp PTCOMA
    (35) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (38) declaration -> . GLOBAL ID PTCOMA
    (39) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (41) declaration -> . LOCAL ID PTCOMA
    (58) function -> . FUNCTION ID parametersFunc blockf
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 14
    GLOBAL          shift and go to state 15
    LOCAL           shift and go to state 16
    FUNCTION        shift and go to state 17
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    initial                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10
    forSt                          shift and go to state 11

state 1

    (0) S' -> initial .



state 2

    (1) initial -> instructions .
    (2) instructions -> instructions . instruction
    (8) instruction -> . p_print
    (9) instruction -> . p_println
    (10) instruction -> . declaration
    (11) instruction -> . function
    (12) instruction -> . callFuncSt
    (13) instruction -> . ifSt
    (14) instruction -> . whileSt
    (15) instruction -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (34) declaration -> . ID IGUAL exp PTCOMA
    (35) declaration -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (36) declaration -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> . GLOBAL ID IGUAL exp PTCOMA
    (38) declaration -> . GLOBAL ID PTCOMA
    (39) declaration -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declaration -> . LOCAL ID IGUAL exp PTCOMA
    (41) declaration -> . LOCAL ID PTCOMA
    (58) function -> . FUNCTION ID parametersFunc blockf
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    $end            reduce using rule 1 (initial -> instructions .)
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 14
    GLOBAL          shift and go to state 15
    LOCAL           shift and go to state 16
    FUNCTION        shift and go to state 17
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    instruction                    shift and go to state 21
    p_print                        shift and go to state 4
    p_println                      shift and go to state 5
    declaration                    shift and go to state 6
    function                       shift and go to state 7
    callFuncSt                     shift and go to state 8
    ifSt                           shift and go to state 9
    whileSt                        shift and go to state 10
    forSt                          shift and go to state 11

state 3

    (3) instructions -> instruction .

    PRINT           reduce using rule 3 (instructions -> instruction .)
    PRINTLN         reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    GLOBAL          reduce using rule 3 (instructions -> instruction .)
    LOCAL           reduce using rule 3 (instructions -> instruction .)
    FUNCTION        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RWHILE          reduce using rule 3 (instructions -> instruction .)
    RFOR            reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)


state 4

    (8) instruction -> p_print .

    PRINT           reduce using rule 8 (instruction -> p_print .)
    PRINTLN         reduce using rule 8 (instruction -> p_print .)
    ID              reduce using rule 8 (instruction -> p_print .)
    GLOBAL          reduce using rule 8 (instruction -> p_print .)
    LOCAL           reduce using rule 8 (instruction -> p_print .)
    FUNCTION        reduce using rule 8 (instruction -> p_print .)
    RIF             reduce using rule 8 (instruction -> p_print .)
    RWHILE          reduce using rule 8 (instruction -> p_print .)
    RFOR            reduce using rule 8 (instruction -> p_print .)
    $end            reduce using rule 8 (instruction -> p_print .)


state 5

    (9) instruction -> p_println .

    PRINT           reduce using rule 9 (instruction -> p_println .)
    PRINTLN         reduce using rule 9 (instruction -> p_println .)
    ID              reduce using rule 9 (instruction -> p_println .)
    GLOBAL          reduce using rule 9 (instruction -> p_println .)
    LOCAL           reduce using rule 9 (instruction -> p_println .)
    FUNCTION        reduce using rule 9 (instruction -> p_println .)
    RIF             reduce using rule 9 (instruction -> p_println .)
    RWHILE          reduce using rule 9 (instruction -> p_println .)
    RFOR            reduce using rule 9 (instruction -> p_println .)
    $end            reduce using rule 9 (instruction -> p_println .)


state 6

    (10) instruction -> declaration .

    PRINT           reduce using rule 10 (instruction -> declaration .)
    PRINTLN         reduce using rule 10 (instruction -> declaration .)
    ID              reduce using rule 10 (instruction -> declaration .)
    GLOBAL          reduce using rule 10 (instruction -> declaration .)
    LOCAL           reduce using rule 10 (instruction -> declaration .)
    FUNCTION        reduce using rule 10 (instruction -> declaration .)
    RIF             reduce using rule 10 (instruction -> declaration .)
    RWHILE          reduce using rule 10 (instruction -> declaration .)
    RFOR            reduce using rule 10 (instruction -> declaration .)
    $end            reduce using rule 10 (instruction -> declaration .)


state 7

    (11) instruction -> function .

    PRINT           reduce using rule 11 (instruction -> function .)
    PRINTLN         reduce using rule 11 (instruction -> function .)
    ID              reduce using rule 11 (instruction -> function .)
    GLOBAL          reduce using rule 11 (instruction -> function .)
    LOCAL           reduce using rule 11 (instruction -> function .)
    FUNCTION        reduce using rule 11 (instruction -> function .)
    RIF             reduce using rule 11 (instruction -> function .)
    RWHILE          reduce using rule 11 (instruction -> function .)
    RFOR            reduce using rule 11 (instruction -> function .)
    $end            reduce using rule 11 (instruction -> function .)


state 8

    (12) instruction -> callFuncSt .

    PRINT           reduce using rule 12 (instruction -> callFuncSt .)
    PRINTLN         reduce using rule 12 (instruction -> callFuncSt .)
    ID              reduce using rule 12 (instruction -> callFuncSt .)
    GLOBAL          reduce using rule 12 (instruction -> callFuncSt .)
    LOCAL           reduce using rule 12 (instruction -> callFuncSt .)
    FUNCTION        reduce using rule 12 (instruction -> callFuncSt .)
    RIF             reduce using rule 12 (instruction -> callFuncSt .)
    RWHILE          reduce using rule 12 (instruction -> callFuncSt .)
    RFOR            reduce using rule 12 (instruction -> callFuncSt .)
    $end            reduce using rule 12 (instruction -> callFuncSt .)


state 9

    (13) instruction -> ifSt .

    PRINT           reduce using rule 13 (instruction -> ifSt .)
    PRINTLN         reduce using rule 13 (instruction -> ifSt .)
    ID              reduce using rule 13 (instruction -> ifSt .)
    GLOBAL          reduce using rule 13 (instruction -> ifSt .)
    LOCAL           reduce using rule 13 (instruction -> ifSt .)
    FUNCTION        reduce using rule 13 (instruction -> ifSt .)
    RIF             reduce using rule 13 (instruction -> ifSt .)
    RWHILE          reduce using rule 13 (instruction -> ifSt .)
    RFOR            reduce using rule 13 (instruction -> ifSt .)
    $end            reduce using rule 13 (instruction -> ifSt .)


state 10

    (14) instruction -> whileSt .

    PRINT           reduce using rule 14 (instruction -> whileSt .)
    PRINTLN         reduce using rule 14 (instruction -> whileSt .)
    ID              reduce using rule 14 (instruction -> whileSt .)
    GLOBAL          reduce using rule 14 (instruction -> whileSt .)
    LOCAL           reduce using rule 14 (instruction -> whileSt .)
    FUNCTION        reduce using rule 14 (instruction -> whileSt .)
    RIF             reduce using rule 14 (instruction -> whileSt .)
    RWHILE          reduce using rule 14 (instruction -> whileSt .)
    RFOR            reduce using rule 14 (instruction -> whileSt .)
    $end            reduce using rule 14 (instruction -> whileSt .)


state 11

    (15) instruction -> forSt .

    PRINT           reduce using rule 15 (instruction -> forSt .)
    PRINTLN         reduce using rule 15 (instruction -> forSt .)
    ID              reduce using rule 15 (instruction -> forSt .)
    GLOBAL          reduce using rule 15 (instruction -> forSt .)
    LOCAL           reduce using rule 15 (instruction -> forSt .)
    FUNCTION        reduce using rule 15 (instruction -> forSt .)
    RIF             reduce using rule 15 (instruction -> forSt .)
    RWHILE          reduce using rule 15 (instruction -> forSt .)
    RFOR            reduce using rule 15 (instruction -> forSt .)
    $end            reduce using rule 15 (instruction -> forSt .)


state 12

    (30) p_print -> PRINT . PARIZQ exps PARDER PTCOMA

    PARIZQ          shift and go to state 22


state 13

    (31) p_println -> PRINTLN . PARIZQ exps PARDER PTCOMA

    PARIZQ          shift and go to state 23


state 14

    (34) declaration -> ID . IGUAL exp PTCOMA
    (35) declaration -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) callFuncSt -> ID . parametersCallFunc PTCOMA
    (66) parametersCallFunc -> . PARIZQ listValues PARDER
    (67) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 24
    PARIZQ          shift and go to state 26

    parametersCallFunc             shift and go to state 25

state 15

    (36) declaration -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> GLOBAL . ID IGUAL exp PTCOMA
    (38) declaration -> GLOBAL . ID PTCOMA

    ID              shift and go to state 27


state 16

    (39) declaration -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declaration -> LOCAL . ID IGUAL exp PTCOMA
    (41) declaration -> LOCAL . ID PTCOMA

    ID              shift and go to state 28


state 17

    (58) function -> FUNCTION . ID parametersFunc blockf

    ID              shift and go to state 29


state 18

    (70) ifSt -> RIF . exp END PTCOMA
    (71) ifSt -> RIF . exp blockiff END PTCOMA
    (72) ifSt -> RIF . exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> RIF . exp blockiff RELSE END PTCOMA
    (74) ifSt -> RIF . exp blockiff elseifSt END PTCOMA
    (75) ifSt -> RIF . exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> RIF . exp blockiff elseifSt RELSE END PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 30

state 19

    (92) whileSt -> RWHILE . exp blockc
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 56

state 20

    (93) forSt -> RFOR . parameter RIN exp DOSPT exp blockc
    (94) forSt -> RFOR . parameter RIN exp blockc
    (63) parameter -> . ID DOSPT DOSPT typeDef
    (64) parameter -> . ID

    ID              shift and go to state 58

    parameter                      shift and go to state 57

state 21

    (2) instructions -> instructions instruction .

    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    PRINTLN         reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    GLOBAL          reduce using rule 2 (instructions -> instructions instruction .)
    LOCAL           reduce using rule 2 (instructions -> instructions instruction .)
    FUNCTION        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RWHILE          reduce using rule 2 (instructions -> instructions instruction .)
    RFOR            reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)


state 22

    (30) p_print -> PRINT PARIZQ . exps PARDER PTCOMA
    (32) exps -> . exps COMA exp
    (33) exps -> . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exps                           shift and go to state 59
    exp                            shift and go to state 60

state 23

    (31) p_println -> PRINTLN PARIZQ . exps PARDER PTCOMA
    (32) exps -> . exps COMA exp
    (33) exps -> . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exps                           shift and go to state 61
    exp                            shift and go to state 60

state 24

    (34) declaration -> ID IGUAL . exp PTCOMA
    (35) declaration -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 62

state 25

    (65) callFuncSt -> ID parametersCallFunc . PTCOMA

    PTCOMA          shift and go to state 63


state 26

    (66) parametersCallFunc -> PARIZQ . listValues PARDER
    (67) parametersCallFunc -> PARIZQ . PARDER
    (68) listValues -> . listValues COMA exp
    (69) listValues -> . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    PARDER          shift and go to state 65
    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    listValues                     shift and go to state 64
    exp                            shift and go to state 66

state 27

    (36) declaration -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> GLOBAL ID . IGUAL exp PTCOMA
    (38) declaration -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 67
    PTCOMA          shift and go to state 68


state 28

    (39) declaration -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (40) declaration -> LOCAL ID . IGUAL exp PTCOMA
    (41) declaration -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 69
    PTCOMA          shift and go to state 70


state 29

    (58) function -> FUNCTION ID . parametersFunc blockf
    (59) parametersFunc -> . PARIZQ parameters PARDER
    (60) parametersFunc -> . PARIZQ PARDER

    PARIZQ          shift and go to state 72

    parametersFunc                 shift and go to state 71

state 30

    (70) ifSt -> RIF exp . END PTCOMA
    (71) ifSt -> RIF exp . blockiff END PTCOMA
    (72) ifSt -> RIF exp . blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> RIF exp . blockiff RELSE END PTCOMA
    (74) ifSt -> RIF exp . blockiff elseifSt END PTCOMA
    (75) ifSt -> RIF exp . blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> RIF exp . blockiff elseifSt RELSE END PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (99) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 73
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockiff                       shift and go to state 74
    instructionsf                  shift and go to state 89
    instructionf                   shift and go to state 90
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 31

    (107) exp -> MENOS . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 101

state 32

    (116) exp -> NOTT . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 102

state 33

    (117) exp -> UPPERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 103


state 34

    (135) exp -> PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 104

state 35

    (118) exp -> LOWERCASE . PARIZQ exp PARDER

    PARIZQ          shift and go to state 105


state 36

    (119) exp -> LOG . PARIZQ exp COMA exp PARDER

    PARIZQ          shift and go to state 106


state 37

    (120) exp -> LOG10 . PARIZQ exp PARDER

    PARIZQ          shift and go to state 107


state 38

    (121) exp -> SIN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 108


state 39

    (122) exp -> COS . PARIZQ exp PARDER

    PARIZQ          shift and go to state 109


state 40

    (123) exp -> TAN . PARIZQ exp PARDER

    PARIZQ          shift and go to state 110


state 41

    (124) exp -> SQRT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 111


state 42

    (125) exp -> PARSE . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 112


state 43

    (126) exp -> TRUNC . PARIZQ typeDef COMA exp PARDER

    PARIZQ          shift and go to state 113


state 44

    (127) exp -> MFLOAT . PARIZQ exp PARDER

    PARIZQ          shift and go to state 114


state 45

    (128) exp -> MSTRING . PARIZQ exp PARDER

    PARIZQ          shift and go to state 115


state 46

    (129) exp -> TYPEOF . PARIZQ exp PARDER

    PARIZQ          shift and go to state 116


state 47

    (136) exp -> ENTERO .

    END             reduce using rule 136 (exp -> ENTERO .)
    MAS             reduce using rule 136 (exp -> ENTERO .)
    MENOS           reduce using rule 136 (exp -> ENTERO .)
    MULTIPLICACION  reduce using rule 136 (exp -> ENTERO .)
    DIVISION        reduce using rule 136 (exp -> ENTERO .)
    POTENCIA        reduce using rule 136 (exp -> ENTERO .)
    MODULO          reduce using rule 136 (exp -> ENTERO .)
    IGUALIGUAL      reduce using rule 136 (exp -> ENTERO .)
    DISTINTO        reduce using rule 136 (exp -> ENTERO .)
    MAYOR           reduce using rule 136 (exp -> ENTERO .)
    MENOR           reduce using rule 136 (exp -> ENTERO .)
    MAYORIGUAL      reduce using rule 136 (exp -> ENTERO .)
    MENORIGUAL      reduce using rule 136 (exp -> ENTERO .)
    ANDD            reduce using rule 136 (exp -> ENTERO .)
    ORR             reduce using rule 136 (exp -> ENTERO .)
    PRINT           reduce using rule 136 (exp -> ENTERO .)
    PRINTLN         reduce using rule 136 (exp -> ENTERO .)
    ID              reduce using rule 136 (exp -> ENTERO .)
    GLOBAL          reduce using rule 136 (exp -> ENTERO .)
    LOCAL           reduce using rule 136 (exp -> ENTERO .)
    RIF             reduce using rule 136 (exp -> ENTERO .)
    RWHILE          reduce using rule 136 (exp -> ENTERO .)
    RFOR            reduce using rule 136 (exp -> ENTERO .)
    PARDER          reduce using rule 136 (exp -> ENTERO .)
    COMA            reduce using rule 136 (exp -> ENTERO .)
    PTCOMA          reduce using rule 136 (exp -> ENTERO .)
    DOSPT           reduce using rule 136 (exp -> ENTERO .)
    CORDER          reduce using rule 136 (exp -> ENTERO .)
    RELSE           reduce using rule 136 (exp -> ENTERO .)
    RELSEIF         reduce using rule 136 (exp -> ENTERO .)


state 48

    (137) exp -> DECIMAL .

    END             reduce using rule 137 (exp -> DECIMAL .)
    MAS             reduce using rule 137 (exp -> DECIMAL .)
    MENOS           reduce using rule 137 (exp -> DECIMAL .)
    MULTIPLICACION  reduce using rule 137 (exp -> DECIMAL .)
    DIVISION        reduce using rule 137 (exp -> DECIMAL .)
    POTENCIA        reduce using rule 137 (exp -> DECIMAL .)
    MODULO          reduce using rule 137 (exp -> DECIMAL .)
    IGUALIGUAL      reduce using rule 137 (exp -> DECIMAL .)
    DISTINTO        reduce using rule 137 (exp -> DECIMAL .)
    MAYOR           reduce using rule 137 (exp -> DECIMAL .)
    MENOR           reduce using rule 137 (exp -> DECIMAL .)
    MAYORIGUAL      reduce using rule 137 (exp -> DECIMAL .)
    MENORIGUAL      reduce using rule 137 (exp -> DECIMAL .)
    ANDD            reduce using rule 137 (exp -> DECIMAL .)
    ORR             reduce using rule 137 (exp -> DECIMAL .)
    PRINT           reduce using rule 137 (exp -> DECIMAL .)
    PRINTLN         reduce using rule 137 (exp -> DECIMAL .)
    ID              reduce using rule 137 (exp -> DECIMAL .)
    GLOBAL          reduce using rule 137 (exp -> DECIMAL .)
    LOCAL           reduce using rule 137 (exp -> DECIMAL .)
    RIF             reduce using rule 137 (exp -> DECIMAL .)
    RWHILE          reduce using rule 137 (exp -> DECIMAL .)
    RFOR            reduce using rule 137 (exp -> DECIMAL .)
    PARDER          reduce using rule 137 (exp -> DECIMAL .)
    COMA            reduce using rule 137 (exp -> DECIMAL .)
    PTCOMA          reduce using rule 137 (exp -> DECIMAL .)
    DOSPT           reduce using rule 137 (exp -> DECIMAL .)
    CORDER          reduce using rule 137 (exp -> DECIMAL .)
    RELSE           reduce using rule 137 (exp -> DECIMAL .)
    RELSEIF         reduce using rule 137 (exp -> DECIMAL .)


state 49

    (138) exp -> STRING .

    END             reduce using rule 138 (exp -> STRING .)
    MAS             reduce using rule 138 (exp -> STRING .)
    MENOS           reduce using rule 138 (exp -> STRING .)
    MULTIPLICACION  reduce using rule 138 (exp -> STRING .)
    DIVISION        reduce using rule 138 (exp -> STRING .)
    POTENCIA        reduce using rule 138 (exp -> STRING .)
    MODULO          reduce using rule 138 (exp -> STRING .)
    IGUALIGUAL      reduce using rule 138 (exp -> STRING .)
    DISTINTO        reduce using rule 138 (exp -> STRING .)
    MAYOR           reduce using rule 138 (exp -> STRING .)
    MENOR           reduce using rule 138 (exp -> STRING .)
    MAYORIGUAL      reduce using rule 138 (exp -> STRING .)
    MENORIGUAL      reduce using rule 138 (exp -> STRING .)
    ANDD            reduce using rule 138 (exp -> STRING .)
    ORR             reduce using rule 138 (exp -> STRING .)
    PRINT           reduce using rule 138 (exp -> STRING .)
    PRINTLN         reduce using rule 138 (exp -> STRING .)
    ID              reduce using rule 138 (exp -> STRING .)
    GLOBAL          reduce using rule 138 (exp -> STRING .)
    LOCAL           reduce using rule 138 (exp -> STRING .)
    RIF             reduce using rule 138 (exp -> STRING .)
    RWHILE          reduce using rule 138 (exp -> STRING .)
    RFOR            reduce using rule 138 (exp -> STRING .)
    PARDER          reduce using rule 138 (exp -> STRING .)
    COMA            reduce using rule 138 (exp -> STRING .)
    PTCOMA          reduce using rule 138 (exp -> STRING .)
    DOSPT           reduce using rule 138 (exp -> STRING .)
    CORDER          reduce using rule 138 (exp -> STRING .)
    RELSE           reduce using rule 138 (exp -> STRING .)
    RELSEIF         reduce using rule 138 (exp -> STRING .)


state 50

    (139) exp -> CHAR .

    END             reduce using rule 139 (exp -> CHAR .)
    MAS             reduce using rule 139 (exp -> CHAR .)
    MENOS           reduce using rule 139 (exp -> CHAR .)
    MULTIPLICACION  reduce using rule 139 (exp -> CHAR .)
    DIVISION        reduce using rule 139 (exp -> CHAR .)
    POTENCIA        reduce using rule 139 (exp -> CHAR .)
    MODULO          reduce using rule 139 (exp -> CHAR .)
    IGUALIGUAL      reduce using rule 139 (exp -> CHAR .)
    DISTINTO        reduce using rule 139 (exp -> CHAR .)
    MAYOR           reduce using rule 139 (exp -> CHAR .)
    MENOR           reduce using rule 139 (exp -> CHAR .)
    MAYORIGUAL      reduce using rule 139 (exp -> CHAR .)
    MENORIGUAL      reduce using rule 139 (exp -> CHAR .)
    ANDD            reduce using rule 139 (exp -> CHAR .)
    ORR             reduce using rule 139 (exp -> CHAR .)
    PRINT           reduce using rule 139 (exp -> CHAR .)
    PRINTLN         reduce using rule 139 (exp -> CHAR .)
    ID              reduce using rule 139 (exp -> CHAR .)
    GLOBAL          reduce using rule 139 (exp -> CHAR .)
    LOCAL           reduce using rule 139 (exp -> CHAR .)
    RIF             reduce using rule 139 (exp -> CHAR .)
    RWHILE          reduce using rule 139 (exp -> CHAR .)
    RFOR            reduce using rule 139 (exp -> CHAR .)
    PARDER          reduce using rule 139 (exp -> CHAR .)
    COMA            reduce using rule 139 (exp -> CHAR .)
    PTCOMA          reduce using rule 139 (exp -> CHAR .)
    DOSPT           reduce using rule 139 (exp -> CHAR .)
    CORDER          reduce using rule 139 (exp -> CHAR .)
    RELSE           reduce using rule 139 (exp -> CHAR .)
    RELSEIF         reduce using rule 139 (exp -> CHAR .)


state 51

    (140) exp -> VERDADERO .

    END             reduce using rule 140 (exp -> VERDADERO .)
    MAS             reduce using rule 140 (exp -> VERDADERO .)
    MENOS           reduce using rule 140 (exp -> VERDADERO .)
    MULTIPLICACION  reduce using rule 140 (exp -> VERDADERO .)
    DIVISION        reduce using rule 140 (exp -> VERDADERO .)
    POTENCIA        reduce using rule 140 (exp -> VERDADERO .)
    MODULO          reduce using rule 140 (exp -> VERDADERO .)
    IGUALIGUAL      reduce using rule 140 (exp -> VERDADERO .)
    DISTINTO        reduce using rule 140 (exp -> VERDADERO .)
    MAYOR           reduce using rule 140 (exp -> VERDADERO .)
    MENOR           reduce using rule 140 (exp -> VERDADERO .)
    MAYORIGUAL      reduce using rule 140 (exp -> VERDADERO .)
    MENORIGUAL      reduce using rule 140 (exp -> VERDADERO .)
    ANDD            reduce using rule 140 (exp -> VERDADERO .)
    ORR             reduce using rule 140 (exp -> VERDADERO .)
    PRINT           reduce using rule 140 (exp -> VERDADERO .)
    PRINTLN         reduce using rule 140 (exp -> VERDADERO .)
    ID              reduce using rule 140 (exp -> VERDADERO .)
    GLOBAL          reduce using rule 140 (exp -> VERDADERO .)
    LOCAL           reduce using rule 140 (exp -> VERDADERO .)
    RIF             reduce using rule 140 (exp -> VERDADERO .)
    RWHILE          reduce using rule 140 (exp -> VERDADERO .)
    RFOR            reduce using rule 140 (exp -> VERDADERO .)
    PARDER          reduce using rule 140 (exp -> VERDADERO .)
    COMA            reduce using rule 140 (exp -> VERDADERO .)
    PTCOMA          reduce using rule 140 (exp -> VERDADERO .)
    DOSPT           reduce using rule 140 (exp -> VERDADERO .)
    CORDER          reduce using rule 140 (exp -> VERDADERO .)
    RELSE           reduce using rule 140 (exp -> VERDADERO .)
    RELSEIF         reduce using rule 140 (exp -> VERDADERO .)


state 52

    (141) exp -> FALSO .

    END             reduce using rule 141 (exp -> FALSO .)
    MAS             reduce using rule 141 (exp -> FALSO .)
    MENOS           reduce using rule 141 (exp -> FALSO .)
    MULTIPLICACION  reduce using rule 141 (exp -> FALSO .)
    DIVISION        reduce using rule 141 (exp -> FALSO .)
    POTENCIA        reduce using rule 141 (exp -> FALSO .)
    MODULO          reduce using rule 141 (exp -> FALSO .)
    IGUALIGUAL      reduce using rule 141 (exp -> FALSO .)
    DISTINTO        reduce using rule 141 (exp -> FALSO .)
    MAYOR           reduce using rule 141 (exp -> FALSO .)
    MENOR           reduce using rule 141 (exp -> FALSO .)
    MAYORIGUAL      reduce using rule 141 (exp -> FALSO .)
    MENORIGUAL      reduce using rule 141 (exp -> FALSO .)
    ANDD            reduce using rule 141 (exp -> FALSO .)
    ORR             reduce using rule 141 (exp -> FALSO .)
    PRINT           reduce using rule 141 (exp -> FALSO .)
    PRINTLN         reduce using rule 141 (exp -> FALSO .)
    ID              reduce using rule 141 (exp -> FALSO .)
    GLOBAL          reduce using rule 141 (exp -> FALSO .)
    LOCAL           reduce using rule 141 (exp -> FALSO .)
    RIF             reduce using rule 141 (exp -> FALSO .)
    RWHILE          reduce using rule 141 (exp -> FALSO .)
    RFOR            reduce using rule 141 (exp -> FALSO .)
    PARDER          reduce using rule 141 (exp -> FALSO .)
    COMA            reduce using rule 141 (exp -> FALSO .)
    PTCOMA          reduce using rule 141 (exp -> FALSO .)
    DOSPT           reduce using rule 141 (exp -> FALSO .)
    CORDER          reduce using rule 141 (exp -> FALSO .)
    RELSE           reduce using rule 141 (exp -> FALSO .)
    RELSEIF         reduce using rule 141 (exp -> FALSO .)


state 53

    (142) exp -> NULO .

    END             reduce using rule 142 (exp -> NULO .)
    MAS             reduce using rule 142 (exp -> NULO .)
    MENOS           reduce using rule 142 (exp -> NULO .)
    MULTIPLICACION  reduce using rule 142 (exp -> NULO .)
    DIVISION        reduce using rule 142 (exp -> NULO .)
    POTENCIA        reduce using rule 142 (exp -> NULO .)
    MODULO          reduce using rule 142 (exp -> NULO .)
    IGUALIGUAL      reduce using rule 142 (exp -> NULO .)
    DISTINTO        reduce using rule 142 (exp -> NULO .)
    MAYOR           reduce using rule 142 (exp -> NULO .)
    MENOR           reduce using rule 142 (exp -> NULO .)
    MAYORIGUAL      reduce using rule 142 (exp -> NULO .)
    MENORIGUAL      reduce using rule 142 (exp -> NULO .)
    ANDD            reduce using rule 142 (exp -> NULO .)
    ORR             reduce using rule 142 (exp -> NULO .)
    PRINT           reduce using rule 142 (exp -> NULO .)
    PRINTLN         reduce using rule 142 (exp -> NULO .)
    ID              reduce using rule 142 (exp -> NULO .)
    GLOBAL          reduce using rule 142 (exp -> NULO .)
    LOCAL           reduce using rule 142 (exp -> NULO .)
    RIF             reduce using rule 142 (exp -> NULO .)
    RWHILE          reduce using rule 142 (exp -> NULO .)
    RFOR            reduce using rule 142 (exp -> NULO .)
    PARDER          reduce using rule 142 (exp -> NULO .)
    COMA            reduce using rule 142 (exp -> NULO .)
    PTCOMA          reduce using rule 142 (exp -> NULO .)
    DOSPT           reduce using rule 142 (exp -> NULO .)
    CORDER          reduce using rule 142 (exp -> NULO .)
    RELSE           reduce using rule 142 (exp -> NULO .)
    RELSEIF         reduce using rule 142 (exp -> NULO .)


state 54

    (143) exp -> ID .
    (144) exp -> ID . listArray
    (146) listArray -> . listArray CORIZQ exp CORDER
    (147) listArray -> . CORIZQ exp CORDER

    END             reduce using rule 143 (exp -> ID .)
    MAS             reduce using rule 143 (exp -> ID .)
    MENOS           reduce using rule 143 (exp -> ID .)
    MULTIPLICACION  reduce using rule 143 (exp -> ID .)
    DIVISION        reduce using rule 143 (exp -> ID .)
    POTENCIA        reduce using rule 143 (exp -> ID .)
    MODULO          reduce using rule 143 (exp -> ID .)
    IGUALIGUAL      reduce using rule 143 (exp -> ID .)
    DISTINTO        reduce using rule 143 (exp -> ID .)
    MAYOR           reduce using rule 143 (exp -> ID .)
    MENOR           reduce using rule 143 (exp -> ID .)
    MAYORIGUAL      reduce using rule 143 (exp -> ID .)
    MENORIGUAL      reduce using rule 143 (exp -> ID .)
    ANDD            reduce using rule 143 (exp -> ID .)
    ORR             reduce using rule 143 (exp -> ID .)
    PRINT           reduce using rule 143 (exp -> ID .)
    PRINTLN         reduce using rule 143 (exp -> ID .)
    ID              reduce using rule 143 (exp -> ID .)
    GLOBAL          reduce using rule 143 (exp -> ID .)
    LOCAL           reduce using rule 143 (exp -> ID .)
    RIF             reduce using rule 143 (exp -> ID .)
    RWHILE          reduce using rule 143 (exp -> ID .)
    RFOR            reduce using rule 143 (exp -> ID .)
    PARDER          reduce using rule 143 (exp -> ID .)
    COMA            reduce using rule 143 (exp -> ID .)
    PTCOMA          reduce using rule 143 (exp -> ID .)
    DOSPT           reduce using rule 143 (exp -> ID .)
    CORDER          reduce using rule 143 (exp -> ID .)
    RELSE           reduce using rule 143 (exp -> ID .)
    RELSEIF         reduce using rule 143 (exp -> ID .)
    CORIZQ          shift and go to state 118

    listArray                      shift and go to state 117

state 55

    (145) exp -> CORIZQ . listValues CORDER
    (68) listValues -> . listValues COMA exp
    (69) listValues -> . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    listValues                     shift and go to state 119
    exp                            shift and go to state 66

state 56

    (92) whileSt -> RWHILE exp . blockc
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (97) blockc -> . instructionsc END PTCOMA
    (98) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    END             shift and go to state 122
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockc                         shift and go to state 120
    instructionsc                  shift and go to state 121
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 57

    (93) forSt -> RFOR parameter . RIN exp DOSPT exp blockc
    (94) forSt -> RFOR parameter . RIN exp blockc

    RIN             shift and go to state 135


state 58

    (63) parameter -> ID . DOSPT DOSPT typeDef
    (64) parameter -> ID .

    DOSPT           shift and go to state 136
    RIN             reduce using rule 64 (parameter -> ID .)
    PARDER          reduce using rule 64 (parameter -> ID .)
    COMA            reduce using rule 64 (parameter -> ID .)


state 59

    (30) p_print -> PRINT PARIZQ exps . PARDER PTCOMA
    (32) exps -> exps . COMA exp

    PARDER          shift and go to state 137
    COMA            shift and go to state 138


state 60

    (33) exps -> exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          reduce using rule 33 (exps -> exp .)
    COMA            reduce using rule 33 (exps -> exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 61

    (31) p_println -> PRINTLN PARIZQ exps . PARDER PTCOMA
    (32) exps -> exps . COMA exp

    PARDER          shift and go to state 139
    COMA            shift and go to state 138


state 62

    (34) declaration -> ID IGUAL exp . PTCOMA
    (35) declaration -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PTCOMA          shift and go to state 140
    DOSPT           shift and go to state 141
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 63

    (65) callFuncSt -> ID parametersCallFunc PTCOMA .

    PRINT           reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    PRINTLN         reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    ID              reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    GLOBAL          reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    LOCAL           reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    FUNCTION        reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RIF             reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RWHILE          reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RFOR            reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    $end            reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    END             reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSE           reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)
    RELSEIF         reduce using rule 65 (callFuncSt -> ID parametersCallFunc PTCOMA .)


state 64

    (66) parametersCallFunc -> PARIZQ listValues . PARDER
    (68) listValues -> listValues . COMA exp

    PARDER          shift and go to state 142
    COMA            shift and go to state 143


state 65

    (67) parametersCallFunc -> PARIZQ PARDER .

    PTCOMA          reduce using rule 67 (parametersCallFunc -> PARIZQ PARDER .)


state 66

    (69) listValues -> exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          reduce using rule 69 (listValues -> exp .)
    COMA            reduce using rule 69 (listValues -> exp .)
    CORDER          reduce using rule 69 (listValues -> exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 67

    (36) declaration -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> GLOBAL ID IGUAL . exp PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 144

state 68

    (38) declaration -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    FUNCTION        reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)
    $end            reduce using rule 38 (declaration -> GLOBAL ID PTCOMA .)


state 69

    (39) declaration -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (40) declaration -> LOCAL ID IGUAL . exp PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 145

state 70

    (41) declaration -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    ID              reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    FUNCTION        reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)
    $end            reduce using rule 41 (declaration -> LOCAL ID PTCOMA .)


state 71

    (58) function -> FUNCTION ID parametersFunc . blockf
    (95) blockf -> . instructionsf END PTCOMA
    (96) blockf -> . END PTCOMA
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 148
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockf                         shift and go to state 146
    instructionsf                  shift and go to state 147
    instructionf                   shift and go to state 90
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 72

    (59) parametersFunc -> PARIZQ . parameters PARDER
    (60) parametersFunc -> PARIZQ . PARDER
    (61) parameters -> . parameters COMA parameter
    (62) parameters -> . parameter
    (63) parameter -> . ID DOSPT DOSPT typeDef
    (64) parameter -> . ID

    PARDER          shift and go to state 150
    ID              shift and go to state 58

    parameters                     shift and go to state 149
    parameter                      shift and go to state 151

state 73

    (70) ifSt -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 152


state 74

    (71) ifSt -> RIF exp blockiff . END PTCOMA
    (72) ifSt -> RIF exp blockiff . RELSE blockiff END PTCOMA
    (73) ifSt -> RIF exp blockiff . RELSE END PTCOMA
    (74) ifSt -> RIF exp blockiff . elseifSt END PTCOMA
    (75) ifSt -> RIF exp blockiff . elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> RIF exp blockiff . elseifSt RELSE END PTCOMA
    (77) elseifSt -> . elseifSt conelseif
    (78) elseifSt -> . conelseif
    (79) conelseif -> . RELSEIF exp blockiff
    (80) conelseif -> . RELSEIF exp

    END             shift and go to state 153
    RELSE           shift and go to state 154
    RELSEIF         shift and go to state 157

    elseifSt                       shift and go to state 155
    conelseif                      shift and go to state 156

state 75

    (101) exp -> exp MAS . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 158

state 76

    (102) exp -> exp MENOS . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 159

state 77

    (103) exp -> exp MULTIPLICACION . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 160

state 78

    (104) exp -> exp DIVISION . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 161

state 79

    (105) exp -> exp POTENCIA . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 162

state 80

    (106) exp -> exp MODULO . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 163

state 81

    (108) exp -> exp IGUALIGUAL . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 164

state 82

    (109) exp -> exp DISTINTO . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 165

state 83

    (110) exp -> exp MAYOR . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 166

state 84

    (111) exp -> exp MENOR . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 167

state 85

    (112) exp -> exp MAYORIGUAL . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 168

state 86

    (113) exp -> exp MENORIGUAL . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 169

state 87

    (114) exp -> exp ANDD . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 170

state 88

    (115) exp -> exp ORR . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 171

state 89

    (99) blockiff -> instructionsf .
    (4) instructionsf -> instructionsf . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             reduce using rule 99 (blockiff -> instructionsf .)
    RELSE           reduce using rule 99 (blockiff -> instructionsf .)
    RELSEIF         reduce using rule 99 (blockiff -> instructionsf .)
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    instructionf                   shift and go to state 172
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 90

    (5) instructionsf -> instructionf .

    PRINT           reduce using rule 5 (instructionsf -> instructionf .)
    PRINTLN         reduce using rule 5 (instructionsf -> instructionf .)
    ID              reduce using rule 5 (instructionsf -> instructionf .)
    GLOBAL          reduce using rule 5 (instructionsf -> instructionf .)
    LOCAL           reduce using rule 5 (instructionsf -> instructionf .)
    RIF             reduce using rule 5 (instructionsf -> instructionf .)
    RWHILE          reduce using rule 5 (instructionsf -> instructionf .)
    RFOR            reduce using rule 5 (instructionsf -> instructionf .)
    END             reduce using rule 5 (instructionsf -> instructionf .)
    RELSE           reduce using rule 5 (instructionsf -> instructionf .)
    RELSEIF         reduce using rule 5 (instructionsf -> instructionf .)


state 91

    (16) instructionf -> p_print .

    PRINT           reduce using rule 16 (instructionf -> p_print .)
    PRINTLN         reduce using rule 16 (instructionf -> p_print .)
    ID              reduce using rule 16 (instructionf -> p_print .)
    GLOBAL          reduce using rule 16 (instructionf -> p_print .)
    LOCAL           reduce using rule 16 (instructionf -> p_print .)
    RIF             reduce using rule 16 (instructionf -> p_print .)
    RWHILE          reduce using rule 16 (instructionf -> p_print .)
    RFOR            reduce using rule 16 (instructionf -> p_print .)
    END             reduce using rule 16 (instructionf -> p_print .)
    RELSE           reduce using rule 16 (instructionf -> p_print .)
    RELSEIF         reduce using rule 16 (instructionf -> p_print .)


state 92

    (17) instructionf -> p_println .

    PRINT           reduce using rule 17 (instructionf -> p_println .)
    PRINTLN         reduce using rule 17 (instructionf -> p_println .)
    ID              reduce using rule 17 (instructionf -> p_println .)
    GLOBAL          reduce using rule 17 (instructionf -> p_println .)
    LOCAL           reduce using rule 17 (instructionf -> p_println .)
    RIF             reduce using rule 17 (instructionf -> p_println .)
    RWHILE          reduce using rule 17 (instructionf -> p_println .)
    RFOR            reduce using rule 17 (instructionf -> p_println .)
    END             reduce using rule 17 (instructionf -> p_println .)
    RELSE           reduce using rule 17 (instructionf -> p_println .)
    RELSEIF         reduce using rule 17 (instructionf -> p_println .)


state 93

    (18) instructionf -> declarationf .

    PRINT           reduce using rule 18 (instructionf -> declarationf .)
    PRINTLN         reduce using rule 18 (instructionf -> declarationf .)
    ID              reduce using rule 18 (instructionf -> declarationf .)
    GLOBAL          reduce using rule 18 (instructionf -> declarationf .)
    LOCAL           reduce using rule 18 (instructionf -> declarationf .)
    RIF             reduce using rule 18 (instructionf -> declarationf .)
    RWHILE          reduce using rule 18 (instructionf -> declarationf .)
    RFOR            reduce using rule 18 (instructionf -> declarationf .)
    END             reduce using rule 18 (instructionf -> declarationf .)
    RELSE           reduce using rule 18 (instructionf -> declarationf .)
    RELSEIF         reduce using rule 18 (instructionf -> declarationf .)


state 94

    (19) instructionf -> callFuncSt .

    PRINT           reduce using rule 19 (instructionf -> callFuncSt .)
    PRINTLN         reduce using rule 19 (instructionf -> callFuncSt .)
    ID              reduce using rule 19 (instructionf -> callFuncSt .)
    GLOBAL          reduce using rule 19 (instructionf -> callFuncSt .)
    LOCAL           reduce using rule 19 (instructionf -> callFuncSt .)
    RIF             reduce using rule 19 (instructionf -> callFuncSt .)
    RWHILE          reduce using rule 19 (instructionf -> callFuncSt .)
    RFOR            reduce using rule 19 (instructionf -> callFuncSt .)
    END             reduce using rule 19 (instructionf -> callFuncSt .)
    RELSE           reduce using rule 19 (instructionf -> callFuncSt .)
    RELSEIF         reduce using rule 19 (instructionf -> callFuncSt .)


state 95

    (20) instructionf -> ifSt .

    PRINT           reduce using rule 20 (instructionf -> ifSt .)
    PRINTLN         reduce using rule 20 (instructionf -> ifSt .)
    ID              reduce using rule 20 (instructionf -> ifSt .)
    GLOBAL          reduce using rule 20 (instructionf -> ifSt .)
    LOCAL           reduce using rule 20 (instructionf -> ifSt .)
    RIF             reduce using rule 20 (instructionf -> ifSt .)
    RWHILE          reduce using rule 20 (instructionf -> ifSt .)
    RFOR            reduce using rule 20 (instructionf -> ifSt .)
    END             reduce using rule 20 (instructionf -> ifSt .)
    RELSE           reduce using rule 20 (instructionf -> ifSt .)
    RELSEIF         reduce using rule 20 (instructionf -> ifSt .)


state 96

    (21) instructionf -> whileSt .

    PRINT           reduce using rule 21 (instructionf -> whileSt .)
    PRINTLN         reduce using rule 21 (instructionf -> whileSt .)
    ID              reduce using rule 21 (instructionf -> whileSt .)
    GLOBAL          reduce using rule 21 (instructionf -> whileSt .)
    LOCAL           reduce using rule 21 (instructionf -> whileSt .)
    RIF             reduce using rule 21 (instructionf -> whileSt .)
    RWHILE          reduce using rule 21 (instructionf -> whileSt .)
    RFOR            reduce using rule 21 (instructionf -> whileSt .)
    END             reduce using rule 21 (instructionf -> whileSt .)
    RELSE           reduce using rule 21 (instructionf -> whileSt .)
    RELSEIF         reduce using rule 21 (instructionf -> whileSt .)


state 97

    (22) instructionf -> forSt .

    PRINT           reduce using rule 22 (instructionf -> forSt .)
    PRINTLN         reduce using rule 22 (instructionf -> forSt .)
    ID              reduce using rule 22 (instructionf -> forSt .)
    GLOBAL          reduce using rule 22 (instructionf -> forSt .)
    LOCAL           reduce using rule 22 (instructionf -> forSt .)
    RIF             reduce using rule 22 (instructionf -> forSt .)
    RWHILE          reduce using rule 22 (instructionf -> forSt .)
    RFOR            reduce using rule 22 (instructionf -> forSt .)
    END             reduce using rule 22 (instructionf -> forSt .)
    RELSE           reduce using rule 22 (instructionf -> forSt .)
    RELSEIF         reduce using rule 22 (instructionf -> forSt .)


state 98

    (42) declarationf -> ID . IGUAL exp PTCOMA
    (43) declarationf -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) callFuncSt -> ID . parametersCallFunc PTCOMA
    (66) parametersCallFunc -> . PARIZQ listValues PARDER
    (67) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 173
    PARIZQ          shift and go to state 26

    parametersCallFunc             shift and go to state 25

state 99

    (44) declarationf -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> GLOBAL . ID IGUAL exp PTCOMA
    (46) declarationf -> GLOBAL . ID PTCOMA

    ID              shift and go to state 174


state 100

    (47) declarationf -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> LOCAL . ID IGUAL exp PTCOMA
    (49) declarationf -> LOCAL . ID PTCOMA

    ID              shift and go to state 175


state 101

    (107) exp -> MENOS exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 107 (exp -> MENOS exp .)
    MAS             reduce using rule 107 (exp -> MENOS exp .)
    MENOS           reduce using rule 107 (exp -> MENOS exp .)
    MULTIPLICACION  reduce using rule 107 (exp -> MENOS exp .)
    DIVISION        reduce using rule 107 (exp -> MENOS exp .)
    POTENCIA        reduce using rule 107 (exp -> MENOS exp .)
    MODULO          reduce using rule 107 (exp -> MENOS exp .)
    IGUALIGUAL      reduce using rule 107 (exp -> MENOS exp .)
    DISTINTO        reduce using rule 107 (exp -> MENOS exp .)
    MAYOR           reduce using rule 107 (exp -> MENOS exp .)
    MENOR           reduce using rule 107 (exp -> MENOS exp .)
    MAYORIGUAL      reduce using rule 107 (exp -> MENOS exp .)
    MENORIGUAL      reduce using rule 107 (exp -> MENOS exp .)
    ANDD            reduce using rule 107 (exp -> MENOS exp .)
    ORR             reduce using rule 107 (exp -> MENOS exp .)
    PRINT           reduce using rule 107 (exp -> MENOS exp .)
    PRINTLN         reduce using rule 107 (exp -> MENOS exp .)
    ID              reduce using rule 107 (exp -> MENOS exp .)
    GLOBAL          reduce using rule 107 (exp -> MENOS exp .)
    LOCAL           reduce using rule 107 (exp -> MENOS exp .)
    RIF             reduce using rule 107 (exp -> MENOS exp .)
    RWHILE          reduce using rule 107 (exp -> MENOS exp .)
    RFOR            reduce using rule 107 (exp -> MENOS exp .)
    PARDER          reduce using rule 107 (exp -> MENOS exp .)
    COMA            reduce using rule 107 (exp -> MENOS exp .)
    PTCOMA          reduce using rule 107 (exp -> MENOS exp .)
    DOSPT           reduce using rule 107 (exp -> MENOS exp .)
    CORDER          reduce using rule 107 (exp -> MENOS exp .)
    RELSE           reduce using rule 107 (exp -> MENOS exp .)
    RELSEIF         reduce using rule 107 (exp -> MENOS exp .)

  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! MULTIPLICACION  [ shift and go to state 77 ]
  ! DIVISION        [ shift and go to state 78 ]
  ! POTENCIA        [ shift and go to state 79 ]
  ! MODULO          [ shift and go to state 80 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 102

    (116) exp -> NOTT exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 116 (exp -> NOTT exp .)
    ANDD            reduce using rule 116 (exp -> NOTT exp .)
    ORR             reduce using rule 116 (exp -> NOTT exp .)
    PRINT           reduce using rule 116 (exp -> NOTT exp .)
    PRINTLN         reduce using rule 116 (exp -> NOTT exp .)
    ID              reduce using rule 116 (exp -> NOTT exp .)
    GLOBAL          reduce using rule 116 (exp -> NOTT exp .)
    LOCAL           reduce using rule 116 (exp -> NOTT exp .)
    RIF             reduce using rule 116 (exp -> NOTT exp .)
    RWHILE          reduce using rule 116 (exp -> NOTT exp .)
    RFOR            reduce using rule 116 (exp -> NOTT exp .)
    PARDER          reduce using rule 116 (exp -> NOTT exp .)
    COMA            reduce using rule 116 (exp -> NOTT exp .)
    PTCOMA          reduce using rule 116 (exp -> NOTT exp .)
    DOSPT           reduce using rule 116 (exp -> NOTT exp .)
    CORDER          reduce using rule 116 (exp -> NOTT exp .)
    RELSE           reduce using rule 116 (exp -> NOTT exp .)
    RELSEIF         reduce using rule 116 (exp -> NOTT exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86

  ! MAS             [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MENOS           [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MULTIPLICACION  [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! DIVISION        [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! POTENCIA        [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MODULO          [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! IGUALIGUAL      [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! DISTINTO        [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MAYOR           [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MENOR           [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MAYORIGUAL      [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! MENORIGUAL      [ reduce using rule 116 (exp -> NOTT exp .) ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 103

    (117) exp -> UPPERCASE PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 176

state 104

    (135) exp -> PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 177
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 105

    (118) exp -> LOWERCASE PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 178

state 106

    (119) exp -> LOG PARIZQ . exp COMA exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 179

state 107

    (120) exp -> LOG10 PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 180

state 108

    (121) exp -> SIN PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 181

state 109

    (122) exp -> COS PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 182

state 110

    (123) exp -> TAN PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 183

state 111

    (124) exp -> SQRT PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 184

state 112

    (125) exp -> PARSE PARIZQ . typeDef COMA exp PARDER
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 185

state 113

    (126) exp -> TRUNC PARIZQ . typeDef COMA exp PARDER
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 191

state 114

    (127) exp -> MFLOAT PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 192

state 115

    (128) exp -> MSTRING PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 193

state 116

    (129) exp -> TYPEOF PARIZQ . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 194

state 117

    (144) exp -> ID listArray .
    (146) listArray -> listArray . CORIZQ exp CORDER

    END             reduce using rule 144 (exp -> ID listArray .)
    MAS             reduce using rule 144 (exp -> ID listArray .)
    MENOS           reduce using rule 144 (exp -> ID listArray .)
    MULTIPLICACION  reduce using rule 144 (exp -> ID listArray .)
    DIVISION        reduce using rule 144 (exp -> ID listArray .)
    POTENCIA        reduce using rule 144 (exp -> ID listArray .)
    MODULO          reduce using rule 144 (exp -> ID listArray .)
    IGUALIGUAL      reduce using rule 144 (exp -> ID listArray .)
    DISTINTO        reduce using rule 144 (exp -> ID listArray .)
    MAYOR           reduce using rule 144 (exp -> ID listArray .)
    MENOR           reduce using rule 144 (exp -> ID listArray .)
    MAYORIGUAL      reduce using rule 144 (exp -> ID listArray .)
    MENORIGUAL      reduce using rule 144 (exp -> ID listArray .)
    ANDD            reduce using rule 144 (exp -> ID listArray .)
    ORR             reduce using rule 144 (exp -> ID listArray .)
    PRINT           reduce using rule 144 (exp -> ID listArray .)
    PRINTLN         reduce using rule 144 (exp -> ID listArray .)
    ID              reduce using rule 144 (exp -> ID listArray .)
    GLOBAL          reduce using rule 144 (exp -> ID listArray .)
    LOCAL           reduce using rule 144 (exp -> ID listArray .)
    RIF             reduce using rule 144 (exp -> ID listArray .)
    RWHILE          reduce using rule 144 (exp -> ID listArray .)
    RFOR            reduce using rule 144 (exp -> ID listArray .)
    PARDER          reduce using rule 144 (exp -> ID listArray .)
    COMA            reduce using rule 144 (exp -> ID listArray .)
    PTCOMA          reduce using rule 144 (exp -> ID listArray .)
    DOSPT           reduce using rule 144 (exp -> ID listArray .)
    CORDER          reduce using rule 144 (exp -> ID listArray .)
    RELSE           reduce using rule 144 (exp -> ID listArray .)
    RELSEIF         reduce using rule 144 (exp -> ID listArray .)
    CORIZQ          shift and go to state 195


state 118

    (147) listArray -> CORIZQ . exp CORDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 196

state 119

    (145) exp -> CORIZQ listValues . CORDER
    (68) listValues -> listValues . COMA exp

    CORDER          shift and go to state 197
    COMA            shift and go to state 143


state 120

    (92) whileSt -> RWHILE exp blockc .

    PRINT           reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    PRINTLN         reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    ID              reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    GLOBAL          reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    LOCAL           reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    FUNCTION        reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    RIF             reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    RWHILE          reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    RFOR            reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    $end            reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    END             reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    RELSE           reduce using rule 92 (whileSt -> RWHILE exp blockc .)
    RELSEIF         reduce using rule 92 (whileSt -> RWHILE exp blockc .)


state 121

    (97) blockc -> instructionsc . END PTCOMA
    (6) instructionsc -> instructionsc . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 198
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    instructionc                   shift and go to state 199
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 122

    (98) blockc -> END . PTCOMA

    PTCOMA          shift and go to state 200


state 123

    (7) instructionsc -> instructionc .

    END             reduce using rule 7 (instructionsc -> instructionc .)
    PRINT           reduce using rule 7 (instructionsc -> instructionc .)
    PRINTLN         reduce using rule 7 (instructionsc -> instructionc .)
    ID              reduce using rule 7 (instructionsc -> instructionc .)
    LOCAL           reduce using rule 7 (instructionsc -> instructionc .)
    GLOBAL          reduce using rule 7 (instructionsc -> instructionc .)
    RIF             reduce using rule 7 (instructionsc -> instructionc .)
    RWHILE          reduce using rule 7 (instructionsc -> instructionc .)
    RFOR            reduce using rule 7 (instructionsc -> instructionc .)
    RELSE           reduce using rule 7 (instructionsc -> instructionc .)
    RELSEIF         reduce using rule 7 (instructionsc -> instructionc .)


state 124

    (23) instructionc -> p_print .

    END             reduce using rule 23 (instructionc -> p_print .)
    PRINT           reduce using rule 23 (instructionc -> p_print .)
    PRINTLN         reduce using rule 23 (instructionc -> p_print .)
    ID              reduce using rule 23 (instructionc -> p_print .)
    LOCAL           reduce using rule 23 (instructionc -> p_print .)
    GLOBAL          reduce using rule 23 (instructionc -> p_print .)
    RIF             reduce using rule 23 (instructionc -> p_print .)
    RWHILE          reduce using rule 23 (instructionc -> p_print .)
    RFOR            reduce using rule 23 (instructionc -> p_print .)
    RELSE           reduce using rule 23 (instructionc -> p_print .)
    RELSEIF         reduce using rule 23 (instructionc -> p_print .)


state 125

    (24) instructionc -> p_println .

    END             reduce using rule 24 (instructionc -> p_println .)
    PRINT           reduce using rule 24 (instructionc -> p_println .)
    PRINTLN         reduce using rule 24 (instructionc -> p_println .)
    ID              reduce using rule 24 (instructionc -> p_println .)
    LOCAL           reduce using rule 24 (instructionc -> p_println .)
    GLOBAL          reduce using rule 24 (instructionc -> p_println .)
    RIF             reduce using rule 24 (instructionc -> p_println .)
    RWHILE          reduce using rule 24 (instructionc -> p_println .)
    RFOR            reduce using rule 24 (instructionc -> p_println .)
    RELSE           reduce using rule 24 (instructionc -> p_println .)
    RELSEIF         reduce using rule 24 (instructionc -> p_println .)


state 126

    (25) instructionc -> declarationc .

    END             reduce using rule 25 (instructionc -> declarationc .)
    PRINT           reduce using rule 25 (instructionc -> declarationc .)
    PRINTLN         reduce using rule 25 (instructionc -> declarationc .)
    ID              reduce using rule 25 (instructionc -> declarationc .)
    LOCAL           reduce using rule 25 (instructionc -> declarationc .)
    GLOBAL          reduce using rule 25 (instructionc -> declarationc .)
    RIF             reduce using rule 25 (instructionc -> declarationc .)
    RWHILE          reduce using rule 25 (instructionc -> declarationc .)
    RFOR            reduce using rule 25 (instructionc -> declarationc .)
    RELSE           reduce using rule 25 (instructionc -> declarationc .)
    RELSEIF         reduce using rule 25 (instructionc -> declarationc .)


state 127

    (26) instructionc -> callFuncSt .

    END             reduce using rule 26 (instructionc -> callFuncSt .)
    PRINT           reduce using rule 26 (instructionc -> callFuncSt .)
    PRINTLN         reduce using rule 26 (instructionc -> callFuncSt .)
    ID              reduce using rule 26 (instructionc -> callFuncSt .)
    LOCAL           reduce using rule 26 (instructionc -> callFuncSt .)
    GLOBAL          reduce using rule 26 (instructionc -> callFuncSt .)
    RIF             reduce using rule 26 (instructionc -> callFuncSt .)
    RWHILE          reduce using rule 26 (instructionc -> callFuncSt .)
    RFOR            reduce using rule 26 (instructionc -> callFuncSt .)
    RELSE           reduce using rule 26 (instructionc -> callFuncSt .)
    RELSEIF         reduce using rule 26 (instructionc -> callFuncSt .)


state 128

    (27) instructionc -> ifStc .

    END             reduce using rule 27 (instructionc -> ifStc .)
    PRINT           reduce using rule 27 (instructionc -> ifStc .)
    PRINTLN         reduce using rule 27 (instructionc -> ifStc .)
    ID              reduce using rule 27 (instructionc -> ifStc .)
    LOCAL           reduce using rule 27 (instructionc -> ifStc .)
    GLOBAL          reduce using rule 27 (instructionc -> ifStc .)
    RIF             reduce using rule 27 (instructionc -> ifStc .)
    RWHILE          reduce using rule 27 (instructionc -> ifStc .)
    RFOR            reduce using rule 27 (instructionc -> ifStc .)
    RELSE           reduce using rule 27 (instructionc -> ifStc .)
    RELSEIF         reduce using rule 27 (instructionc -> ifStc .)


state 129

    (28) instructionc -> whileSt .

    END             reduce using rule 28 (instructionc -> whileSt .)
    PRINT           reduce using rule 28 (instructionc -> whileSt .)
    PRINTLN         reduce using rule 28 (instructionc -> whileSt .)
    ID              reduce using rule 28 (instructionc -> whileSt .)
    LOCAL           reduce using rule 28 (instructionc -> whileSt .)
    GLOBAL          reduce using rule 28 (instructionc -> whileSt .)
    RIF             reduce using rule 28 (instructionc -> whileSt .)
    RWHILE          reduce using rule 28 (instructionc -> whileSt .)
    RFOR            reduce using rule 28 (instructionc -> whileSt .)
    RELSE           reduce using rule 28 (instructionc -> whileSt .)
    RELSEIF         reduce using rule 28 (instructionc -> whileSt .)


state 130

    (29) instructionc -> forSt .

    END             reduce using rule 29 (instructionc -> forSt .)
    PRINT           reduce using rule 29 (instructionc -> forSt .)
    PRINTLN         reduce using rule 29 (instructionc -> forSt .)
    ID              reduce using rule 29 (instructionc -> forSt .)
    LOCAL           reduce using rule 29 (instructionc -> forSt .)
    GLOBAL          reduce using rule 29 (instructionc -> forSt .)
    RIF             reduce using rule 29 (instructionc -> forSt .)
    RWHILE          reduce using rule 29 (instructionc -> forSt .)
    RFOR            reduce using rule 29 (instructionc -> forSt .)
    RELSE           reduce using rule 29 (instructionc -> forSt .)
    RELSEIF         reduce using rule 29 (instructionc -> forSt .)


state 131

    (50) declarationc -> ID . IGUAL exp PTCOMA
    (51) declarationc -> ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (65) callFuncSt -> ID . parametersCallFunc PTCOMA
    (66) parametersCallFunc -> . PARIZQ listValues PARDER
    (67) parametersCallFunc -> . PARIZQ PARDER

    IGUAL           shift and go to state 201
    PARIZQ          shift and go to state 26

    parametersCallFunc             shift and go to state 25

state 132

    (52) declarationc -> LOCAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> LOCAL . ID IGUAL exp PTCOMA
    (54) declarationc -> LOCAL . ID PTCOMA

    ID              shift and go to state 202


state 133

    (55) declarationc -> GLOBAL . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> GLOBAL . ID IGUAL exp PTCOMA
    (57) declarationc -> GLOBAL . ID PTCOMA

    ID              shift and go to state 203


state 134

    (81) ifStc -> RIF . exp END PTCOMA
    (82) ifStc -> RIF . exp blockifc END PTCOMA
    (83) ifStc -> RIF . exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> RIF . exp blockifc RELSE END PTCOMA
    (85) ifStc -> RIF . exp blockifc elseifStc END PTCOMA
    (86) ifStc -> RIF . exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> RIF . exp blockifc elseifStc RELSE END PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 204

state 135

    (93) forSt -> RFOR parameter RIN . exp DOSPT exp blockc
    (94) forSt -> RFOR parameter RIN . exp blockc
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 205

state 136

    (63) parameter -> ID DOSPT . DOSPT typeDef

    DOSPT           shift and go to state 206


state 137

    (30) p_print -> PRINT PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 207


state 138

    (32) exps -> exps COMA . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 208

state 139

    (31) p_println -> PRINTLN PARIZQ exps PARDER . PTCOMA

    PTCOMA          shift and go to state 209


state 140

    (34) declaration -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)
    $end            reduce using rule 34 (declaration -> ID IGUAL exp PTCOMA .)


state 141

    (35) declaration -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 210


state 142

    (66) parametersCallFunc -> PARIZQ listValues PARDER .

    PTCOMA          reduce using rule 66 (parametersCallFunc -> PARIZQ listValues PARDER .)


state 143

    (68) listValues -> listValues COMA . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 211

state 144

    (36) declaration -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (37) declaration -> GLOBAL ID IGUAL exp . PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    DOSPT           shift and go to state 212
    PTCOMA          shift and go to state 213
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 145

    (39) declaration -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (40) declaration -> LOCAL ID IGUAL exp . PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    DOSPT           shift and go to state 214
    PTCOMA          shift and go to state 215
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 146

    (58) function -> FUNCTION ID parametersFunc blockf .

    PRINT           reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    PRINTLN         reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    ID              reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    GLOBAL          reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    LOCAL           reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    FUNCTION        reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    RIF             reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    RWHILE          reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    RFOR            reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)
    $end            reduce using rule 58 (function -> FUNCTION ID parametersFunc blockf .)


state 147

    (95) blockf -> instructionsf . END PTCOMA
    (4) instructionsf -> instructionsf . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 216
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    instructionf                   shift and go to state 172
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 148

    (96) blockf -> END . PTCOMA

    PTCOMA          shift and go to state 217


state 149

    (59) parametersFunc -> PARIZQ parameters . PARDER
    (61) parameters -> parameters . COMA parameter

    PARDER          shift and go to state 218
    COMA            shift and go to state 219


state 150

    (60) parametersFunc -> PARIZQ PARDER .

    END             reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    PRINT           reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    PRINTLN         reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    ID              reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    GLOBAL          reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    LOCAL           reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    RIF             reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    RWHILE          reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)
    RFOR            reduce using rule 60 (parametersFunc -> PARIZQ PARDER .)


state 151

    (62) parameters -> parameter .

    PARDER          reduce using rule 62 (parameters -> parameter .)
    COMA            reduce using rule 62 (parameters -> parameter .)


state 152

    (70) ifSt -> RIF exp END PTCOMA .

    PRINT           reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    ID              reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    FUNCTION        reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    RIF             reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    $end            reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    END             reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 70 (ifSt -> RIF exp END PTCOMA .)


state 153

    (71) ifSt -> RIF exp blockiff END . PTCOMA

    PTCOMA          shift and go to state 220


state 154

    (72) ifSt -> RIF exp blockiff RELSE . blockiff END PTCOMA
    (73) ifSt -> RIF exp blockiff RELSE . END PTCOMA
    (99) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 222
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockiff                       shift and go to state 221
    instructionsf                  shift and go to state 89
    instructionf                   shift and go to state 90
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 155

    (74) ifSt -> RIF exp blockiff elseifSt . END PTCOMA
    (75) ifSt -> RIF exp blockiff elseifSt . RELSE blockiff END PTCOMA
    (76) ifSt -> RIF exp blockiff elseifSt . RELSE END PTCOMA
    (77) elseifSt -> elseifSt . conelseif
    (79) conelseif -> . RELSEIF exp blockiff
    (80) conelseif -> . RELSEIF exp

    END             shift and go to state 223
    RELSE           shift and go to state 224
    RELSEIF         shift and go to state 157

    conelseif                      shift and go to state 225

state 156

    (78) elseifSt -> conelseif .

    END             reduce using rule 78 (elseifSt -> conelseif .)
    RELSE           reduce using rule 78 (elseifSt -> conelseif .)
    RELSEIF         reduce using rule 78 (elseifSt -> conelseif .)


state 157

    (79) conelseif -> RELSEIF . exp blockiff
    (80) conelseif -> RELSEIF . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 226

state 158

    (101) exp -> exp MAS exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 101 (exp -> exp MAS exp .)
    MAS             reduce using rule 101 (exp -> exp MAS exp .)
    MENOS           reduce using rule 101 (exp -> exp MAS exp .)
    IGUALIGUAL      reduce using rule 101 (exp -> exp MAS exp .)
    DISTINTO        reduce using rule 101 (exp -> exp MAS exp .)
    MAYOR           reduce using rule 101 (exp -> exp MAS exp .)
    MENOR           reduce using rule 101 (exp -> exp MAS exp .)
    MAYORIGUAL      reduce using rule 101 (exp -> exp MAS exp .)
    MENORIGUAL      reduce using rule 101 (exp -> exp MAS exp .)
    ANDD            reduce using rule 101 (exp -> exp MAS exp .)
    ORR             reduce using rule 101 (exp -> exp MAS exp .)
    PRINT           reduce using rule 101 (exp -> exp MAS exp .)
    PRINTLN         reduce using rule 101 (exp -> exp MAS exp .)
    ID              reduce using rule 101 (exp -> exp MAS exp .)
    GLOBAL          reduce using rule 101 (exp -> exp MAS exp .)
    LOCAL           reduce using rule 101 (exp -> exp MAS exp .)
    RIF             reduce using rule 101 (exp -> exp MAS exp .)
    RWHILE          reduce using rule 101 (exp -> exp MAS exp .)
    RFOR            reduce using rule 101 (exp -> exp MAS exp .)
    PARDER          reduce using rule 101 (exp -> exp MAS exp .)
    COMA            reduce using rule 101 (exp -> exp MAS exp .)
    PTCOMA          reduce using rule 101 (exp -> exp MAS exp .)
    DOSPT           reduce using rule 101 (exp -> exp MAS exp .)
    CORDER          reduce using rule 101 (exp -> exp MAS exp .)
    RELSE           reduce using rule 101 (exp -> exp MAS exp .)
    RELSEIF         reduce using rule 101 (exp -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MULTIPLICACION  [ reduce using rule 101 (exp -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 101 (exp -> exp MAS exp .) ]
  ! POTENCIA        [ reduce using rule 101 (exp -> exp MAS exp .) ]
  ! MODULO          [ reduce using rule 101 (exp -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 159

    (102) exp -> exp MENOS exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 102 (exp -> exp MENOS exp .)
    MAS             reduce using rule 102 (exp -> exp MENOS exp .)
    MENOS           reduce using rule 102 (exp -> exp MENOS exp .)
    IGUALIGUAL      reduce using rule 102 (exp -> exp MENOS exp .)
    DISTINTO        reduce using rule 102 (exp -> exp MENOS exp .)
    MAYOR           reduce using rule 102 (exp -> exp MENOS exp .)
    MENOR           reduce using rule 102 (exp -> exp MENOS exp .)
    MAYORIGUAL      reduce using rule 102 (exp -> exp MENOS exp .)
    MENORIGUAL      reduce using rule 102 (exp -> exp MENOS exp .)
    ANDD            reduce using rule 102 (exp -> exp MENOS exp .)
    ORR             reduce using rule 102 (exp -> exp MENOS exp .)
    PRINT           reduce using rule 102 (exp -> exp MENOS exp .)
    PRINTLN         reduce using rule 102 (exp -> exp MENOS exp .)
    ID              reduce using rule 102 (exp -> exp MENOS exp .)
    GLOBAL          reduce using rule 102 (exp -> exp MENOS exp .)
    LOCAL           reduce using rule 102 (exp -> exp MENOS exp .)
    RIF             reduce using rule 102 (exp -> exp MENOS exp .)
    RWHILE          reduce using rule 102 (exp -> exp MENOS exp .)
    RFOR            reduce using rule 102 (exp -> exp MENOS exp .)
    PARDER          reduce using rule 102 (exp -> exp MENOS exp .)
    COMA            reduce using rule 102 (exp -> exp MENOS exp .)
    PTCOMA          reduce using rule 102 (exp -> exp MENOS exp .)
    DOSPT           reduce using rule 102 (exp -> exp MENOS exp .)
    CORDER          reduce using rule 102 (exp -> exp MENOS exp .)
    RELSE           reduce using rule 102 (exp -> exp MENOS exp .)
    RELSEIF         reduce using rule 102 (exp -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MULTIPLICACION  [ reduce using rule 102 (exp -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 102 (exp -> exp MENOS exp .) ]
  ! POTENCIA        [ reduce using rule 102 (exp -> exp MENOS exp .) ]
  ! MODULO          [ reduce using rule 102 (exp -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 160

    (103) exp -> exp MULTIPLICACION exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MAS             reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    IGUALIGUAL      reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    DISTINTO        reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MAYORIGUAL      reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    MENORIGUAL      reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    ANDD            reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    ORR             reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    PRINTLN         reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    ID              reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    GLOBAL          reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    LOCAL           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    RIF             reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    RWHILE          reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    RFOR            reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    PARDER          reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    PTCOMA          reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    DOSPT           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    CORDER          reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    RELSE           reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    RELSEIF         reduce using rule 103 (exp -> exp MULTIPLICACION exp .)
    POTENCIA        shift and go to state 79

  ! POTENCIA        [ reduce using rule 103 (exp -> exp MULTIPLICACION exp .) ]
  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! MULTIPLICACION  [ shift and go to state 77 ]
  ! DIVISION        [ shift and go to state 78 ]
  ! MODULO          [ shift and go to state 80 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 161

    (104) exp -> exp DIVISION exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 104 (exp -> exp DIVISION exp .)
    MAS             reduce using rule 104 (exp -> exp DIVISION exp .)
    MENOS           reduce using rule 104 (exp -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 104 (exp -> exp DIVISION exp .)
    DIVISION        reduce using rule 104 (exp -> exp DIVISION exp .)
    MODULO          reduce using rule 104 (exp -> exp DIVISION exp .)
    IGUALIGUAL      reduce using rule 104 (exp -> exp DIVISION exp .)
    DISTINTO        reduce using rule 104 (exp -> exp DIVISION exp .)
    MAYOR           reduce using rule 104 (exp -> exp DIVISION exp .)
    MENOR           reduce using rule 104 (exp -> exp DIVISION exp .)
    MAYORIGUAL      reduce using rule 104 (exp -> exp DIVISION exp .)
    MENORIGUAL      reduce using rule 104 (exp -> exp DIVISION exp .)
    ANDD            reduce using rule 104 (exp -> exp DIVISION exp .)
    ORR             reduce using rule 104 (exp -> exp DIVISION exp .)
    PRINT           reduce using rule 104 (exp -> exp DIVISION exp .)
    PRINTLN         reduce using rule 104 (exp -> exp DIVISION exp .)
    ID              reduce using rule 104 (exp -> exp DIVISION exp .)
    GLOBAL          reduce using rule 104 (exp -> exp DIVISION exp .)
    LOCAL           reduce using rule 104 (exp -> exp DIVISION exp .)
    RIF             reduce using rule 104 (exp -> exp DIVISION exp .)
    RWHILE          reduce using rule 104 (exp -> exp DIVISION exp .)
    RFOR            reduce using rule 104 (exp -> exp DIVISION exp .)
    PARDER          reduce using rule 104 (exp -> exp DIVISION exp .)
    COMA            reduce using rule 104 (exp -> exp DIVISION exp .)
    PTCOMA          reduce using rule 104 (exp -> exp DIVISION exp .)
    DOSPT           reduce using rule 104 (exp -> exp DIVISION exp .)
    CORDER          reduce using rule 104 (exp -> exp DIVISION exp .)
    RELSE           reduce using rule 104 (exp -> exp DIVISION exp .)
    RELSEIF         reduce using rule 104 (exp -> exp DIVISION exp .)
    POTENCIA        shift and go to state 79

  ! POTENCIA        [ reduce using rule 104 (exp -> exp DIVISION exp .) ]
  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! MULTIPLICACION  [ shift and go to state 77 ]
  ! DIVISION        [ shift and go to state 78 ]
  ! MODULO          [ shift and go to state 80 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 162

    (105) exp -> exp POTENCIA exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 105 (exp -> exp POTENCIA exp .)
    MAS             reduce using rule 105 (exp -> exp POTENCIA exp .)
    MENOS           reduce using rule 105 (exp -> exp POTENCIA exp .)
    MULTIPLICACION  reduce using rule 105 (exp -> exp POTENCIA exp .)
    DIVISION        reduce using rule 105 (exp -> exp POTENCIA exp .)
    POTENCIA        reduce using rule 105 (exp -> exp POTENCIA exp .)
    MODULO          reduce using rule 105 (exp -> exp POTENCIA exp .)
    IGUALIGUAL      reduce using rule 105 (exp -> exp POTENCIA exp .)
    DISTINTO        reduce using rule 105 (exp -> exp POTENCIA exp .)
    MAYOR           reduce using rule 105 (exp -> exp POTENCIA exp .)
    MENOR           reduce using rule 105 (exp -> exp POTENCIA exp .)
    MAYORIGUAL      reduce using rule 105 (exp -> exp POTENCIA exp .)
    MENORIGUAL      reduce using rule 105 (exp -> exp POTENCIA exp .)
    ANDD            reduce using rule 105 (exp -> exp POTENCIA exp .)
    ORR             reduce using rule 105 (exp -> exp POTENCIA exp .)
    PRINT           reduce using rule 105 (exp -> exp POTENCIA exp .)
    PRINTLN         reduce using rule 105 (exp -> exp POTENCIA exp .)
    ID              reduce using rule 105 (exp -> exp POTENCIA exp .)
    GLOBAL          reduce using rule 105 (exp -> exp POTENCIA exp .)
    LOCAL           reduce using rule 105 (exp -> exp POTENCIA exp .)
    RIF             reduce using rule 105 (exp -> exp POTENCIA exp .)
    RWHILE          reduce using rule 105 (exp -> exp POTENCIA exp .)
    RFOR            reduce using rule 105 (exp -> exp POTENCIA exp .)
    PARDER          reduce using rule 105 (exp -> exp POTENCIA exp .)
    COMA            reduce using rule 105 (exp -> exp POTENCIA exp .)
    PTCOMA          reduce using rule 105 (exp -> exp POTENCIA exp .)
    DOSPT           reduce using rule 105 (exp -> exp POTENCIA exp .)
    CORDER          reduce using rule 105 (exp -> exp POTENCIA exp .)
    RELSE           reduce using rule 105 (exp -> exp POTENCIA exp .)
    RELSEIF         reduce using rule 105 (exp -> exp POTENCIA exp .)

  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! MULTIPLICACION  [ shift and go to state 77 ]
  ! DIVISION        [ shift and go to state 78 ]
  ! POTENCIA        [ shift and go to state 79 ]
  ! MODULO          [ shift and go to state 80 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 163

    (106) exp -> exp MODULO exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 106 (exp -> exp MODULO exp .)
    MAS             reduce using rule 106 (exp -> exp MODULO exp .)
    MENOS           reduce using rule 106 (exp -> exp MODULO exp .)
    MULTIPLICACION  reduce using rule 106 (exp -> exp MODULO exp .)
    DIVISION        reduce using rule 106 (exp -> exp MODULO exp .)
    MODULO          reduce using rule 106 (exp -> exp MODULO exp .)
    IGUALIGUAL      reduce using rule 106 (exp -> exp MODULO exp .)
    DISTINTO        reduce using rule 106 (exp -> exp MODULO exp .)
    MAYOR           reduce using rule 106 (exp -> exp MODULO exp .)
    MENOR           reduce using rule 106 (exp -> exp MODULO exp .)
    MAYORIGUAL      reduce using rule 106 (exp -> exp MODULO exp .)
    MENORIGUAL      reduce using rule 106 (exp -> exp MODULO exp .)
    ANDD            reduce using rule 106 (exp -> exp MODULO exp .)
    ORR             reduce using rule 106 (exp -> exp MODULO exp .)
    PRINT           reduce using rule 106 (exp -> exp MODULO exp .)
    PRINTLN         reduce using rule 106 (exp -> exp MODULO exp .)
    ID              reduce using rule 106 (exp -> exp MODULO exp .)
    GLOBAL          reduce using rule 106 (exp -> exp MODULO exp .)
    LOCAL           reduce using rule 106 (exp -> exp MODULO exp .)
    RIF             reduce using rule 106 (exp -> exp MODULO exp .)
    RWHILE          reduce using rule 106 (exp -> exp MODULO exp .)
    RFOR            reduce using rule 106 (exp -> exp MODULO exp .)
    PARDER          reduce using rule 106 (exp -> exp MODULO exp .)
    COMA            reduce using rule 106 (exp -> exp MODULO exp .)
    PTCOMA          reduce using rule 106 (exp -> exp MODULO exp .)
    DOSPT           reduce using rule 106 (exp -> exp MODULO exp .)
    CORDER          reduce using rule 106 (exp -> exp MODULO exp .)
    RELSE           reduce using rule 106 (exp -> exp MODULO exp .)
    RELSEIF         reduce using rule 106 (exp -> exp MODULO exp .)
    POTENCIA        shift and go to state 79

  ! POTENCIA        [ reduce using rule 106 (exp -> exp MODULO exp .) ]
  ! MAS             [ shift and go to state 75 ]
  ! MENOS           [ shift and go to state 76 ]
  ! MULTIPLICACION  [ shift and go to state 77 ]
  ! DIVISION        [ shift and go to state 78 ]
  ! MODULO          [ shift and go to state 80 ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 164

    (108) exp -> exp IGUALIGUAL exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    IGUALIGUAL      reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    DISTINTO        reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    MAYOR           reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    MENOR           reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    MAYORIGUAL      reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    MENORIGUAL      reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    ANDD            reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    ORR             reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    PRINT           reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    PRINTLN         reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    ID              reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    GLOBAL          reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    LOCAL           reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    RIF             reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    RWHILE          reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    RFOR            reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    PARDER          reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    COMA            reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    PTCOMA          reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    DOSPT           reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    CORDER          reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    RELSE           reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    RELSEIF         reduce using rule 108 (exp -> exp IGUALIGUAL exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MAS             [ reduce using rule 108 (exp -> exp IGUALIGUAL exp .) ]
  ! MENOS           [ reduce using rule 108 (exp -> exp IGUALIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 108 (exp -> exp IGUALIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 108 (exp -> exp IGUALIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 108 (exp -> exp IGUALIGUAL exp .) ]
  ! MODULO          [ reduce using rule 108 (exp -> exp IGUALIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 165

    (109) exp -> exp DISTINTO exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 109 (exp -> exp DISTINTO exp .)
    IGUALIGUAL      reduce using rule 109 (exp -> exp DISTINTO exp .)
    DISTINTO        reduce using rule 109 (exp -> exp DISTINTO exp .)
    MAYOR           reduce using rule 109 (exp -> exp DISTINTO exp .)
    MENOR           reduce using rule 109 (exp -> exp DISTINTO exp .)
    MAYORIGUAL      reduce using rule 109 (exp -> exp DISTINTO exp .)
    MENORIGUAL      reduce using rule 109 (exp -> exp DISTINTO exp .)
    ANDD            reduce using rule 109 (exp -> exp DISTINTO exp .)
    ORR             reduce using rule 109 (exp -> exp DISTINTO exp .)
    PRINT           reduce using rule 109 (exp -> exp DISTINTO exp .)
    PRINTLN         reduce using rule 109 (exp -> exp DISTINTO exp .)
    ID              reduce using rule 109 (exp -> exp DISTINTO exp .)
    GLOBAL          reduce using rule 109 (exp -> exp DISTINTO exp .)
    LOCAL           reduce using rule 109 (exp -> exp DISTINTO exp .)
    RIF             reduce using rule 109 (exp -> exp DISTINTO exp .)
    RWHILE          reduce using rule 109 (exp -> exp DISTINTO exp .)
    RFOR            reduce using rule 109 (exp -> exp DISTINTO exp .)
    PARDER          reduce using rule 109 (exp -> exp DISTINTO exp .)
    COMA            reduce using rule 109 (exp -> exp DISTINTO exp .)
    PTCOMA          reduce using rule 109 (exp -> exp DISTINTO exp .)
    DOSPT           reduce using rule 109 (exp -> exp DISTINTO exp .)
    CORDER          reduce using rule 109 (exp -> exp DISTINTO exp .)
    RELSE           reduce using rule 109 (exp -> exp DISTINTO exp .)
    RELSEIF         reduce using rule 109 (exp -> exp DISTINTO exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MAS             [ reduce using rule 109 (exp -> exp DISTINTO exp .) ]
  ! MENOS           [ reduce using rule 109 (exp -> exp DISTINTO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (exp -> exp DISTINTO exp .) ]
  ! DIVISION        [ reduce using rule 109 (exp -> exp DISTINTO exp .) ]
  ! POTENCIA        [ reduce using rule 109 (exp -> exp DISTINTO exp .) ]
  ! MODULO          [ reduce using rule 109 (exp -> exp DISTINTO exp .) ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 166

    (110) exp -> exp MAYOR exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 110 (exp -> exp MAYOR exp .)
    IGUALIGUAL      reduce using rule 110 (exp -> exp MAYOR exp .)
    DISTINTO        reduce using rule 110 (exp -> exp MAYOR exp .)
    MAYOR           reduce using rule 110 (exp -> exp MAYOR exp .)
    MENOR           reduce using rule 110 (exp -> exp MAYOR exp .)
    MAYORIGUAL      reduce using rule 110 (exp -> exp MAYOR exp .)
    MENORIGUAL      reduce using rule 110 (exp -> exp MAYOR exp .)
    ANDD            reduce using rule 110 (exp -> exp MAYOR exp .)
    ORR             reduce using rule 110 (exp -> exp MAYOR exp .)
    PRINT           reduce using rule 110 (exp -> exp MAYOR exp .)
    PRINTLN         reduce using rule 110 (exp -> exp MAYOR exp .)
    ID              reduce using rule 110 (exp -> exp MAYOR exp .)
    GLOBAL          reduce using rule 110 (exp -> exp MAYOR exp .)
    LOCAL           reduce using rule 110 (exp -> exp MAYOR exp .)
    RIF             reduce using rule 110 (exp -> exp MAYOR exp .)
    RWHILE          reduce using rule 110 (exp -> exp MAYOR exp .)
    RFOR            reduce using rule 110 (exp -> exp MAYOR exp .)
    PARDER          reduce using rule 110 (exp -> exp MAYOR exp .)
    COMA            reduce using rule 110 (exp -> exp MAYOR exp .)
    PTCOMA          reduce using rule 110 (exp -> exp MAYOR exp .)
    DOSPT           reduce using rule 110 (exp -> exp MAYOR exp .)
    CORDER          reduce using rule 110 (exp -> exp MAYOR exp .)
    RELSE           reduce using rule 110 (exp -> exp MAYOR exp .)
    RELSEIF         reduce using rule 110 (exp -> exp MAYOR exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MAS             [ reduce using rule 110 (exp -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 110 (exp -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 110 (exp -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 110 (exp -> exp MAYOR exp .) ]
  ! POTENCIA        [ reduce using rule 110 (exp -> exp MAYOR exp .) ]
  ! MODULO          [ reduce using rule 110 (exp -> exp MAYOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 167

    (111) exp -> exp MENOR exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 111 (exp -> exp MENOR exp .)
    IGUALIGUAL      reduce using rule 111 (exp -> exp MENOR exp .)
    DISTINTO        reduce using rule 111 (exp -> exp MENOR exp .)
    MAYOR           reduce using rule 111 (exp -> exp MENOR exp .)
    MENOR           reduce using rule 111 (exp -> exp MENOR exp .)
    MAYORIGUAL      reduce using rule 111 (exp -> exp MENOR exp .)
    MENORIGUAL      reduce using rule 111 (exp -> exp MENOR exp .)
    ANDD            reduce using rule 111 (exp -> exp MENOR exp .)
    ORR             reduce using rule 111 (exp -> exp MENOR exp .)
    PRINT           reduce using rule 111 (exp -> exp MENOR exp .)
    PRINTLN         reduce using rule 111 (exp -> exp MENOR exp .)
    ID              reduce using rule 111 (exp -> exp MENOR exp .)
    GLOBAL          reduce using rule 111 (exp -> exp MENOR exp .)
    LOCAL           reduce using rule 111 (exp -> exp MENOR exp .)
    RIF             reduce using rule 111 (exp -> exp MENOR exp .)
    RWHILE          reduce using rule 111 (exp -> exp MENOR exp .)
    RFOR            reduce using rule 111 (exp -> exp MENOR exp .)
    PARDER          reduce using rule 111 (exp -> exp MENOR exp .)
    COMA            reduce using rule 111 (exp -> exp MENOR exp .)
    PTCOMA          reduce using rule 111 (exp -> exp MENOR exp .)
    DOSPT           reduce using rule 111 (exp -> exp MENOR exp .)
    CORDER          reduce using rule 111 (exp -> exp MENOR exp .)
    RELSE           reduce using rule 111 (exp -> exp MENOR exp .)
    RELSEIF         reduce using rule 111 (exp -> exp MENOR exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MAS             [ reduce using rule 111 (exp -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 111 (exp -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 111 (exp -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 111 (exp -> exp MENOR exp .) ]
  ! POTENCIA        [ reduce using rule 111 (exp -> exp MENOR exp .) ]
  ! MODULO          [ reduce using rule 111 (exp -> exp MENOR exp .) ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 168

    (112) exp -> exp MAYORIGUAL exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    IGUALIGUAL      reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    DISTINTO        reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    MAYOR           reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    MENOR           reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    MAYORIGUAL      reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    MENORIGUAL      reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    ANDD            reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    ORR             reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    PRINT           reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    PRINTLN         reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    ID              reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    GLOBAL          reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    LOCAL           reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    RIF             reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    RWHILE          reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    RFOR            reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    PARDER          reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    COMA            reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    PTCOMA          reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    DOSPT           reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    CORDER          reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    RELSE           reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    RELSEIF         reduce using rule 112 (exp -> exp MAYORIGUAL exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MAS             [ reduce using rule 112 (exp -> exp MAYORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 112 (exp -> exp MAYORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 112 (exp -> exp MAYORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 112 (exp -> exp MAYORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 112 (exp -> exp MAYORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 112 (exp -> exp MAYORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 169

    (113) exp -> exp MENORIGUAL exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    IGUALIGUAL      reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    DISTINTO        reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    MAYOR           reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    MENOR           reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    MAYORIGUAL      reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    MENORIGUAL      reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    ANDD            reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    ORR             reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    PRINT           reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    PRINTLN         reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    ID              reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    GLOBAL          reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    LOCAL           reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    RIF             reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    RWHILE          reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    RFOR            reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    PARDER          reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    COMA            reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    PTCOMA          reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    DOSPT           reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    CORDER          reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    RELSE           reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    RELSEIF         reduce using rule 113 (exp -> exp MENORIGUAL exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80

  ! MAS             [ reduce using rule 113 (exp -> exp MENORIGUAL exp .) ]
  ! MENOS           [ reduce using rule 113 (exp -> exp MENORIGUAL exp .) ]
  ! MULTIPLICACION  [ reduce using rule 113 (exp -> exp MENORIGUAL exp .) ]
  ! DIVISION        [ reduce using rule 113 (exp -> exp MENORIGUAL exp .) ]
  ! POTENCIA        [ reduce using rule 113 (exp -> exp MENORIGUAL exp .) ]
  ! MODULO          [ reduce using rule 113 (exp -> exp MENORIGUAL exp .) ]
  ! IGUALIGUAL      [ shift and go to state 81 ]
  ! DISTINTO        [ shift and go to state 82 ]
  ! MAYOR           [ shift and go to state 83 ]
  ! MENOR           [ shift and go to state 84 ]
  ! MAYORIGUAL      [ shift and go to state 85 ]
  ! MENORIGUAL      [ shift and go to state 86 ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 170

    (114) exp -> exp ANDD exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 114 (exp -> exp ANDD exp .)
    ANDD            reduce using rule 114 (exp -> exp ANDD exp .)
    PRINT           reduce using rule 114 (exp -> exp ANDD exp .)
    PRINTLN         reduce using rule 114 (exp -> exp ANDD exp .)
    ID              reduce using rule 114 (exp -> exp ANDD exp .)
    GLOBAL          reduce using rule 114 (exp -> exp ANDD exp .)
    LOCAL           reduce using rule 114 (exp -> exp ANDD exp .)
    RIF             reduce using rule 114 (exp -> exp ANDD exp .)
    RWHILE          reduce using rule 114 (exp -> exp ANDD exp .)
    RFOR            reduce using rule 114 (exp -> exp ANDD exp .)
    PARDER          reduce using rule 114 (exp -> exp ANDD exp .)
    COMA            reduce using rule 114 (exp -> exp ANDD exp .)
    PTCOMA          reduce using rule 114 (exp -> exp ANDD exp .)
    DOSPT           reduce using rule 114 (exp -> exp ANDD exp .)
    CORDER          reduce using rule 114 (exp -> exp ANDD exp .)
    RELSE           reduce using rule 114 (exp -> exp ANDD exp .)
    RELSEIF         reduce using rule 114 (exp -> exp ANDD exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ORR             shift and go to state 88

  ! MAS             [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MENOS           [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! DIVISION        [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! POTENCIA        [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MODULO          [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! IGUALIGUAL      [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! DISTINTO        [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MAYOR           [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MENOR           [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MAYORIGUAL      [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! MENORIGUAL      [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! ORR             [ reduce using rule 114 (exp -> exp ANDD exp .) ]
  ! ANDD            [ shift and go to state 87 ]


state 171

    (115) exp -> exp ORR exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    END             reduce using rule 115 (exp -> exp ORR exp .)
    ANDD            reduce using rule 115 (exp -> exp ORR exp .)
    ORR             reduce using rule 115 (exp -> exp ORR exp .)
    PRINT           reduce using rule 115 (exp -> exp ORR exp .)
    PRINTLN         reduce using rule 115 (exp -> exp ORR exp .)
    ID              reduce using rule 115 (exp -> exp ORR exp .)
    GLOBAL          reduce using rule 115 (exp -> exp ORR exp .)
    LOCAL           reduce using rule 115 (exp -> exp ORR exp .)
    RIF             reduce using rule 115 (exp -> exp ORR exp .)
    RWHILE          reduce using rule 115 (exp -> exp ORR exp .)
    RFOR            reduce using rule 115 (exp -> exp ORR exp .)
    PARDER          reduce using rule 115 (exp -> exp ORR exp .)
    COMA            reduce using rule 115 (exp -> exp ORR exp .)
    PTCOMA          reduce using rule 115 (exp -> exp ORR exp .)
    DOSPT           reduce using rule 115 (exp -> exp ORR exp .)
    CORDER          reduce using rule 115 (exp -> exp ORR exp .)
    RELSE           reduce using rule 115 (exp -> exp ORR exp .)
    RELSEIF         reduce using rule 115 (exp -> exp ORR exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86

  ! MAS             [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MENOS           [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! DIVISION        [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! POTENCIA        [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MODULO          [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! IGUALIGUAL      [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! DISTINTO        [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MAYOR           [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MENOR           [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MAYORIGUAL      [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! MENORIGUAL      [ reduce using rule 115 (exp -> exp ORR exp .) ]
  ! ANDD            [ shift and go to state 87 ]
  ! ORR             [ shift and go to state 88 ]


state 172

    (4) instructionsf -> instructionsf instructionf .

    PRINT           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    PRINTLN         reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    ID              reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    GLOBAL          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    LOCAL           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RIF             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RWHILE          reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RFOR            reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    END             reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSE           reduce using rule 4 (instructionsf -> instructionsf instructionf .)
    RELSEIF         reduce using rule 4 (instructionsf -> instructionsf instructionf .)


state 173

    (42) declarationf -> ID IGUAL . exp PTCOMA
    (43) declarationf -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 227

state 174

    (44) declarationf -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> GLOBAL ID . IGUAL exp PTCOMA
    (46) declarationf -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 228
    PTCOMA          shift and go to state 229


state 175

    (47) declarationf -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> LOCAL ID . IGUAL exp PTCOMA
    (49) declarationf -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 230
    PTCOMA          shift and go to state 231


state 176

    (117) exp -> UPPERCASE PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 232
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 177

    (135) exp -> PARIZQ exp PARDER .

    END             reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MAS             reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MENOS           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    DIVISION        reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MODULO          reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MAYOR           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MENOR           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    ANDD            reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    ORR             reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    PRINT           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    ID              reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    LOCAL           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    RIF             reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    RWHILE          reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    RFOR            reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    PARDER          reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    COMA            reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    DOSPT           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    CORDER          reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    RELSE           reduce using rule 135 (exp -> PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 135 (exp -> PARIZQ exp PARDER .)


state 178

    (118) exp -> LOWERCASE PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 233
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 179

    (119) exp -> LOG PARIZQ exp . COMA exp PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    COMA            shift and go to state 234
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 180

    (120) exp -> LOG10 PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 235
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 181

    (121) exp -> SIN PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 236
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 182

    (122) exp -> COS PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 237
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 183

    (123) exp -> TAN PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 238
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 184

    (124) exp -> SQRT PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 239
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 185

    (125) exp -> PARSE PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 240


state 186

    (130) typeDef -> RINT .

    COMA            reduce using rule 130 (typeDef -> RINT .)
    RIN             reduce using rule 130 (typeDef -> RINT .)
    PARDER          reduce using rule 130 (typeDef -> RINT .)
    PTCOMA          reduce using rule 130 (typeDef -> RINT .)


state 187

    (131) typeDef -> RFLOAT .

    COMA            reduce using rule 131 (typeDef -> RFLOAT .)
    RIN             reduce using rule 131 (typeDef -> RFLOAT .)
    PARDER          reduce using rule 131 (typeDef -> RFLOAT .)
    PTCOMA          reduce using rule 131 (typeDef -> RFLOAT .)


state 188

    (132) typeDef -> RSTRING .

    COMA            reduce using rule 132 (typeDef -> RSTRING .)
    RIN             reduce using rule 132 (typeDef -> RSTRING .)
    PARDER          reduce using rule 132 (typeDef -> RSTRING .)
    PTCOMA          reduce using rule 132 (typeDef -> RSTRING .)


state 189

    (133) typeDef -> RCHAR .

    COMA            reduce using rule 133 (typeDef -> RCHAR .)
    RIN             reduce using rule 133 (typeDef -> RCHAR .)
    PARDER          reduce using rule 133 (typeDef -> RCHAR .)
    PTCOMA          reduce using rule 133 (typeDef -> RCHAR .)


state 190

    (134) typeDef -> RBOOL .

    COMA            reduce using rule 134 (typeDef -> RBOOL .)
    RIN             reduce using rule 134 (typeDef -> RBOOL .)
    PARDER          reduce using rule 134 (typeDef -> RBOOL .)
    PTCOMA          reduce using rule 134 (typeDef -> RBOOL .)


state 191

    (126) exp -> TRUNC PARIZQ typeDef . COMA exp PARDER

    COMA            shift and go to state 241


state 192

    (127) exp -> MFLOAT PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 242
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 193

    (128) exp -> MSTRING PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 243
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 194

    (129) exp -> TYPEOF PARIZQ exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 244
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 195

    (146) listArray -> listArray CORIZQ . exp CORDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 245

state 196

    (147) listArray -> CORIZQ exp . CORDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    CORDER          shift and go to state 246
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 197

    (145) exp -> CORIZQ listValues CORDER .

    END             reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MAS             reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MENOS           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MULTIPLICACION  reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    DIVISION        reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    POTENCIA        reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MODULO          reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    IGUALIGUAL      reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    DISTINTO        reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MAYOR           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MENOR           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MAYORIGUAL      reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    MENORIGUAL      reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    ANDD            reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    ORR             reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    PRINT           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    PRINTLN         reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    ID              reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    GLOBAL          reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    LOCAL           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    RIF             reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    RWHILE          reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    RFOR            reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    PARDER          reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    COMA            reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    PTCOMA          reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    DOSPT           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    CORDER          reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    RELSE           reduce using rule 145 (exp -> CORIZQ listValues CORDER .)
    RELSEIF         reduce using rule 145 (exp -> CORIZQ listValues CORDER .)


state 198

    (97) blockc -> instructionsc END . PTCOMA

    PTCOMA          shift and go to state 247


state 199

    (6) instructionsc -> instructionsc instructionc .

    END             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINT           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    PRINTLN         reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    ID              reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    LOCAL           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    GLOBAL          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RIF             reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RWHILE          reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RFOR            reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSE           reduce using rule 6 (instructionsc -> instructionsc instructionc .)
    RELSEIF         reduce using rule 6 (instructionsc -> instructionsc instructionc .)


state 200

    (98) blockc -> END PTCOMA .

    PRINT           reduce using rule 98 (blockc -> END PTCOMA .)
    PRINTLN         reduce using rule 98 (blockc -> END PTCOMA .)
    ID              reduce using rule 98 (blockc -> END PTCOMA .)
    GLOBAL          reduce using rule 98 (blockc -> END PTCOMA .)
    LOCAL           reduce using rule 98 (blockc -> END PTCOMA .)
    FUNCTION        reduce using rule 98 (blockc -> END PTCOMA .)
    RIF             reduce using rule 98 (blockc -> END PTCOMA .)
    RWHILE          reduce using rule 98 (blockc -> END PTCOMA .)
    RFOR            reduce using rule 98 (blockc -> END PTCOMA .)
    $end            reduce using rule 98 (blockc -> END PTCOMA .)
    END             reduce using rule 98 (blockc -> END PTCOMA .)
    RELSE           reduce using rule 98 (blockc -> END PTCOMA .)
    RELSEIF         reduce using rule 98 (blockc -> END PTCOMA .)


state 201

    (50) declarationc -> ID IGUAL . exp PTCOMA
    (51) declarationc -> ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 248

state 202

    (52) declarationc -> LOCAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> LOCAL ID . IGUAL exp PTCOMA
    (54) declarationc -> LOCAL ID . PTCOMA

    IGUAL           shift and go to state 249
    PTCOMA          shift and go to state 250


state 203

    (55) declarationc -> GLOBAL ID . IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> GLOBAL ID . IGUAL exp PTCOMA
    (57) declarationc -> GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 251
    PTCOMA          shift and go to state 252


state 204

    (81) ifStc -> RIF exp . END PTCOMA
    (82) ifStc -> RIF exp . blockifc END PTCOMA
    (83) ifStc -> RIF exp . blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> RIF exp . blockifc RELSE END PTCOMA
    (85) ifStc -> RIF exp . blockifc elseifStc END PTCOMA
    (86) ifStc -> RIF exp . blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> RIF exp . blockifc elseifStc RELSE END PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (100) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 253
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockifc                       shift and go to state 254
    instructionsc                  shift and go to state 255
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 205

    (93) forSt -> RFOR parameter RIN exp . DOSPT exp blockc
    (94) forSt -> RFOR parameter RIN exp . blockc
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (97) blockc -> . instructionsc END PTCOMA
    (98) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    DOSPT           shift and go to state 256
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    END             shift and go to state 122
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockc                         shift and go to state 257
    instructionsc                  shift and go to state 121
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 206

    (63) parameter -> ID DOSPT DOSPT . typeDef
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 258

state 207

    (30) p_print -> PRINT PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 30 (p_print -> PRINT PARIZQ exps PARDER PTCOMA .)


state 208

    (32) exps -> exps COMA exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          reduce using rule 32 (exps -> exps COMA exp .)
    COMA            reduce using rule 32 (exps -> exps COMA exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 209

    (31) p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .

    PRINT           reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    PRINTLN         reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    ID              reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    GLOBAL          reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    LOCAL           reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    FUNCTION        reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RIF             reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RWHILE          reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RFOR            reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    $end            reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    END             reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSE           reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)
    RELSEIF         reduce using rule 31 (p_println -> PRINTLN PARIZQ exps PARDER PTCOMA .)


state 210

    (35) declaration -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 259

state 211

    (68) listValues -> listValues COMA exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          reduce using rule 68 (listValues -> listValues COMA exp .)
    COMA            reduce using rule 68 (listValues -> listValues COMA exp .)
    CORDER          reduce using rule 68 (listValues -> listValues COMA exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 212

    (36) declaration -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 260


state 213

    (37) declaration -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 37 (declaration -> GLOBAL ID IGUAL exp PTCOMA .)


state 214

    (39) declaration -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 261


state 215

    (40) declaration -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    FUNCTION        reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)
    $end            reduce using rule 40 (declaration -> LOCAL ID IGUAL exp PTCOMA .)


state 216

    (95) blockf -> instructionsf END . PTCOMA

    PTCOMA          shift and go to state 262


state 217

    (96) blockf -> END PTCOMA .

    PRINT           reduce using rule 96 (blockf -> END PTCOMA .)
    PRINTLN         reduce using rule 96 (blockf -> END PTCOMA .)
    ID              reduce using rule 96 (blockf -> END PTCOMA .)
    GLOBAL          reduce using rule 96 (blockf -> END PTCOMA .)
    LOCAL           reduce using rule 96 (blockf -> END PTCOMA .)
    FUNCTION        reduce using rule 96 (blockf -> END PTCOMA .)
    RIF             reduce using rule 96 (blockf -> END PTCOMA .)
    RWHILE          reduce using rule 96 (blockf -> END PTCOMA .)
    RFOR            reduce using rule 96 (blockf -> END PTCOMA .)
    $end            reduce using rule 96 (blockf -> END PTCOMA .)


state 218

    (59) parametersFunc -> PARIZQ parameters PARDER .

    END             reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINT           reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    PRINTLN         reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    ID              reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    GLOBAL          reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    LOCAL           reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    RIF             reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    RWHILE          reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)
    RFOR            reduce using rule 59 (parametersFunc -> PARIZQ parameters PARDER .)


state 219

    (61) parameters -> parameters COMA . parameter
    (63) parameter -> . ID DOSPT DOSPT typeDef
    (64) parameter -> . ID

    ID              shift and go to state 58

    parameter                      shift and go to state 263

state 220

    (71) ifSt -> RIF exp blockiff END PTCOMA .

    PRINT           reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    PRINTLN         reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    ID              reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    GLOBAL          reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    LOCAL           reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    FUNCTION        reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    RIF             reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    RWHILE          reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    RFOR            reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    $end            reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    END             reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSE           reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)
    RELSEIF         reduce using rule 71 (ifSt -> RIF exp blockiff END PTCOMA .)


state 221

    (72) ifSt -> RIF exp blockiff RELSE blockiff . END PTCOMA

    END             shift and go to state 264


state 222

    (73) ifSt -> RIF exp blockiff RELSE END . PTCOMA

    PTCOMA          shift and go to state 265


state 223

    (74) ifSt -> RIF exp blockiff elseifSt END . PTCOMA

    PTCOMA          shift and go to state 266


state 224

    (75) ifSt -> RIF exp blockiff elseifSt RELSE . blockiff END PTCOMA
    (76) ifSt -> RIF exp blockiff elseifSt RELSE . END PTCOMA
    (99) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 268
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockiff                       shift and go to state 267
    instructionsf                  shift and go to state 89
    instructionf                   shift and go to state 90
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 225

    (77) elseifSt -> elseifSt conelseif .

    END             reduce using rule 77 (elseifSt -> elseifSt conelseif .)
    RELSE           reduce using rule 77 (elseifSt -> elseifSt conelseif .)
    RELSEIF         reduce using rule 77 (elseifSt -> elseifSt conelseif .)


state 226

    (79) conelseif -> RELSEIF exp . blockiff
    (80) conelseif -> RELSEIF exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (99) blockiff -> . instructionsf
    (4) instructionsf -> . instructionsf instructionf
    (5) instructionsf -> . instructionf
    (16) instructionf -> . p_print
    (17) instructionf -> . p_println
    (18) instructionf -> . declarationf
    (19) instructionf -> . callFuncSt
    (20) instructionf -> . ifSt
    (21) instructionf -> . whileSt
    (22) instructionf -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (42) declarationf -> . ID IGUAL exp PTCOMA
    (43) declarationf -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (44) declarationf -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> . GLOBAL ID IGUAL exp PTCOMA
    (46) declarationf -> . GLOBAL ID PTCOMA
    (47) declarationf -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> . LOCAL ID IGUAL exp PTCOMA
    (49) declarationf -> . LOCAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (70) ifSt -> . RIF exp END PTCOMA
    (71) ifSt -> . RIF exp blockiff END PTCOMA
    (72) ifSt -> . RIF exp blockiff RELSE blockiff END PTCOMA
    (73) ifSt -> . RIF exp blockiff RELSE END PTCOMA
    (74) ifSt -> . RIF exp blockiff elseifSt END PTCOMA
    (75) ifSt -> . RIF exp blockiff elseifSt RELSE blockiff END PTCOMA
    (76) ifSt -> . RIF exp blockiff elseifSt RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             reduce using rule 80 (conelseif -> RELSEIF exp .)
    RELSE           reduce using rule 80 (conelseif -> RELSEIF exp .)
    RELSEIF         reduce using rule 80 (conelseif -> RELSEIF exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 98
    GLOBAL          shift and go to state 99
    LOCAL           shift and go to state 100
    RIF             shift and go to state 18
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockiff                       shift and go to state 269
    instructionsf                  shift and go to state 89
    instructionf                   shift and go to state 90
    p_print                        shift and go to state 91
    p_println                      shift and go to state 92
    declarationf                   shift and go to state 93
    callFuncSt                     shift and go to state 94
    ifSt                           shift and go to state 95
    whileSt                        shift and go to state 96
    forSt                          shift and go to state 97

state 227

    (42) declarationf -> ID IGUAL exp . PTCOMA
    (43) declarationf -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PTCOMA          shift and go to state 270
    DOSPT           shift and go to state 271
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 228

    (44) declarationf -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> GLOBAL ID IGUAL . exp PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 272

state 229

    (46) declarationf -> GLOBAL ID PTCOMA .

    PRINT           reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    END             reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 46 (declarationf -> GLOBAL ID PTCOMA .)


state 230

    (47) declarationf -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> LOCAL ID IGUAL . exp PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 273

state 231

    (49) declarationf -> LOCAL ID PTCOMA .

    PRINT           reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    ID              reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    END             reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 49 (declarationf -> LOCAL ID PTCOMA .)


state 232

    (117) exp -> UPPERCASE PARIZQ exp PARDER .

    END             reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 117 (exp -> UPPERCASE PARIZQ exp PARDER .)


state 233

    (118) exp -> LOWERCASE PARIZQ exp PARDER .

    END             reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAS             reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOS           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DIVISION        reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MODULO          reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYOR           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENOR           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ANDD            reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ORR             reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINT           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    ID              reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    LOCAL           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RIF             reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RWHILE          reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RFOR            reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PARDER          reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    COMA            reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    DOSPT           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    CORDER          reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSE           reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 118 (exp -> LOWERCASE PARIZQ exp PARDER .)


state 234

    (119) exp -> LOG PARIZQ exp COMA . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 274

state 235

    (120) exp -> LOG10 PARIZQ exp PARDER .

    END             reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MAS             reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOS           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    DIVISION        reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MODULO          reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYOR           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MENOR           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    ANDD            reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    ORR             reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINT           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    ID              reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    LOCAL           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    RIF             reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    RWHILE          reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    RFOR            reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    PARDER          reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    COMA            reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    DOSPT           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    CORDER          reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSE           reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 120 (exp -> LOG10 PARIZQ exp PARDER .)


state 236

    (121) exp -> SIN PARIZQ exp PARDER .

    END             reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MAS             reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MENOS           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MODULO          reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MENOR           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    ANDD            reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    ORR             reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    PRINT           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    ID              reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    RIF             reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    RFOR            reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    PARDER          reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    COMA            reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    CORDER          reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    RELSE           reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 121 (exp -> SIN PARIZQ exp PARDER .)


state 237

    (122) exp -> COS PARIZQ exp PARDER .

    END             reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MAS             reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MENOS           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    DIVISION        reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MODULO          reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MAYOR           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MENOR           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    ANDD            reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    ORR             reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    PRINT           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    ID              reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    LOCAL           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    RIF             reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    RWHILE          reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    RFOR            reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    PARDER          reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    COMA            reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    DOSPT           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    CORDER          reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    RELSE           reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 122 (exp -> COS PARIZQ exp PARDER .)


state 238

    (123) exp -> TAN PARIZQ exp PARDER .

    END             reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MAS             reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MENOS           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    DIVISION        reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MODULO          reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MAYOR           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MENOR           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    ANDD            reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    ORR             reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    PRINT           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    ID              reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    LOCAL           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    RIF             reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    RWHILE          reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    RFOR            reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    PARDER          reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    COMA            reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    DOSPT           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    CORDER          reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    RELSE           reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 123 (exp -> TAN PARIZQ exp PARDER .)


state 239

    (124) exp -> SQRT PARIZQ exp PARDER .

    END             reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MAS             reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MENOS           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MODULO          reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MENOR           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    ANDD            reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    ORR             reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    PRINT           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    ID              reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    RIF             reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    RFOR            reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    PARDER          reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    COMA            reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    CORDER          reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    RELSE           reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 124 (exp -> SQRT PARIZQ exp PARDER .)


state 240

    (125) exp -> PARSE PARIZQ typeDef COMA . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 275

state 241

    (126) exp -> TRUNC PARIZQ typeDef COMA . exp PARDER
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 276

state 242

    (127) exp -> MFLOAT PARIZQ exp PARDER .

    END             reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAS             reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOS           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    DIVISION        reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MODULO          reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYOR           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENOR           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    ANDD            reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    ORR             reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINT           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    ID              reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    LOCAL           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    RIF             reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    RWHILE          reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    RFOR            reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    PARDER          reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    COMA            reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    DOSPT           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    CORDER          reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSE           reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 127 (exp -> MFLOAT PARIZQ exp PARDER .)


state 243

    (128) exp -> MSTRING PARIZQ exp PARDER .

    END             reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MAS             reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOS           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    DIVISION        reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MODULO          reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYOR           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MENOR           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    ANDD            reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    ORR             reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINT           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    ID              reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    LOCAL           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    RIF             reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    RWHILE          reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    RFOR            reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    PARDER          reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    COMA            reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    DOSPT           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    CORDER          reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSE           reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 128 (exp -> MSTRING PARIZQ exp PARDER .)


state 244

    (129) exp -> TYPEOF PARIZQ exp PARDER .

    END             reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAS             reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOS           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MULTIPLICACION  reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    DIVISION        reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    POTENCIA        reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MODULO          reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    IGUALIGUAL      reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    DISTINTO        reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYOR           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENOR           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MAYORIGUAL      reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    MENORIGUAL      reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    ANDD            reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    ORR             reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINT           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    PRINTLN         reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    ID              reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    GLOBAL          reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    LOCAL           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    RIF             reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    RWHILE          reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    RFOR            reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    PARDER          reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    COMA            reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    PTCOMA          reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    DOSPT           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    CORDER          reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSE           reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)
    RELSEIF         reduce using rule 129 (exp -> TYPEOF PARIZQ exp PARDER .)


state 245

    (146) listArray -> listArray CORIZQ exp . CORDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    CORDER          shift and go to state 277
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 246

    (147) listArray -> CORIZQ exp CORDER .

    CORIZQ          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    END             reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MAS             reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MENOS           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    DIVISION        reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MODULO          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MAYOR           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MENOR           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    ANDD            reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    ORR             reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    PRINT           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    ID              reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    LOCAL           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    RIF             reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    RWHILE          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    RFOR            reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    PARDER          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    COMA            reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    DOSPT           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    CORDER          reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    RELSE           reduce using rule 147 (listArray -> CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 147 (listArray -> CORIZQ exp CORDER .)


state 247

    (97) blockc -> instructionsc END PTCOMA .

    PRINT           reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    PRINTLN         reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    ID              reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    GLOBAL          reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    LOCAL           reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    FUNCTION        reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    RIF             reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    RWHILE          reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    RFOR            reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    $end            reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    END             reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    RELSE           reduce using rule 97 (blockc -> instructionsc END PTCOMA .)
    RELSEIF         reduce using rule 97 (blockc -> instructionsc END PTCOMA .)


state 248

    (50) declarationc -> ID IGUAL exp . PTCOMA
    (51) declarationc -> ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PTCOMA          shift and go to state 278
    DOSPT           shift and go to state 279
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 249

    (52) declarationc -> LOCAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> LOCAL ID IGUAL . exp PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 280

state 250

    (54) declarationc -> LOCAL ID PTCOMA .

    END             reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    PRINT           reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    PRINTLN         reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    ID              reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    LOCAL           reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    GLOBAL          reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    RIF             reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    RWHILE          reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    RFOR            reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    RELSE           reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)
    RELSEIF         reduce using rule 54 (declarationc -> LOCAL ID PTCOMA .)


state 251

    (55) declarationc -> GLOBAL ID IGUAL . exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> GLOBAL ID IGUAL . exp PTCOMA
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 281

state 252

    (57) declarationc -> GLOBAL ID PTCOMA .

    END             reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    PRINT           reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    PRINTLN         reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    ID              reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    LOCAL           reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    GLOBAL          reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    RIF             reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    RWHILE          reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    RFOR            reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    RELSE           reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)
    RELSEIF         reduce using rule 57 (declarationc -> GLOBAL ID PTCOMA .)


state 253

    (81) ifStc -> RIF exp END . PTCOMA

    PTCOMA          shift and go to state 282


state 254

    (82) ifStc -> RIF exp blockifc . END PTCOMA
    (83) ifStc -> RIF exp blockifc . RELSE blockifc END PTCOMA
    (84) ifStc -> RIF exp blockifc . RELSE END PTCOMA
    (85) ifStc -> RIF exp blockifc . elseifStc END PTCOMA
    (86) ifStc -> RIF exp blockifc . elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> RIF exp blockifc . elseifStc RELSE END PTCOMA
    (88) elseifStc -> . elseifStc conelseifc
    (89) elseifStc -> . conelseifc
    (90) conelseifc -> . RELSEIF exp blockifc
    (91) conelseifc -> . RELSEIF exp

    END             shift and go to state 283
    RELSE           shift and go to state 284
    RELSEIF         shift and go to state 287

    elseifStc                      shift and go to state 285
    conelseifc                     shift and go to state 286

state 255

    (100) blockifc -> instructionsc .
    (6) instructionsc -> instructionsc . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             reduce using rule 100 (blockifc -> instructionsc .)
    RELSE           reduce using rule 100 (blockifc -> instructionsc .)
    RELSEIF         reduce using rule 100 (blockifc -> instructionsc .)
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    instructionc                   shift and go to state 199
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 256

    (93) forSt -> RFOR parameter RIN exp DOSPT . exp blockc
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 288

state 257

    (94) forSt -> RFOR parameter RIN exp blockc .

    PRINT           reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    PRINTLN         reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    ID              reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    GLOBAL          reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    LOCAL           reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    FUNCTION        reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    RIF             reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    RWHILE          reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    RFOR            reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    $end            reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    END             reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    RELSE           reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)
    RELSEIF         reduce using rule 94 (forSt -> RFOR parameter RIN exp blockc .)


state 258

    (63) parameter -> ID DOSPT DOSPT typeDef .

    RIN             reduce using rule 63 (parameter -> ID DOSPT DOSPT typeDef .)
    PARDER          reduce using rule 63 (parameter -> ID DOSPT DOSPT typeDef .)
    COMA            reduce using rule 63 (parameter -> ID DOSPT DOSPT typeDef .)


state 259

    (35) declaration -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 289


state 260

    (36) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 290

state 261

    (39) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 291

state 262

    (95) blockf -> instructionsf END PTCOMA .

    PRINT           reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    PRINTLN         reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    ID              reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    GLOBAL          reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    LOCAL           reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    FUNCTION        reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    RIF             reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    RWHILE          reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    RFOR            reduce using rule 95 (blockf -> instructionsf END PTCOMA .)
    $end            reduce using rule 95 (blockf -> instructionsf END PTCOMA .)


state 263

    (61) parameters -> parameters COMA parameter .

    PARDER          reduce using rule 61 (parameters -> parameters COMA parameter .)
    COMA            reduce using rule 61 (parameters -> parameters COMA parameter .)


state 264

    (72) ifSt -> RIF exp blockiff RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 292


state 265

    (73) ifSt -> RIF exp blockiff RELSE END PTCOMA .

    PRINT           reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    PRINTLN         reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    ID              reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    GLOBAL          reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    LOCAL           reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    FUNCTION        reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RIF             reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RWHILE          reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RFOR            reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    $end            reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    END             reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSE           reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)
    RELSEIF         reduce using rule 73 (ifSt -> RIF exp blockiff RELSE END PTCOMA .)


state 266

    (74) ifSt -> RIF exp blockiff elseifSt END PTCOMA .

    PRINT           reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    PRINTLN         reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    ID              reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    GLOBAL          reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    LOCAL           reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    FUNCTION        reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RIF             reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RWHILE          reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RFOR            reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    $end            reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    END             reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSE           reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)
    RELSEIF         reduce using rule 74 (ifSt -> RIF exp blockiff elseifSt END PTCOMA .)


state 267

    (75) ifSt -> RIF exp blockiff elseifSt RELSE blockiff . END PTCOMA

    END             shift and go to state 293


state 268

    (76) ifSt -> RIF exp blockiff elseifSt RELSE END . PTCOMA

    PTCOMA          shift and go to state 294


state 269

    (79) conelseif -> RELSEIF exp blockiff .

    END             reduce using rule 79 (conelseif -> RELSEIF exp blockiff .)
    RELSE           reduce using rule 79 (conelseif -> RELSEIF exp blockiff .)
    RELSEIF         reduce using rule 79 (conelseif -> RELSEIF exp blockiff .)


state 270

    (42) declarationf -> ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    END             reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 42 (declarationf -> ID IGUAL exp PTCOMA .)


state 271

    (43) declarationf -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 295


state 272

    (44) declarationf -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (45) declarationf -> GLOBAL ID IGUAL exp . PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    DOSPT           shift and go to state 296
    PTCOMA          shift and go to state 297
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 273

    (47) declarationf -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (48) declarationf -> LOCAL ID IGUAL exp . PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    DOSPT           shift and go to state 298
    PTCOMA          shift and go to state 299
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 274

    (119) exp -> LOG PARIZQ exp COMA exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 300
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 275

    (125) exp -> PARSE PARIZQ typeDef COMA exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 301
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 276

    (126) exp -> TRUNC PARIZQ typeDef COMA exp . PARDER
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    PARDER          shift and go to state 302
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 277

    (146) listArray -> listArray CORIZQ exp CORDER .

    CORIZQ          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    END             reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MAS             reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MENOS           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MULTIPLICACION  reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    DIVISION        reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    POTENCIA        reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MODULO          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    IGUALIGUAL      reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    DISTINTO        reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MAYOR           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MENOR           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MAYORIGUAL      reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    MENORIGUAL      reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    ANDD            reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    ORR             reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    PRINT           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    PRINTLN         reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    ID              reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    GLOBAL          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    LOCAL           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    RIF             reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    RWHILE          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    RFOR            reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    PARDER          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    COMA            reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    PTCOMA          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    DOSPT           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    CORDER          reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    RELSE           reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)
    RELSEIF         reduce using rule 146 (listArray -> listArray CORIZQ exp CORDER .)


state 278

    (50) declarationc -> ID IGUAL exp PTCOMA .

    END             reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    ID              reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 50 (declarationc -> ID IGUAL exp PTCOMA .)


state 279

    (51) declarationc -> ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 303


state 280

    (52) declarationc -> LOCAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> LOCAL ID IGUAL exp . PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    DOSPT           shift and go to state 304
    PTCOMA          shift and go to state 305
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 281

    (55) declarationc -> GLOBAL ID IGUAL exp . DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> GLOBAL ID IGUAL exp . PTCOMA
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp

    DOSPT           shift and go to state 306
    PTCOMA          shift and go to state 307
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88


state 282

    (81) ifStc -> RIF exp END PTCOMA .

    END             reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    PRINT           reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    PRINTLN         reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    ID              reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    LOCAL           reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    GLOBAL          reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    RIF             reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    RWHILE          reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    RFOR            reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    RELSE           reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)
    RELSEIF         reduce using rule 81 (ifStc -> RIF exp END PTCOMA .)


state 283

    (82) ifStc -> RIF exp blockifc END . PTCOMA

    PTCOMA          shift and go to state 308


state 284

    (83) ifStc -> RIF exp blockifc RELSE . blockifc END PTCOMA
    (84) ifStc -> RIF exp blockifc RELSE . END PTCOMA
    (100) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 310
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockifc                       shift and go to state 309
    instructionsc                  shift and go to state 255
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 285

    (85) ifStc -> RIF exp blockifc elseifStc . END PTCOMA
    (86) ifStc -> RIF exp blockifc elseifStc . RELSE blockifc END PTCOMA
    (87) ifStc -> RIF exp blockifc elseifStc . RELSE END PTCOMA
    (88) elseifStc -> elseifStc . conelseifc
    (90) conelseifc -> . RELSEIF exp blockifc
    (91) conelseifc -> . RELSEIF exp

    END             shift and go to state 311
    RELSE           shift and go to state 312
    RELSEIF         shift and go to state 287

    conelseifc                     shift and go to state 313

state 286

    (89) elseifStc -> conelseifc .

    END             reduce using rule 89 (elseifStc -> conelseifc .)
    RELSE           reduce using rule 89 (elseifStc -> conelseifc .)
    RELSEIF         reduce using rule 89 (elseifStc -> conelseifc .)


state 287

    (90) conelseifc -> RELSEIF . exp blockifc
    (91) conelseifc -> RELSEIF . exp
    (101) exp -> . exp MAS exp
    (102) exp -> . exp MENOS exp
    (103) exp -> . exp MULTIPLICACION exp
    (104) exp -> . exp DIVISION exp
    (105) exp -> . exp POTENCIA exp
    (106) exp -> . exp MODULO exp
    (107) exp -> . MENOS exp
    (108) exp -> . exp IGUALIGUAL exp
    (109) exp -> . exp DISTINTO exp
    (110) exp -> . exp MAYOR exp
    (111) exp -> . exp MENOR exp
    (112) exp -> . exp MAYORIGUAL exp
    (113) exp -> . exp MENORIGUAL exp
    (114) exp -> . exp ANDD exp
    (115) exp -> . exp ORR exp
    (116) exp -> . NOTT exp
    (117) exp -> . UPPERCASE PARIZQ exp PARDER
    (118) exp -> . LOWERCASE PARIZQ exp PARDER
    (119) exp -> . LOG PARIZQ exp COMA exp PARDER
    (120) exp -> . LOG10 PARIZQ exp PARDER
    (121) exp -> . SIN PARIZQ exp PARDER
    (122) exp -> . COS PARIZQ exp PARDER
    (123) exp -> . TAN PARIZQ exp PARDER
    (124) exp -> . SQRT PARIZQ exp PARDER
    (125) exp -> . PARSE PARIZQ typeDef COMA exp PARDER
    (126) exp -> . TRUNC PARIZQ typeDef COMA exp PARDER
    (127) exp -> . MFLOAT PARIZQ exp PARDER
    (128) exp -> . MSTRING PARIZQ exp PARDER
    (129) exp -> . TYPEOF PARIZQ exp PARDER
    (135) exp -> . PARIZQ exp PARDER
    (136) exp -> . ENTERO
    (137) exp -> . DECIMAL
    (138) exp -> . STRING
    (139) exp -> . CHAR
    (140) exp -> . VERDADERO
    (141) exp -> . FALSO
    (142) exp -> . NULO
    (143) exp -> . ID
    (144) exp -> . ID listArray
    (145) exp -> . CORIZQ listValues CORDER

    MENOS           shift and go to state 31
    NOTT            shift and go to state 32
    UPPERCASE       shift and go to state 33
    LOWERCASE       shift and go to state 35
    LOG             shift and go to state 36
    LOG10           shift and go to state 37
    SIN             shift and go to state 38
    COS             shift and go to state 39
    TAN             shift and go to state 40
    SQRT            shift and go to state 41
    PARSE           shift and go to state 42
    TRUNC           shift and go to state 43
    MFLOAT          shift and go to state 44
    MSTRING         shift and go to state 45
    TYPEOF          shift and go to state 46
    PARIZQ          shift and go to state 34
    ENTERO          shift and go to state 47
    DECIMAL         shift and go to state 48
    STRING          shift and go to state 49
    CHAR            shift and go to state 50
    VERDADERO       shift and go to state 51
    FALSO           shift and go to state 52
    NULO            shift and go to state 53
    ID              shift and go to state 54
    CORIZQ          shift and go to state 55

    exp                            shift and go to state 314

state 288

    (93) forSt -> RFOR parameter RIN exp DOSPT exp . blockc
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (97) blockc -> . instructionsc END PTCOMA
    (98) blockc -> . END PTCOMA
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    END             shift and go to state 122
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockc                         shift and go to state 315
    instructionsc                  shift and go to state 121
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 289

    (35) declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 35 (declaration -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 290

    (36) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 316


state 291

    (39) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 317


state 292

    (72) ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    ID              reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    $end            reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    END             reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 72 (ifSt -> RIF exp blockiff RELSE blockiff END PTCOMA .)


state 293

    (75) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END . PTCOMA

    PTCOMA          shift and go to state 318


state 294

    (76) ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .

    PRINT           reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    PRINTLN         reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    ID              reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    GLOBAL          reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    LOCAL           reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    FUNCTION        reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RIF             reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RWHILE          reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RFOR            reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    $end            reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    END             reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSE           reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)
    RELSEIF         reduce using rule 76 (ifSt -> RIF exp blockiff elseifSt RELSE END PTCOMA .)


state 295

    (43) declarationf -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 319

state 296

    (44) declarationf -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 320


state 297

    (45) declarationf -> GLOBAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 45 (declarationf -> GLOBAL ID IGUAL exp PTCOMA .)


state 298

    (47) declarationf -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 321


state 299

    (48) declarationf -> LOCAL ID IGUAL exp PTCOMA .

    PRINT           reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    END             reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 48 (declarationf -> LOCAL ID IGUAL exp PTCOMA .)


state 300

    (119) exp -> LOG PARIZQ exp COMA exp PARDER .

    END             reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAS             reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOS           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DIVISION        reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    POTENCIA        reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MODULO          reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DISTINTO        reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYOR           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENOR           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    MENORIGUAL      reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ANDD            reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ORR             reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINT           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PRINTLN         reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    ID              reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    GLOBAL          reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    LOCAL           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RIF             reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RWHILE          reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RFOR            reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PARDER          reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    COMA            reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    PTCOMA          reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    DOSPT           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    CORDER          reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSE           reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)
    RELSEIF         reduce using rule 119 (exp -> LOG PARIZQ exp COMA exp PARDER .)


state 301

    (125) exp -> PARSE PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 125 (exp -> PARSE PARIZQ typeDef COMA exp PARDER .)


state 302

    (126) exp -> TRUNC PARIZQ typeDef COMA exp PARDER .

    END             reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAS             reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOS           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MULTIPLICACION  reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DIVISION        reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    POTENCIA        reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MODULO          reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    IGUALIGUAL      reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DISTINTO        reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYOR           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENOR           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MAYORIGUAL      reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    MENORIGUAL      reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ANDD            reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ORR             reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINT           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PRINTLN         reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    ID              reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    GLOBAL          reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    LOCAL           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RIF             reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RWHILE          reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RFOR            reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PARDER          reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    COMA            reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    PTCOMA          reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    DOSPT           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    CORDER          reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSE           reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)
    RELSEIF         reduce using rule 126 (exp -> TRUNC PARIZQ typeDef COMA exp PARDER .)


state 303

    (51) declarationc -> ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 322

state 304

    (52) declarationc -> LOCAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 323


state 305

    (53) declarationc -> LOCAL ID IGUAL exp PTCOMA .

    END             reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 53 (declarationc -> LOCAL ID IGUAL exp PTCOMA .)


state 306

    (55) declarationc -> GLOBAL ID IGUAL exp DOSPT . DOSPT typeDef PTCOMA

    DOSPT           shift and go to state 324


state 307

    (56) declarationc -> GLOBAL ID IGUAL exp PTCOMA .

    END             reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINT           reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    PRINTLN         reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    ID              reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    LOCAL           reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    GLOBAL          reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RIF             reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RWHILE          reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RFOR            reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSE           reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)
    RELSEIF         reduce using rule 56 (declarationc -> GLOBAL ID IGUAL exp PTCOMA .)


state 308

    (82) ifStc -> RIF exp blockifc END PTCOMA .

    END             reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINT           reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    PRINTLN         reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    ID              reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    LOCAL           reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    GLOBAL          reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    RIF             reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    RWHILE          reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    RFOR            reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSE           reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)
    RELSEIF         reduce using rule 82 (ifStc -> RIF exp blockifc END PTCOMA .)


state 309

    (83) ifStc -> RIF exp blockifc RELSE blockifc . END PTCOMA

    END             shift and go to state 325


state 310

    (84) ifStc -> RIF exp blockifc RELSE END . PTCOMA

    PTCOMA          shift and go to state 326


state 311

    (85) ifStc -> RIF exp blockifc elseifStc END . PTCOMA

    PTCOMA          shift and go to state 327


state 312

    (86) ifStc -> RIF exp blockifc elseifStc RELSE . blockifc END PTCOMA
    (87) ifStc -> RIF exp blockifc elseifStc RELSE . END PTCOMA
    (100) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             shift and go to state 329
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockifc                       shift and go to state 328
    instructionsc                  shift and go to state 255
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 313

    (88) elseifStc -> elseifStc conelseifc .

    END             reduce using rule 88 (elseifStc -> elseifStc conelseifc .)
    RELSE           reduce using rule 88 (elseifStc -> elseifStc conelseifc .)
    RELSEIF         reduce using rule 88 (elseifStc -> elseifStc conelseifc .)


state 314

    (90) conelseifc -> RELSEIF exp . blockifc
    (91) conelseifc -> RELSEIF exp .
    (101) exp -> exp . MAS exp
    (102) exp -> exp . MENOS exp
    (103) exp -> exp . MULTIPLICACION exp
    (104) exp -> exp . DIVISION exp
    (105) exp -> exp . POTENCIA exp
    (106) exp -> exp . MODULO exp
    (108) exp -> exp . IGUALIGUAL exp
    (109) exp -> exp . DISTINTO exp
    (110) exp -> exp . MAYOR exp
    (111) exp -> exp . MENOR exp
    (112) exp -> exp . MAYORIGUAL exp
    (113) exp -> exp . MENORIGUAL exp
    (114) exp -> exp . ANDD exp
    (115) exp -> exp . ORR exp
    (100) blockifc -> . instructionsc
    (6) instructionsc -> . instructionsc instructionc
    (7) instructionsc -> . instructionc
    (23) instructionc -> . p_print
    (24) instructionc -> . p_println
    (25) instructionc -> . declarationc
    (26) instructionc -> . callFuncSt
    (27) instructionc -> . ifStc
    (28) instructionc -> . whileSt
    (29) instructionc -> . forSt
    (30) p_print -> . PRINT PARIZQ exps PARDER PTCOMA
    (31) p_println -> . PRINTLN PARIZQ exps PARDER PTCOMA
    (50) declarationc -> . ID IGUAL exp PTCOMA
    (51) declarationc -> . ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (52) declarationc -> . LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (53) declarationc -> . LOCAL ID IGUAL exp PTCOMA
    (54) declarationc -> . LOCAL ID PTCOMA
    (55) declarationc -> . GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA
    (56) declarationc -> . GLOBAL ID IGUAL exp PTCOMA
    (57) declarationc -> . GLOBAL ID PTCOMA
    (65) callFuncSt -> . ID parametersCallFunc PTCOMA
    (81) ifStc -> . RIF exp END PTCOMA
    (82) ifStc -> . RIF exp blockifc END PTCOMA
    (83) ifStc -> . RIF exp blockifc RELSE blockifc END PTCOMA
    (84) ifStc -> . RIF exp blockifc RELSE END PTCOMA
    (85) ifStc -> . RIF exp blockifc elseifStc END PTCOMA
    (86) ifStc -> . RIF exp blockifc elseifStc RELSE blockifc END PTCOMA
    (87) ifStc -> . RIF exp blockifc elseifStc RELSE END PTCOMA
    (92) whileSt -> . RWHILE exp blockc
    (93) forSt -> . RFOR parameter RIN exp DOSPT exp blockc
    (94) forSt -> . RFOR parameter RIN exp blockc

    END             reduce using rule 91 (conelseifc -> RELSEIF exp .)
    RELSE           reduce using rule 91 (conelseifc -> RELSEIF exp .)
    RELSEIF         reduce using rule 91 (conelseifc -> RELSEIF exp .)
    MAS             shift and go to state 75
    MENOS           shift and go to state 76
    MULTIPLICACION  shift and go to state 77
    DIVISION        shift and go to state 78
    POTENCIA        shift and go to state 79
    MODULO          shift and go to state 80
    IGUALIGUAL      shift and go to state 81
    DISTINTO        shift and go to state 82
    MAYOR           shift and go to state 83
    MENOR           shift and go to state 84
    MAYORIGUAL      shift and go to state 85
    MENORIGUAL      shift and go to state 86
    ANDD            shift and go to state 87
    ORR             shift and go to state 88
    PRINT           shift and go to state 12
    PRINTLN         shift and go to state 13
    ID              shift and go to state 131
    LOCAL           shift and go to state 132
    GLOBAL          shift and go to state 133
    RIF             shift and go to state 134
    RWHILE          shift and go to state 19
    RFOR            shift and go to state 20

    blockifc                       shift and go to state 330
    instructionsc                  shift and go to state 255
    instructionc                   shift and go to state 123
    p_print                        shift and go to state 124
    p_println                      shift and go to state 125
    declarationc                   shift and go to state 126
    callFuncSt                     shift and go to state 127
    ifStc                          shift and go to state 128
    whileSt                        shift and go to state 129
    forSt                          shift and go to state 130

state 315

    (93) forSt -> RFOR parameter RIN exp DOSPT exp blockc .

    PRINT           reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    PRINTLN         reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    ID              reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    GLOBAL          reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    LOCAL           reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    FUNCTION        reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RIF             reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RWHILE          reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RFOR            reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    $end            reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    END             reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RELSE           reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)
    RELSEIF         reduce using rule 93 (forSt -> RFOR parameter RIN exp DOSPT exp blockc .)


state 316

    (36) declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 36 (declaration -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 317

    (39) declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    FUNCTION        reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    $end            reduce using rule 39 (declaration -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 318

    (75) ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .

    PRINT           reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    PRINTLN         reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    ID              reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    GLOBAL          reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    LOCAL           reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    FUNCTION        reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RIF             reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RWHILE          reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RFOR            reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    $end            reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    END             reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSE           reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)
    RELSEIF         reduce using rule 75 (ifSt -> RIF exp blockiff elseifSt RELSE blockiff END PTCOMA .)


state 319

    (43) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 331


state 320

    (44) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 332

state 321

    (47) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 333

state 322

    (51) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 334


state 323

    (52) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 335

state 324

    (55) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT . typeDef PTCOMA
    (130) typeDef -> . RINT
    (131) typeDef -> . RFLOAT
    (132) typeDef -> . RSTRING
    (133) typeDef -> . RCHAR
    (134) typeDef -> . RBOOL

    RINT            shift and go to state 186
    RFLOAT          shift and go to state 187
    RSTRING         shift and go to state 188
    RCHAR           shift and go to state 189
    RBOOL           shift and go to state 190

    typeDef                        shift and go to state 336

state 325

    (83) ifStc -> RIF exp blockifc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 337


state 326

    (84) ifStc -> RIF exp blockifc RELSE END PTCOMA .

    END             reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINT           reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    ID              reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    LOCAL           reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RIF             reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RWHILE          reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RFOR            reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSE           reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 84 (ifStc -> RIF exp blockifc RELSE END PTCOMA .)


state 327

    (85) ifStc -> RIF exp blockifc elseifStc END PTCOMA .

    END             reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINT           reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    PRINTLN         reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    ID              reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    LOCAL           reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    GLOBAL          reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RIF             reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RWHILE          reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RFOR            reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSE           reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)
    RELSEIF         reduce using rule 85 (ifStc -> RIF exp blockifc elseifStc END PTCOMA .)


state 328

    (86) ifStc -> RIF exp blockifc elseifStc RELSE blockifc . END PTCOMA

    END             shift and go to state 338


state 329

    (87) ifStc -> RIF exp blockifc elseifStc RELSE END . PTCOMA

    PTCOMA          shift and go to state 339


state 330

    (90) conelseifc -> RELSEIF exp blockifc .

    END             reduce using rule 90 (conelseifc -> RELSEIF exp blockifc .)
    RELSE           reduce using rule 90 (conelseifc -> RELSEIF exp blockifc .)
    RELSEIF         reduce using rule 90 (conelseifc -> RELSEIF exp blockifc .)


state 331

    (43) declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 43 (declarationf -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 332

    (44) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 340


state 333

    (47) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 341


state 334

    (51) declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 51 (declarationc -> ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 335

    (52) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 342


state 336

    (55) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef . PTCOMA

    PTCOMA          shift and go to state 343


state 337

    (83) ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .

    END             reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 83 (ifStc -> RIF exp blockifc RELSE blockifc END PTCOMA .)


state 338

    (86) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END . PTCOMA

    PTCOMA          shift and go to state 344


state 339

    (87) ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .

    END             reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINT           reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    PRINTLN         reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    ID              reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    LOCAL           reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    GLOBAL          reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RIF             reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RWHILE          reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RFOR            reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSE           reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)
    RELSEIF         reduce using rule 87 (ifStc -> RIF exp blockifc elseifStc RELSE END PTCOMA .)


state 340

    (44) declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 44 (declarationf -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 341

    (47) declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    PRINT           reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    END             reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 47 (declarationf -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 342

    (52) declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 52 (declarationc -> LOCAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 343

    (55) declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .

    END             reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINT           reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    PRINTLN         reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    ID              reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    LOCAL           reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    GLOBAL          reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RIF             reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RWHILE          reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RFOR            reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSE           reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)
    RELSEIF         reduce using rule 55 (declarationc -> GLOBAL ID IGUAL exp DOSPT DOSPT typeDef PTCOMA .)


state 344

    (86) ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .

    END             reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINT           reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    PRINTLN         reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    ID              reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    LOCAL           reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    GLOBAL          reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RIF             reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RWHILE          reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RFOR            reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSE           reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)
    RELSEIF         reduce using rule 86 (ifStc -> RIF exp blockifc elseifStc RELSE blockifc END PTCOMA .)

