
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rigthNOTTleftANDDleftORRleftIGUALDISTINTOleftMAYORMENORMAYORIGUALMENORIGUALleftMASMENOSleftMULTIPLICACIONDIVISIONMODULOleftPOTENCIAANDD CHAR DECIMAL DISTINTO DIVISION ENTERO FALSO IGUAL MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO MULTIPLICACION NOTT NULO ORR PARDER PARIZQ POTENCIA PRINT PRINTLN PTCOMA STRING VERDADEROinitial : instructionsinstructions : instructions instruction\n                    | instruction\n    instruction  : p_print \n                    | p_println\n    p_print : PRINT PARIZQ exp PARDER PTCOMA\n    p_println : PRINTLN PARIZQ exp PARDER PTCOMA\n    exp  : exp MAS exp\n            | exp MENOS exp\n            | exp MULTIPLICACION exp\n            | exp DIVISION exp\n            | exp POTENCIA exp\n            | exp MODULO exp\n            | exp MAYOR exp\n            | exp MENOR exp\n            | exp IGUAL exp\n            | exp MAYORIGUAL exp\n            | exp MENORIGUAL exp\n            | exp DISTINTO exp\n            | exp ANDD exp\n            | exp ORR exp\n            | NOTT exp\n    exp : PARIZQ exp PARDERexp  : ENTERO\n    exp  : DECIMAL\n    exp  : STRING\n    exp  : CHAR\n    exp  : VERDADERO\n    exp  : FALSO\n    exp  : NULO\n    '
    
_lr_action_items = {'PRINT':([0,2,3,4,5,8,41,56,],[6,6,-3,-4,-5,-2,-6,-7,]),'PRINTLN':([0,2,3,4,5,8,41,56,],[7,7,-3,-4,-5,-2,-6,-7,]),'$end':([1,2,3,4,5,8,41,56,],[0,-1,-3,-4,-5,-2,-6,-7,]),'PARIZQ':([6,7,9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[9,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NOTT':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ENTERO':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECIMAL':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'STRING':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'CHAR':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'VERDADERO':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'FALSO':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'NULO':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'PARDER':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[23,-24,-25,-26,-27,-28,-29,-30,39,40,-22,-23,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'MAS':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[24,-24,-25,-26,-27,-28,-29,-30,24,24,24,-23,-8,-9,-10,-11,-12,-13,24,24,24,24,24,24,24,24,]),'MENOS':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[25,-24,-25,-26,-27,-28,-29,-30,25,25,25,-23,-8,-9,-10,-11,-12,-13,25,25,25,25,25,25,25,25,]),'MULTIPLICACION':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[26,-24,-25,-26,-27,-28,-29,-30,26,26,26,-23,26,26,-10,-11,-12,-13,26,26,26,26,26,26,26,26,]),'DIVISION':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[27,-24,-25,-26,-27,-28,-29,-30,27,27,27,-23,27,27,-10,-11,-12,-13,27,27,27,27,27,27,27,27,]),'POTENCIA':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[28,-24,-25,-26,-27,-28,-29,-30,28,28,28,-23,28,28,28,28,-12,28,28,28,28,28,28,28,28,28,]),'MODULO':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[29,-24,-25,-26,-27,-28,-29,-30,29,29,29,-23,29,29,-10,-11,-12,-13,29,29,29,29,29,29,29,29,]),'MAYOR':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[30,-24,-25,-26,-27,-28,-29,-30,30,30,30,-23,-8,-9,-10,-11,-12,-13,-14,-15,30,-17,-18,30,30,30,]),'MENOR':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[31,-24,-25,-26,-27,-28,-29,-30,31,31,31,-23,-8,-9,-10,-11,-12,-13,-14,-15,31,-17,-18,31,31,31,]),'IGUAL':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[32,-24,-25,-26,-27,-28,-29,-30,32,32,32,-23,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,32,32,]),'MAYORIGUAL':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[33,-24,-25,-26,-27,-28,-29,-30,33,33,33,-23,-8,-9,-10,-11,-12,-13,-14,-15,33,-17,-18,33,33,33,]),'MENORIGUAL':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[34,-24,-25,-26,-27,-28,-29,-30,34,34,34,-23,-8,-9,-10,-11,-12,-13,-14,-15,34,-17,-18,34,34,34,]),'DISTINTO':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[35,-24,-25,-26,-27,-28,-29,-30,35,35,35,-23,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,35,35,]),'ANDD':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[36,-24,-25,-26,-27,-28,-29,-30,36,36,36,-23,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'ORR':([12,14,15,16,17,18,19,20,21,22,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,],[37,-24,-25,-26,-27,-28,-29,-30,37,37,37,-23,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,37,-21,]),'PTCOMA':([23,39,],[41,56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initial':([0,],[1,]),'instructions':([0,],[2,]),'instruction':([0,2,],[3,8,]),'p_print':([0,2,],[4,4,]),'p_println':([0,2,],[5,5,]),'exp':([9,10,11,13,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[12,21,22,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> initial","S'",1,None,None,None),
  ('initial -> instructions','initial',1,'p_initial','Gramatica.py',131),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Gramatica.py',138),
  ('instructions -> instruction','instructions',1,'p_instructions','Gramatica.py',139),
  ('instruction -> p_print','instruction',1,'p_instruction','Gramatica.py',149),
  ('instruction -> p_println','instruction',1,'p_instruction','Gramatica.py',150),
  ('p_print -> PRINT PARIZQ exp PARDER PTCOMA','p_print',5,'p_print','Gramatica.py',156),
  ('p_println -> PRINTLN PARIZQ exp PARDER PTCOMA','p_println',5,'p_println','Gramatica.py',162),
  ('exp -> exp MAS exp','exp',3,'p_exp_aritmetica','Gramatica.py',168),
  ('exp -> exp MENOS exp','exp',3,'p_exp_aritmetica','Gramatica.py',169),
  ('exp -> exp MULTIPLICACION exp','exp',3,'p_exp_aritmetica','Gramatica.py',170),
  ('exp -> exp DIVISION exp','exp',3,'p_exp_aritmetica','Gramatica.py',171),
  ('exp -> exp POTENCIA exp','exp',3,'p_exp_aritmetica','Gramatica.py',172),
  ('exp -> exp MODULO exp','exp',3,'p_exp_aritmetica','Gramatica.py',173),
  ('exp -> exp MAYOR exp','exp',3,'p_exp_aritmetica','Gramatica.py',174),
  ('exp -> exp MENOR exp','exp',3,'p_exp_aritmetica','Gramatica.py',175),
  ('exp -> exp IGUAL exp','exp',3,'p_exp_aritmetica','Gramatica.py',176),
  ('exp -> exp MAYORIGUAL exp','exp',3,'p_exp_aritmetica','Gramatica.py',177),
  ('exp -> exp MENORIGUAL exp','exp',3,'p_exp_aritmetica','Gramatica.py',178),
  ('exp -> exp DISTINTO exp','exp',3,'p_exp_aritmetica','Gramatica.py',179),
  ('exp -> exp ANDD exp','exp',3,'p_exp_aritmetica','Gramatica.py',180),
  ('exp -> exp ORR exp','exp',3,'p_exp_aritmetica','Gramatica.py',181),
  ('exp -> NOTT exp','exp',2,'p_exp_aritmetica','Gramatica.py',182),
  ('exp -> PARIZQ exp PARDER','exp',3,'p_exp_agrupacion','Gramatica.py',218),
  ('exp -> ENTERO','exp',1,'p_exp_valor_entero','Gramatica.py',224),
  ('exp -> DECIMAL','exp',1,'p_exp_valor_decimal','Gramatica.py',231),
  ('exp -> STRING','exp',1,'p_exp_valor_string','Gramatica.py',238),
  ('exp -> CHAR','exp',1,'p_exp_valor_char','Gramatica.py',245),
  ('exp -> VERDADERO','exp',1,'p_exp_valor_verdadero','Gramatica.py',252),
  ('exp -> FALSO','exp',1,'p_exp_valor_falso','Gramatica.py',259),
  ('exp -> NULO','exp',1,'p_exp_valor_nulo','Gramatica.py',266),
]
